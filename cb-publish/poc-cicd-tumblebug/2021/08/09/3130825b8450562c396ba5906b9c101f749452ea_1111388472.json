{"version":"1.0","title":"CB-SPIDER CI/CD Dashboard","lint":{"deadcode":{"run":1,"cnt":8,"details":"src/core/mcir/image_test.go:46:15: CreateImageTable not declared by package common (typecheck)\n\terr = common.CreateImageTable()\n\t             ^\nsrc/core/mcir/spec_test.go:46:15: CreateSpecTable not declared by package common (typecheck)\n\terr = common.CreateSpecTable()\n\t             ^\nsrc/core/mcis/monitor.go:30:7: `monMetricAll` is unused (deadcode)\nconst monMetricAll string = \"all\"\n      ^\nsrc/core/mcis/monitor.go:32:7: `monMetricCpufreq` is unused (deadcode)\nconst monMetricCpufreq string = \"cpufreq\"\n      ^\nsrc/core/mcis/monitor.go:35:7: `monMetricSwap` is unused (deadcode)\nconst monMetricSwap string = \"swap\"\n      ^\nsrc/core/mcis/monitor.go:37:7: `monMetricDiskio` is unused (deadcode)\nconst monMetricDiskio string = \"diskio\"\n      ^\nsrc/api/rest/server/server.go:30:2: `warningColor` is unused (deadcode)\n\twarningColor = \"\\033[1;33m%s\\033[0m\"\n\t^\nsrc/api/rest/server/server.go:31:2: `errorColor` is unused (deadcode)\n\terrorColor   = \"\\033[1;31m%s\\033[0m\"\n\t^\nsrc/api/rest/server/server.go:32:2: `debugColor` is unused (deadcode)\n\tdebugColor   = \"\\033[0;36m%s\\033[0m\"\n\t^\nsrc/api/grpc/cbadm/cmd/root.go:32:2: `option` is unused (deadcode)\n\toption string\n\t^\n"},"errcheck":{"run":1,"cnt":253,"details":"src/core/mcir/image_test.go:46:15: CreateImageTable not declared by package common (typecheck)\n\terr = common.CreateImageTable()\n\t             ^\nsrc/core/mcir/spec_test.go:46:15: CreateSpecTable not declared by package common (typecheck)\n\terr = common.CreateSpecTable()\n\t             ^\nsrc/core/common/config.go:51:22: Error return value is not checked (errcheck)\n\tUpdateGlobalVariable(content.Id)\n\t                    ^\nsrc/core/common/config.go:137:17: Error return value of `CBStore.Delete` is not checked (errcheck)\n\t\tCBStore.Delete(key)\n\t\t              ^\nsrc/core/common/config.go:263:13: Error return value is not checked (errcheck)\n\t\tInitConfig(v)\n\t\t          ^\nsrc/core/common/utility.go:173:17: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\tjson.Unmarshal([]byte(keyValue.Value), &content)\n\t\t              ^\nsrc/core/common/utility.go:177:17: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\tjson.Unmarshal([]byte(keyValue.Value), &content)\n\t\t              ^\nsrc/core/common/utility.go:181:17: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\tjson.Unmarshal([]byte(keyValue.Value), &content)\n\t\t              ^\nsrc/core/common/utility.go:185:17: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\tjson.Unmarshal([]byte(keyValue.Value), &content)\n\t\t              ^\nsrc/core/common/utility.go:193:17: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\tjson.Unmarshal([]byte(keyValue.Value), &content)\n\t\t              ^\nsrc/core/mcis/control.go:775:18: Error return value of `csvWriter.Write` is not checked (errcheck)\n\t\tcsvWriter.Write(strsTmp)\n\t\t               ^\nsrc/core/mcis/control.go:824:21: Error return value of `csvWriter2.WriteAll` is not checked (errcheck)\n\tcsvWriter2.WriteAll(mrttArray)\n\t                   ^\nsrc/core/mcis/control.go:1057:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &mcisTmp)\n\t              ^\nsrc/core/mcis/control.go:1082:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &vmTmp)\n\t              ^\nsrc/core/mcis/control.go:1304:34: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\t\tmcir.UpdateAssociatedObjectList(nsId, common.StrImage, vmInfo.ImageId, common.StrDelete, vmKey)\n\t\t                               ^\nsrc/core/mcis/control.go:1305:34: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\t\tmcir.UpdateAssociatedObjectList(nsId, common.StrSpec, vmInfo.SpecId, common.StrDelete, vmKey)\n\t\t                               ^\nsrc/core/mcis/control.go:1306:34: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\t\tmcir.UpdateAssociatedObjectList(nsId, common.StrSSHKey, vmInfo.SshKeyId, common.StrDelete, vmKey)\n\t\t                               ^\nsrc/core/mcis/control.go:1307:34: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\t\tmcir.UpdateAssociatedObjectList(nsId, common.StrVNet, vmInfo.VNetId, common.StrDelete, vmKey)\n\t\t                               ^\nsrc/core/mcis/control.go:1310:35: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\t\t\tmcir.UpdateAssociatedObjectList(nsId, common.StrSecurityGroup, v2, common.StrDelete, vmKey)\n\t\t\t                               ^\nsrc/core/mcis/control.go:1393:33: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\tmcir.UpdateAssociatedObjectList(nsId, common.StrImage, vmInfo.ImageId, common.StrDelete, key)\n\t                               ^\nsrc/core/mcis/control.go:1394:33: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\tmcir.UpdateAssociatedObjectList(nsId, common.StrSpec, vmInfo.SpecId, common.StrDelete, key)\n\t                               ^\nsrc/core/mcis/control.go:1395:33: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\tmcir.UpdateAssociatedObjectList(nsId, common.StrSSHKey, vmInfo.SshKeyId, common.StrDelete, key)\n\t                               ^\nsrc/core/mcis/control.go:1396:33: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\tmcir.UpdateAssociatedObjectList(nsId, common.StrVNet, vmInfo.VNetId, common.StrDelete, key)\n\t                               ^\nsrc/core/mcis/control.go:1399:34: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\t\tmcir.UpdateAssociatedObjectList(nsId, common.StrSecurityGroup, v2, common.StrDelete, key)\n\t\t                               ^\nsrc/core/mcis/control.go:1443:17: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\tjson.Unmarshal([]byte(keyValue2.Value), &content2)\n\t\t              ^\nsrc/core/mcis/control.go:1687:17: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\tjson.Unmarshal([]byte(keyValue.Value), &mcisTmp)\n\t\t              ^\nsrc/core/mcis/control.go:1722:18: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\t\tjson.Unmarshal([]byte(vmKeyValue.Value), &vmTmp)\n\t\t\t              ^\nsrc/core/mcis/control.go:2011:16: Error return value is not checked (errcheck)\n\tgo AddVmToMcis(&wg, nsId, mcisId, vmInfoData)\n\t              ^\nsrc/core/mcis/control.go:2179:17: Error return value is not checked (errcheck)\n\t\tgo AddVmToMcis(&wg, nsId, mcisId, &vmInfoData)\n\t\t              ^\nsrc/core/mcis/control.go:2263:12: Error return value is not checked (errcheck)\n\t\tControlVm(nsId, mcisId, vmId, ActionSuspend)\n\t\t         ^\nsrc/core/mcis/control.go:2271:12: Error return value is not checked (errcheck)\n\t\tControlVm(nsId, mcisId, vmId, ActionResume)\n\t\t         ^\nsrc/core/mcis/control.go:2279:12: Error return value is not checked (errcheck)\n\t\tControlVm(nsId, mcisId, vmId, ActionReboot)\n\t\t         ^\nsrc/core/mcis/control.go:2287:12: Error return value is not checked (errcheck)\n\t\tControlVm(nsId, mcisId, vmId, ActionTerminate)\n\t\t         ^\nsrc/core/mcis/control.go:2394:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(vmKeyValue.Value), &vmTmp)\n\t              ^\nsrc/core/mcis/control.go:2550:18: Error return value is not checked (errcheck)\n\t\t\tgo AddVmToMcis(&wg, nsId, mcisId, &vmInfoData)\n\t\t\t              ^\nsrc/core/mcis/control.go:3014:33: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\tmcir.UpdateAssociatedObjectList(nsId, common.StrImage, vmInfoData.ImageId, common.StrAdd, vmKey)\n\t                               ^\nsrc/core/mcis/control.go:3015:33: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\tmcir.UpdateAssociatedObjectList(nsId, common.StrSpec, vmInfoData.SpecId, common.StrAdd, vmKey)\n\t                               ^\nsrc/core/mcis/control.go:3016:33: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\tmcir.UpdateAssociatedObjectList(nsId, common.StrSSHKey, vmInfoData.SshKeyId, common.StrAdd, vmKey)\n\t                               ^\nsrc/core/mcis/control.go:3017:33: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\tmcir.UpdateAssociatedObjectList(nsId, common.StrVNet, vmInfoData.VNetId, common.StrAdd, vmKey)\n\t                               ^\nsrc/core/mcis/control.go:3020:34: Error return value of `mcir.UpdateAssociatedObjectList` is not checked (errcheck)\n\t\tmcir.UpdateAssociatedObjectList(nsId, common.StrSecurityGroup, v2, common.StrAdd, vmKey)\n\t\t                               ^\nsrc/core/mcis/control.go:3079:12: Error return value is not checked (errcheck)\n\t\tControlVm(nsId, mcisId, v, action)\n\t\t         ^\nsrc/core/mcis/control.go:3197:20: Error return value is not checked (errcheck)\n\t\tgo ControlVmAsync(&wg, nsId, mcisId, v, action, &results)\n\t\t                 ^\nsrc/core/mcis/control.go:3451:21: Error return value is not checked (errcheck)\n\t\t\t\tUpdateVmPublicIp(nsId, mcisId, temp)\n\t\t\t\t                ^\nsrc/core/mcis/control.go:3475:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &content)\n\t              ^\nsrc/core/mcis/control.go:3662:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &mcisTmp)\n\t              ^\nsrc/core/mcis/control.go:3714:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &mcisStatus)\n\t              ^\nsrc/core/mcis/control.go:3717:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &mcisTmp)\n\t              ^\nsrc/core/mcis/control.go:3733:22: Error return value is not checked (errcheck)\n\t\tgo GetVmStatusAsync(&wg, nsId, mcisId, v, &mcisStatus)\n\t\t                   ^\nsrc/core/mcis/control.go:3865:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &vmTmp)\n\t              ^\nsrc/core/mcis/control.go:4325:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &content)\n\t              ^\nsrc/core/mcis/control.go:4336:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &keyContent)\n\t              ^\nsrc/core/mcis/control.go:4350:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &content)\n\t              ^\nsrc/core/mcis/control.go:4356:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &tmpSshKeyInfo)\n\t              ^\nsrc/core/mcis/control.go:4384:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &content)\n\t              ^\nsrc/core/mcis/control.go:4402:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &content)\n\t              ^\nsrc/core/mcis/orchestration.go:108:18: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\t\tjson.Unmarshal([]byte(keyValue.Value), &mcisPolicyTmp)\n\t\t\t              ^\nsrc/core/mcis/orchestration.go:475:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(keyValue.Value), &mcisPolicyTmp)\n\t              ^\nsrc/core/mcis/orchestration.go:498:17: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\tjson.Unmarshal([]byte(keyValue.Value), &mcisTmp)\n\t\t              ^\nsrc/api/rest/server/common/utility.go:258:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(content), &contentJSON)\n\t              ^\nsrc/api/grpc/request/common/utility.go:209:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal([]byte(resp.Item), &contentJSON)\n\t              ^\nsrc/main.go:56:29: Error return value of `common.UpdateGlobalVariable` is not checked (errcheck)\n\tcommon.UpdateGlobalVariable(common.StrDRAGONFLY_REST_URL)\n\t                           ^\nsrc/main.go:57:29: Error return value of `common.UpdateGlobalVariable` is not checked (errcheck)\n\tcommon.UpdateGlobalVariable(common.StrSPIDER_REST_URL)\n\t                           ^\nsrc/main.go:58:29: Error return value of `common.UpdateGlobalVariable` is not checked (errcheck)\n\tcommon.UpdateGlobalVariable(common.StrAUTOCONTROL_DURATION_MS)\n\t                           ^\nsrc/api/grpc/request/mcirapi.go:450:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:457:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:479:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:486:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:508:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:511:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:533:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:536:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:558:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:561:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:583:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:586:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:608:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:611:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:633:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:636:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:658:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:665:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:687:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:690:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:712:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:715:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:737:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:744:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:766:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:769:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:791:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:794:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:816:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:819:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:841:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:844:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:866:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:869:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:891:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:898:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:920:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:927:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:949:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:952:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:974:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:977:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:999:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1002:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1024:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1027:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1049:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1052:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1074:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1077:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1139:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1142:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1164:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1167:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1189:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1196:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1218:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1221:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1243:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1246:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1268:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1271:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1293:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1296:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1318:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1321:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1343:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1350:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1372:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1375:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1397:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1400:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1422:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1425:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1447:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1450:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1472:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1475:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1497:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcirapi.go:1500:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:553:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:560:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:582:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:585:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:607:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:610:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:632:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:635:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:657:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:660:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:682:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:685:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:707:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:710:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:732:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:735:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:757:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:760:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:782:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:785:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:807:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:814:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:836:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:843:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:865:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:868:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:890:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:893:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:915:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:918:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:940:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:943:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:965:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:972:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:994:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1001:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1023:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1030:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1052:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1059:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1081:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1088:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1110:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1117:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1139:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1142:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1164:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1167:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1189:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1192:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1214:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1217:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1239:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1242:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1264:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1271:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1293:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1296:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1318:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1321:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1343:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1346:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1368:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/mcisapi.go:1371:13: Error return value of `m.SetInType` is not checked (errcheck)\n\tm.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/nsapi.go:285:14: Error return value of `ns.SetInType` is not checked (errcheck)\n\tns.SetInType(\"json\")\n\t            ^\nsrc/api/grpc/request/nsapi.go:292:14: Error return value of `ns.SetInType` is not checked (errcheck)\n\tns.SetInType(holdType)\n\t            ^\nsrc/api/grpc/request/nsapi.go:332:14: Error return value of `ns.SetInType` is not checked (errcheck)\n\tns.SetInType(\"json\")\n\t            ^\nsrc/api/grpc/request/nsapi.go:335:14: Error return value of `ns.SetInType` is not checked (errcheck)\n\tns.SetInType(holdType)\n\t            ^\nsrc/api/grpc/request/nsapi.go:357:14: Error return value of `ns.SetInType` is not checked (errcheck)\n\tns.SetInType(\"json\")\n\t            ^\nsrc/api/grpc/request/nsapi.go:360:14: Error return value of `ns.SetInType` is not checked (errcheck)\n\tns.SetInType(holdType)\n\t            ^\nsrc/api/grpc/request/nsapi.go:391:14: Error return value of `ns.SetInType` is not checked (errcheck)\n\tns.SetInType(\"json\")\n\t            ^\nsrc/api/grpc/request/nsapi.go:394:14: Error return value of `ns.SetInType` is not checked (errcheck)\n\tns.SetInType(holdType)\n\t            ^\nsrc/api/grpc/request/tbutilapi.go:294:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:297:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:328:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:331:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:353:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:360:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:391:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:394:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:416:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:419:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:450:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:453:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:475:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:478:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:500:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:503:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:525:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:528:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:550:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:553:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(holdType)\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:575:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(\"json\")\n\t           ^\nsrc/api/grpc/request/tbutilapi.go:578:13: Error return value of `u.SetInType` is not checked (errcheck)\n\tu.SetInType(holdType)\n\t           ^\nsrc/api/grpc/cbadm/proc/connectinfos.go:69:16: Error return value of `cim.SetOutType` is not checked (errcheck)\n\tcim.SetOutType(\"json\")\n\t              ^\nsrc/api/grpc/cbadm/proc/connectinfos.go:70:22: Error return value of `cim.SetOutType` is not checked (errcheck)\n\tdefer cim.SetOutType(holdType)\n\t                    ^\nsrc/api/grpc/cbadm/proc/connectinfos.go:156:16: Error return value of `cim.SetOutType` is not checked (errcheck)\n\tcim.SetOutType(\"json\")\n\t              ^\nsrc/api/grpc/cbadm/proc/connectinfos.go:157:22: Error return value of `cim.SetOutType` is not checked (errcheck)\n\tdefer cim.SetOutType(holdType)\n\t                    ^\nsrc/api/grpc/cbadm/proc/keypair.go:23:17: Error return value of `mcir.SetOutType` is not checked (errcheck)\n\tmcir.SetOutType(\"json\")\n\t               ^\nsrc/api/grpc/cbadm/proc/keypair.go:26:17: Error return value of `mcir.SetOutType` is not checked (errcheck)\n\tmcir.SetOutType(holdType)\n\t               ^\nsrc/api/grpc/cbadm/proc/mcis.go:30:17: Error return value of `mcis.SetOutType` is not checked (errcheck)\n\tmcis.SetOutType(\"json\")\n\t               ^\nsrc/api/grpc/cbadm/proc/mcis.go:31:23: Error return value of `mcis.SetOutType` is not checked (errcheck)\n\tdefer mcis.SetOutType(holdType)\n\t                     ^\nsrc/api/grpc/cbadm/cmd/gclient.go:153:16: Error return value of `cim.SetInType` is not checked (errcheck)\n\t\tcim.SetInType(inType)\n\t\t             ^\nsrc/api/grpc/cbadm/cmd/gclient.go:154:17: Error return value of `cim.SetOutType` is not checked (errcheck)\n\t\tcim.SetOutType(outType)\n\t\t              ^\nsrc/api/grpc/cbadm/cmd/gclient.go:157:15: Error return value of `ns.SetInType` is not checked (errcheck)\n\t\tns.SetInType(inType)\n\t\t            ^\nsrc/api/grpc/cbadm/cmd/gclient.go:158:16: Error return value of `ns.SetOutType` is not checked (errcheck)\n\t\tns.SetOutType(outType)\n\t\t             ^\nsrc/api/grpc/cbadm/cmd/gclient.go:161:17: Error return value of `mcir.SetInType` is not checked (errcheck)\n\t\tmcir.SetInType(inType)\n\t\t              ^\nsrc/api/grpc/cbadm/cmd/gclient.go:162:18: Error return value of `mcir.SetOutType` is not checked (errcheck)\n\t\tmcir.SetOutType(outType)\n\t\t               ^\nsrc/api/grpc/cbadm/cmd/gclient.go:165:17: Error return value of `mcis.SetInType` is not checked (errcheck)\n\t\tmcis.SetInType(inType)\n\t\t              ^\nsrc/api/grpc/cbadm/cmd/gclient.go:166:18: Error return value of `mcis.SetOutType` is not checked (errcheck)\n\t\tmcis.SetOutType(outType)\n\t\t               ^\nsrc/api/grpc/cbadm/cmd/gclient.go:169:19: Error return value of `tbutil.SetInType` is not checked (errcheck)\n\t\ttbutil.SetInType(inType)\n\t\t                ^\nsrc/api/grpc/cbadm/cmd/gclient.go:170:20: Error return value of `tbutil.SetOutType` is not checked (errcheck)\n\t\ttbutil.SetOutType(outType)\n\t\t                 ^\n"},"staticcheck":{"run":1,"cnt":29,"details":"src/core/mcir/image_test.go:46:15: CreateImageTable not declared by package common (typecheck)\n\terr = common.CreateImageTable()\n\t             ^\nsrc/core/mcir/spec_test.go:46:15: CreateSpecTable not declared by package common (typecheck)\n\terr = common.CreateSpecTable()\n\t             ^\nsrc/core/mcis/orchestration.go:108:35: SA5011: possible nil pointer dereference (staticcheck)\n\t\t\tjson.Unmarshal([]byte(keyValue.Value), &mcisPolicyTmp)\n\t\t\t                               ^\nsrc/core/mcis/orchestration.go:101:7: SA5011(related information): this check suggests that the pointer can be nil (staticcheck)\n\t\t\tif keyValue == nil {\n\t\t\t   ^\nsrc/core/mcis/control.go:759:2: SA5001: should check returned error before deferring file.Close() (staticcheck)\n\tdefer file.Close()\n\t^\nsrc/core/mcis/control.go:780:2: SA5001: should check returned error before deferring file2.Close() (staticcheck)\n\tdefer file2.Close()\n\t^\nsrc/core/mcis/control.go:3567:3: SA5001: should check returned error before deferring res.Body.Close() (staticcheck)\n\t\tdefer res.Body.Close()\n\t\t^\nsrc/core/mcis/control.go:4512:3: SA5001: should check returned error before deferring file.Close() (staticcheck)\n\t\tdefer file.Close()\n\t\t^\nsrc/api/rest/server/server.go:91:2: SA1006: printf-style function with dynamic format string and no further arguments should use print-style function instead (staticcheck)\n\tfmt.Printf(banner)\n\t^\nsrc/api/grpc/interceptors/jaegertracer/jaegertracer.go:25:25: SA1019: cfg.New is deprecated: use NewTracer() function (staticcheck)\n\ttracer, closer, err := cfg.New(jcConf.ServiceName, config.Logger(jaeger.NullLogger))\n\t                       ^\nsrc/api/grpc/common/cbserver.go:106:21: SA1019: prometheus.NewProcessCollector is deprecated: Use collectors.NewProcessCollector instead. (staticcheck)\n\t\t\treg.MustRegister(prometheus.NewProcessCollector(prometheus.ProcessCollectorOpts{}))\n\t\t\t                 ^\nsrc/api/grpc/common/cbserver.go:107:21: SA1019: prometheus.NewGoCollector is deprecated: Use collectors.NewGoCollector instead. (staticcheck)\n\t\t\treg.MustRegister(prometheus.NewGoCollector())\n\t\t\t                 ^\nsrc/core/mcis/control.go:2775:10: SA4017: Errorf is a pure function but its return value is ignored (staticcheck)\n\t\terr := fmt.Errorf(\"\")\n\t\t       ^\nsrc/core/mcis/control.go:2912:9: SA4017: Errorf is a pure function but its return value is ignored (staticcheck)\n\t\terr = fmt.Errorf(\"\")\n\t\t      ^\nsrc/core/mcis/orchestration.go:83:9: SA4017: Errorf is a pure function but its return value is ignored (staticcheck)\n\t\terr = fmt.Errorf(\"an error occurred while getting namespaces' list: \" + err.Error())\n\t\t      ^\nsrc/core/mcis/control.go:719:3: SA4006: this value of `err` is never used (staticcheck)\n\t\tcontent, err = BenchmarkAction(nsId, mcisId, v, option)\n\t\t^\nsrc/core/mcis/control.go:758:2: SA4006: this value of `err` is never used (staticcheck)\n\tfile, err := os.OpenFile(\"benchmarking.csv\", os.O_CREATE|os.O_WRONLY, 0777)\n\t^\nsrc/core/mcis/control.go:761:2: SA4006: this value of `strsTmp` is never used (staticcheck)\n\tstrsTmp := []string{}\n\t^\nsrc/core/mcis/control.go:779:2: SA4006: this value of `err` is never used (staticcheck)\n\tfile2, err := os.OpenFile(\"rttmap.csv\", os.O_CREATE|os.O_WRONLY, 0777)\n\t^\nsrc/core/mcis/control.go:3391:6: SA4006: this value of `err` is never used (staticcheck)\n\t\t\t\t\tresult, err = ccm.TerminateVMByParam(temp.ConnectionName, cspVmId, \"false\")\n\t\t\t\t\t^\nsrc/core/mcis/control.go:3401:6: SA4006: this value of `err` is never used (staticcheck)\n\t\t\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"reboot\")\n\t\t\t\t\t^\nsrc/core/mcis/control.go:3411:6: SA4006: this value of `err` is never used (staticcheck)\n\t\t\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"suspend\")\n\t\t\t\t\t^\nsrc/core/mcis/control.go:3421:6: SA4006: this value of `err` is never used (staticcheck)\n\t\t\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"resume\")\n\t\t\t\t\t^\nsrc/core/mcis/control.go:3565:3: SA4006: this value of `err` is never used (staticcheck)\n\t\tres, err := client.Do(req)\n\t\t^\nsrc/core/mcis/control.go:3568:3: SA4006: this value of `err` is never used (staticcheck)\n\t\tbody, err := ioutil.ReadAll(res.Body)\n\t\t^\nsrc/core/mcis/control.go:4258:3: SA4006: this value of `err` is never used (staticcheck)\n\t\tbody, err := ioutil.ReadAll(res.Body)\n\t\t^\nsrc/core/mcis/monitor.go:167:2: SA4006: this value of `err` is never used (staticcheck)\n\treq, err := http.NewRequest(method, url, payload)\n\t^\nsrc/core/mcis/plan.go:150:4: SA4006: this value of `err` is never used (staticcheck)\n\t\t\tprioritySpecs, err = RecommendVmLocation(nsId, &filteredSpecs, &v.Parameter)\n\t\t\t^\nsrc/core/mcis/sshrun.go:100:2: SA4006: this value of `err` is never used (staticcheck)\n\tsshOut, err := session.StdoutPipe()\n\t^\nsrc/api/grpc/request/test/test_api.go:163:2: SA4006: this value of `result` is never used (staticcheck)\n\tresult, err := ns.CreateNS(doc)\n\t^\nsrc/core/common/utility.go:586:2: SA4006: this value of `j` is never used (staticcheck)\n\tj, err = json.MarshalIndent(dest, \"\", \"  \")\n\t^\n"},"revive":{"run":1,"cnt":815,"details":"src/api/grpc/server/mcir/common.go:20:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) CheckResource(ctx context.Context, req *pb.ResourceQryRequest) (*pb.ExistsResponse, error) {\n                                    ^\nsrc/api/grpc/server/mcir/common.go:36:38: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListLookupSpec(ctx context.Context, req *pb.LookupSpecListQryRequest) (*pb.ListSpiderSpecInfoResponse, error) {\n                                     ^\nsrc/api/grpc/server/mcir/common.go:57:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) GetLookupSpec(ctx context.Context, req *pb.LookupSpecQryRequest) (*pb.SpiderSpecInfoResponse, error) {\n                                    ^\nsrc/api/grpc/server/mcir/vnet.go:20:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) CreateVNet(ctx context.Context, req *pb.TbVNetCreateRequest) (*pb.TbVNetInfoResponse, error) {\n                                 ^\nsrc/api/grpc/server/mcir/vnet.go:49:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListVNet(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListTbVNetInfoResponse, error) {\n                               ^\nsrc/api/grpc/server/mcir/common.go:79:39: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListLookupImage(ctx context.Context, req *pb.LookupImageListQryRequest) (*pb.ListSpiderImageInfoResponse, error) {\n                                      ^\nsrc/api/grpc/server/mcir/common.go:100:38: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) GetLookupImage(ctx context.Context, req *pb.LookupImageQryRequest) (*pb.SpiderImageInfoResponse, error) {\n                                     ^\nsrc/api/grpc/server/mcir/vnet.go:71:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListVNetId(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListIdResponse, error) {\n                                 ^\nsrc/api/grpc/server/mcir/vnet.go:93:31: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) GetVNet(ctx context.Context, req *pb.ResourceQryRequest) (*pb.TbVNetInfoResponse, error) {\n                              ^\nsrc/api/grpc/server/mcir/vnet.go:115:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) DeleteVNet(ctx context.Context, req *pb.ResourceQryRequest) (*pb.MessageResponse, error) {\n                                 ^\nsrc/api/grpc/server/mcir/vnet.go:130:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) DeleteAllVNet(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.MessageResponse, error) {\n                                    ^\nsrc/api/grpc/server/mcir/securitygroup.go:19:43: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) CreateSecurityGroup(ctx context.Context, req *pb.TbSecurityGroupCreateRequest) (*pb.TbSecurityGroupInfoResponse, error) {\n                                          ^\nsrc/api/grpc/server/mcir/securitygroup.go:48:41: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListSecurityGroup(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListTbSecurityGroupInfoResponse, error) {\n                                        ^\nsrc/api/grpc/server/mcir/securitygroup.go:70:43: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListSecurityGroupId(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListIdResponse, error) {\n                                          ^\nsrc/api/grpc/server/mcir/securitygroup.go:92:40: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) GetSecurityGroup(ctx context.Context, req *pb.ResourceQryRequest) (*pb.TbSecurityGroupInfoResponse, error) {\n                                       ^\nsrc/api/grpc/server/mcir/securitygroup.go:114:43: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) DeleteSecurityGroup(ctx context.Context, req *pb.ResourceQryRequest) (*pb.MessageResponse, error) {\n                                          ^\nsrc/api/grpc/server/mcir/securitygroup.go:129:46: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) DeleteAllSecurityGroup(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.MessageResponse, error) {\n                                             ^\nsrc/api/grpc/server/mcir/image.go:21:43: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) CreateImageWithInfo(ctx context.Context, req *pb.TbImageInfoRequest) (*pb.TbImageInfoResponse, error) {\n                                          ^\nsrc/api/grpc/server/mcir/sshkey.go:20:36: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) CreateSshKey(ctx context.Context, req *pb.TbSshKeyCreateRequest) (*pb.TbSshKeyInfoResponse, error) {\n                                   ^\nsrc/api/grpc/server/mcir/image.go:50:41: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) CreateImageWithID(ctx context.Context, req *pb.TbImageCreateRequest) (*pb.TbImageInfoResponse, error) {\n                                        ^\nsrc/api/grpc/server/mcir/image.go:79:33: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListImage(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListTbImageInfoResponse, error) {\n                                ^\nsrc/api/grpc/server/mcir/sshkey.go:49:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListSshKey(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListTbSshKeyInfoResponse, error) {\n                                 ^\nsrc/api/grpc/server/mcir/sshkey.go:71:36: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListSshKeyId(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListIdResponse, error) {\n                                   ^\nsrc/api/grpc/server/mcir/image.go:101:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListImageId(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListIdResponse, error) {\n                                  ^\nsrc/api/grpc/server/mcir/image.go:123:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) GetImage(ctx context.Context, req *pb.ResourceQryRequest) (*pb.TbImageInfoResponse, error) {\n                               ^\nsrc/api/grpc/server/mcir/sshkey.go:93:33: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) GetSshKey(ctx context.Context, req *pb.ResourceQryRequest) (*pb.TbSshKeyInfoResponse, error) {\n                                ^\nsrc/api/grpc/server/mcir/sshkey.go:115:36: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) DeleteSshKey(ctx context.Context, req *pb.ResourceQryRequest) (*pb.MessageResponse, error) {\n                                   ^\nsrc/api/grpc/server/mcir/image.go:145:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) DeleteImage(ctx context.Context, req *pb.ResourceQryRequest) (*pb.MessageResponse, error) {\n                                  ^\nsrc/api/grpc/server/mcir/image.go:160:38: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) DeleteAllImage(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.MessageResponse, error) {\n                                     ^\nsrc/api/grpc/server/mcir/sshkey.go:130:39: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) DeleteAllSshKey(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.MessageResponse, error) {\n                                      ^\nsrc/api/grpc/server/mcir/image.go:175:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) FetchImage(ctx context.Context, req *pb.FetchImageQryRequest) (*pb.MessageResponse, error) {\n                                 ^\nsrc/api/grpc/server/mcir/image.go:201:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) SearchImage(ctx context.Context, req *pb.SearchImageQryRequest) (*pb.ListTbImageInfoResponse, error) {\n                                  ^\nsrc/api/grpc/server/mcir/spec.go:21:42: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) CreateSpecWithInfo(ctx context.Context, req *pb.TbSpecInfoRequest) (*pb.TbSpecInfoResponse, error) {\n                                         ^\nsrc/api/grpc/server/mcir/spec.go:50:46: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) CreateSpecWithSpecName(ctx context.Context, req *pb.TbSpecCreateRequest) (*pb.TbSpecInfoResponse, error) {\n                                             ^\nsrc/api/grpc/server/mcir/spec.go:79:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListSpec(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListTbSpecInfoResponse, error) {\n                               ^\nsrc/api/grpc/server/mcir/spec.go:101:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) ListSpecId(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListIdResponse, error) {\n                                 ^\nsrc/api/grpc/server/mcir/spec.go:123:31: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) GetSpec(ctx context.Context, req *pb.ResourceQryRequest) (*pb.TbSpecInfoResponse, error) {\n                              ^\nsrc/api/grpc/server/mcir/spec.go:145:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) DeleteSpec(ctx context.Context, req *pb.ResourceQryRequest) (*pb.MessageResponse, error) {\n                                 ^\nsrc/api/grpc/server/mcir/spec.go:160:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) DeleteAllSpec(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.MessageResponse, error) {\n                                    ^\nsrc/api/grpc/server/mcir/spec.go:175:33: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) FetchSpec(ctx context.Context, req *pb.FetchSpecQryRequest) (*pb.MessageResponse, error) {\n                                ^\nsrc/api/grpc/server/mcir/spec.go:206:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) FilterSpec(ctx context.Context, req *pb.TbSpecInfoRequest) (*pb.ListTbSpecInfoResponse, error) {\n                                 ^\nsrc/api/grpc/server/mcir/spec.go:235:42: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) FilterSpecsByRange(ctx context.Context, req *pb.FilterSpecsByRangeRequest) (*pb.ListTbSpecInfoResponse, error) {\n                                         ^\nsrc/api/grpc/server/mcir/spec.go:264:33: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) SortSpecs(ctx context.Context, req *pb.SortSpecsRequest) (*pb.ListTbSpecInfoResponse, error) {\n                                ^\nsrc/api/grpc/server/mcir/spec.go:293:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCIRService) UpdateSpec(ctx context.Context, req *pb.TbSpecInfoRequest) (*pb.TbSpecInfoResponse, error) {\n                                 ^\nsrc/api/grpc/server/mcir/spec.go:106:2: var-naming: var resourceIdList should be resourceIDList (revive)\n\tresourceIdList, err := mcir.ListResourceId(req.NsId, req.ResourceType)\n\t^\nsrc/api/grpc/cbadm/cmd/gclient.go:49:31: var-declaration: should drop = nil from declaration of var ns; it is the zero value (revive)\n\t\tns     *tb_api.NSApi      = nil\n\t\t                            ^\nsrc/api/grpc/cbadm/cmd/gclient.go:50:31: var-declaration: should drop = nil from declaration of var mcir; it is the zero value (revive)\n\t\tmcir   *tb_api.MCIRApi    = nil\n\t\t                            ^\nsrc/api/grpc/cbadm/cmd/gclient.go:51:31: var-declaration: should drop = nil from declaration of var mcis; it is the zero value (revive)\n\t\tmcis   *tb_api.MCISApi    = nil\n\t\t                            ^\nsrc/api/grpc/cbadm/cmd/keypair.go:92:6: var-naming: func NewKeypairListIdCmd should be NewKeypairListIDCmd (revive)\nfunc NewKeypairListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/keypair.go:94:2: var-naming: var listIdCmd should be listIDCmd (revive)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/namespace.go:84:6: var-naming: func NewNameSpaceListIdCmd should be NewNameSpaceListIDCmd (revive)\nfunc NewNameSpaceListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/namespace.go:86:2: var-naming: var listIdCmd should be listIDCmd (revive)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/root.go:40:2: var-naming: var cspImageId should be cspImageID (revive)\n\tcspImageId   string\n\t^\nsrc/api/grpc/cbadm/cmd/securitygroup.go:92:6: var-naming: func NewSecurityListIdCmd should be NewSecurityListIDCmd (revive)\nfunc NewSecurityListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/spec.go:75:6: var-naming: func NewSpecWithIdCreateCmd should be NewSpecWithIDCreateCmd (revive)\nfunc NewSpecWithIdCreateCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/gclient.go:52:31: var-declaration: should drop = nil from declaration of var tbutil; it is the zero value (revive)\n\t\ttbutil *tb_api.UtilityApi = nil\n\t\t                            ^\nsrc/api/grpc/cbadm/cmd/tbutil.go:155:6: var-naming: func NewVmResourcesInspectCmd should be NewVMResourcesInspectCmd (revive)\nfunc NewVmResourcesInspectCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/network.go:92:6: var-naming: func NewNetworkListIdCmd should be NewNetworkListIDCmd (revive)\nfunc NewNetworkListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/securitygroup.go:94:2: var-naming: var listIdCmd should be listIDCmd (revive)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/root.go:45:2: var-naming: var configId should be configID (revive)\n\tconfigId string\n\t^\nsrc/api/grpc/cbadm/cmd/gclient.go:40:38: unused-parameter: parameter 'args' seems to be unused, consider removing or renaming it as _ (revive)\nfunc SetupAndRun(cmd *cobra.Command, args []string) {\n                                     ^\nsrc/api/grpc/cbadm/cmd/spec.go:77:2: var-naming: var createWithIdCmd should be createWithIDCmd (revive)\n\tcreateWithIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/network.go:94:2: var-naming: var listIdCmd should be listIDCmd (revive)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/mcis.go:129:6: var-naming: func NewMcisListIdCmd should be NewMcisListIDCmd (revive)\nfunc NewMcisListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/tbutil.go:157:2: var-naming: var inspectVmCmd should be inspectVMCmd (revive)\n\tinspectVmCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/spec.go:126:6: var-naming: func NewSpecListIdCmd should be NewSpecListIDCmd (revive)\nfunc NewSpecListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:131:2: var-naming: var listIdCmd should be listIDCmd (revive)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/spec.go:128:2: var-naming: var listIdCmd should be listIDCmd (revive)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/mcis.go:411:6: var-naming: func NewMcisVmAddCmd should be NewMcisVMAddCmd (revive)\nfunc NewMcisVmAddCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:438:6: var-naming: func NewMcisVmGroupCmd should be NewMcisVMGroupCmd (revive)\nfunc NewMcisVmGroupCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:465:6: var-naming: func NewMcisVmListCmd should be NewMcisVMListCmd (revive)\nfunc NewMcisVmListCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:495:6: var-naming: func NewMcisVmListIdCmd should be NewMcisVMListIDCmd (revive)\nfunc NewMcisVmListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:497:2: var-naming: var vmListIdCmd should be vmListIDCmd (revive)\n\tvmListIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/mcis.go:525:6: var-naming: func NewMcisVmGetCmd should be NewMcisVMGetCmd (revive)\nfunc NewMcisVmGetCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:561:6: var-naming: func NewMcisVmDeleteCmd should be NewMcisVMDeleteCmd (revive)\nfunc NewMcisVmDeleteCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:597:6: var-naming: func NewMcisVmStatusCmd should be NewMcisVMStatusCmd (revive)\nfunc NewMcisVmStatusCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:633:6: var-naming: func NewMcisVmSuspendCmd should be NewMcisVMSuspendCmd (revive)\nfunc NewMcisVmSuspendCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:669:6: var-naming: func NewMcisVmResumeCmd should be NewMcisVMResumeCmd (revive)\nfunc NewMcisVmResumeCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:705:6: var-naming: func NewMcisVmRebootCmd should be NewMcisVMRebootCmd (revive)\nfunc NewMcisVmRebootCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:741:6: var-naming: func NewMcisVmTerminateCmd should be NewMcisVMTerminateCmd (revive)\nfunc NewMcisVmTerminateCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:804:6: var-naming: func NewMcisRecommendVmCmd should be NewMcisRecommendVMCmd (revive)\nfunc NewMcisRecommendVmCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:806:2: var-naming: var recommendVmCmd should be recommendVMCmd (revive)\n\trecommendVmCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/mcis.go:858:6: var-naming: func NewCmdMcisVmCmd should be NewCmdMcisVMCmd (revive)\nfunc NewCmdMcisVmCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:912:6: var-naming: func NewAccessVmCmd should be NewAccessVMCmd (revive)\nfunc NewAccessVmCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:914:2: var-naming: var accessVmCmd should be accessVMCmd (revive)\n\taccessVmCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/image.go:72:6: var-naming: func NewImageCreateWithIdCmd should be NewImageCreateWithIDCmd (revive)\nfunc NewImageCreateWithIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/image.go:74:2: var-naming: var createWithIdCmd should be createWithIDCmd (revive)\n\tcreateWithIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/image.go:123:6: var-naming: func NewImageListIdCmd should be NewImageListIDCmd (revive)\nfunc NewImageListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/image.go:125:2: var-naming: var listIdCmd should be listIDCmd (revive)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/server/mcis/utility.go:34:23: var-naming: method CheckVm should be CheckVM (revive)\nfunc (s *MCISService) CheckVm(ctx context.Context, req *pb.TbVmQryRequest) (*pb.ExistsResponse, error) {\n                      ^\nsrc/api/grpc/server/mcis/plan.go:20:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) RecommendVM(ctx context.Context, req *pb.McisRecommendVmCreateRequest) (*pb.ListTbSpecInfoResponse, error) {\n                                  ^\nsrc/api/grpc/server/mcis/utility.go:19:33: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) CheckMcis(ctx context.Context, req *pb.TbMcisQryRequest) (*pb.ExistsResponse, error) {\n                                ^\nsrc/api/grpc/server/mcis/control.go:72:23: var-naming: method ListMcisId should be ListMcisID (revive)\nfunc (s *MCISService) ListMcisId(ctx context.Context, req *pb.TbMcisAllQryRequest) (*pb.ListIdResponse, error) {\n                      ^\nsrc/api/grpc/server/mcis/monitor.go:20:49: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) InstallMonitorAgentToMcis(ctx context.Context, req *pb.McisCmdCreateRequest) (*pb.ListAgentInstallResponse, error) {\n                                                ^\nsrc/api/grpc/server/mcis/orchestration.go:20:40: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) CreateMcisPolicy(ctx context.Context, req *pb.McisPolicyCreateRequest) (*pb.McisPolicyInfoResponse, error) {\n                                       ^\nsrc/api/grpc/server/mcis/control.go:175:23: var-naming: method ListMcisVmId should be ListMcisVMID (revive)\nfunc (s *MCISService) ListMcisVmId(ctx context.Context, req *pb.TbMcisQryRequest) (*pb.ListIdResponse, error) {\n                      ^\nsrc/api/grpc/server/mcis/orchestration.go:49:38: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) ListMcisPolicy(ctx context.Context, req *pb.McisPolicyAllQryRequest) (*pb.ListMcisPolicyInfoResponse, error) {\n                                     ^\nsrc/api/grpc/server/mcis/monitor.go:48:38: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) GetMonitorData(ctx context.Context, req *pb.MonitorQryRequest) (*pb.MonitorResultSimpleResponse, error) {\n                                     ^\nsrc/api/grpc/server/mcis/control.go:426:23: var-naming: method CmdMcisVm should be CmdMcisVM (revive)\nfunc (s *MCISService) CmdMcisVm(ctx context.Context, req *pb.McisCmdVmCreateRequest) (*pb.StringResponse, error) {\n                      ^\nsrc/api/grpc/server/mcis/orchestration.go:71:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) GetMcisPolicy(ctx context.Context, req *pb.McisPolicyQryRequest) (*pb.McisPolicyInfoResponse, error) {\n                                    ^\nsrc/api/grpc/server/mcis/orchestration.go:97:40: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) DeleteMcisPolicy(ctx context.Context, req *pb.McisPolicyQryRequest) (*pb.MessageResponse, error) {\n                                       ^\nsrc/api/grpc/server/mcis/control.go:21:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) CreateMcis(ctx context.Context, req *pb.TbMcisCreateRequest) (*pb.TbMcisInfoResponse, error) {\n                                 ^\nsrc/api/grpc/server/mcis/control.go:50:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) ListMcis(ctx context.Context, req *pb.TbMcisAllQryRequest) (*pb.ListTbMcisInfoResponse, error) {\n                               ^\nsrc/api/grpc/server/mcis/orchestration.go:112:43: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) DeleteAllMcisPolicy(ctx context.Context, req *pb.McisPolicyAllQryRequest) (*pb.MessageResponse, error) {\n                                          ^\nsrc/api/grpc/server/mcis/control.go:94:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) ControlMcis(ctx context.Context, req *pb.TbMcisActionRequest) (*pb.MessageResponse, error) {\n                                  ^\nsrc/api/grpc/server/mcis/control.go:109:38: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) ListMcisStatus(ctx context.Context, req *pb.TbMcisAllQryRequest) (*pb.ListTbMcisStatusInfoResponse, error) {\n                                     ^\nsrc/api/grpc/server/mcis/control.go:131:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) GetMcisStatus(ctx context.Context, req *pb.TbMcisQryRequest) (*pb.TbMcisStatusInfoResponse, error) {\n                                    ^\nsrc/api/grpc/server/mcis/control.go:153:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) GetMcisInfo(ctx context.Context, req *pb.TbMcisQryRequest) (*pb.TbMcisInfoResponse, error) {\n                                  ^\nsrc/api/grpc/server/mcis/control.go:197:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) DeleteMcis(ctx context.Context, req *pb.TbMcisQryRequest) (*pb.MessageResponse, error) {\n                                 ^\nsrc/api/grpc/server/mcis/control.go:212:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) DeleteAllMcis(ctx context.Context, req *pb.TbMcisAllQryRequest) (*pb.MessageResponse, error) {\n                                    ^\nsrc/api/grpc/server/mcis/control.go:227:36: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) CreateMcisVM(ctx context.Context, req *pb.TbVmCreateRequest) (*pb.TbVmInfoResponse, error) {\n                                   ^\nsrc/api/grpc/server/mcis/control.go:256:41: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) CreateMcisVMGroup(ctx context.Context, req *pb.TbVmGroupCreateRequest) (*pb.TbMcisInfoResponse, error) {\n                                        ^\nsrc/api/grpc/server/mcis/control.go:285:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) ControlMcisVM(ctx context.Context, req *pb.TbVmActionRequest) (*pb.MessageResponse, error) {\n                                    ^\nsrc/api/grpc/server/mcis/control.go:300:39: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) GetMcisVMStatus(ctx context.Context, req *pb.TbVmQryRequest) (*pb.TbVmStatusInfoesponse, error) {\n                                      ^\nsrc/api/grpc/server/mcis/control.go:322:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) GetMcisVMInfo(ctx context.Context, req *pb.TbVmQryRequest) (*pb.TbVmInfoResponse, error) {\n                                    ^\nsrc/api/grpc/server/mcis/control.go:344:36: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) DeleteMcisVM(ctx context.Context, req *pb.TbVmQryRequest) (*pb.MessageResponse, error) {\n                                   ^\nsrc/api/grpc/server/mcis/control.go:359:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) RecommendMcis(ctx context.Context, req *pb.McisRecommendCreateRequest) (*pb.McisRecommendInfoResponse, error) {\n                                    ^\nsrc/api/grpc/server/mcis/control.go:393:31: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) CmdMcis(ctx context.Context, req *pb.McisCmdCreateRequest) (*pb.ListCmdMcisResponse, error) {\n                              ^\nsrc/api/grpc/server/mcis/control.go:448:42: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) InstallAgentToMcis(ctx context.Context, req *pb.McisCmdCreateRequest) (*pb.ListAgentInstallResponse, error) {\n                                         ^\nsrc/api/grpc/server/mcis/control.go:476:36: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) GetBenchmark(ctx context.Context, req *pb.BmQryRequest) (*pb.ListBenchmarkInfoResponse, error) {\n                                   ^\nsrc/api/grpc/server/mcis/control.go:504:39: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *MCISService) GetAllBenchmark(ctx context.Context, req *pb.BmQryAllRequest) (*pb.ListBenchmarkInfoResponse, error) {\n                                      ^\nsrc/api/rest/server/server.go:57:6: var-naming: func ApiServer should be APIServer (revive)\nfunc ApiServer() {\n     ^\nsrc/api/rest/server/server.go:78:2: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\n\tAPI_USERNAME := os.Getenv(\"API_USERNAME\")\n\t^\nsrc/api/rest/server/server.go:79:2: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\n\tAPI_PASSWORD := os.Getenv(\"API_PASSWORD\")\n\t^\nsrc/api/grpc/request/test/test_api.go:537:2: var-naming: var reqTbSshKey should be reqTbSSHKey (revive)\n\treqTbSshKey := &tb_api.TbSshKeyCreateRequest{\n\t^\nsrc/core/mcis/plan.go:179:26: unused-parameter: parameter 'nsId' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RecommendVmLocation(nsId string, specList *[]mcir.TbSpecInfo, param *[]ParameterKeyVal) ([]mcir.TbSpecInfo, error) {\n                         ^\nsrc/core/mcis/plan.go:59:6: var-naming: func RecommendVm should be RecommendVM (revive)\nfunc RecommendVm(nsId string, plan DeploymentPlan) ([]mcir.TbSpecInfo, error) {\n     ^\nsrc/core/mcis/utility.go:192:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)\n\t} else {\n\t\treturn &result, nil\n\t}\nsrc/core/mcis/utility.go:246:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\terr := fmt.Errorf(\"In TrimIP(), detected port number seems wrong: \" + port_string)\n\t\treturn strconv.Itoa(0), err\n\t}\nsrc/core/mcis/orchestration.go:54:2: var-naming: struct field Vm should be VM (revive)\n\tVm            TbVmInfo   `json:\"vm\"`\n\t^\nsrc/core/mcis/orchestration.go:69:2: var-naming: struct field Id should be ID (revive)\n\tId     string   `json:\"Id\"`   //MCIS Id (generated ID by the Name)\n\t^\nsrc/core/mcis/monitor.go:372:49: unused-parameter: parameter 'nsID' seems to be unused, consider removing or renaming it as _ (revive)\nfunc CallGetMonitoringAsync(wg *sync.WaitGroup, nsID string, mcisID string, vmID string, vmIP string, method string, metric string, cmd string, returnResult *[]MonResultSimple) {\n                                                ^\nsrc/core/mcis/utility.go:67:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckMcis failed; nsId given is null.\")\n\t\t                  ^\nsrc/core/mcis/orchestration.go:88:9: var-naming: range var nsId should be nsID (revive)\n\tfor _, nsId := range nsList {\n\t       ^\nsrc/core/mcis/monitor.go:31:7: var-naming: const monMetricCpu should be monMetricCPU (revive)\nconst monMetricCpu string = \"cpu\"\n      ^\nsrc/core/mcis/utility.go:70:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckMcis failed; mcisId given is null.\")\n\t\t                  ^\nsrc/core/mcis/monitor.go:41:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId     string `json:\"nsId,omitempty\"`\n\t^\nsrc/core/mcis/orchestration.go:324:8: var-naming: var removeTargetVm should be removeTargetVM (revive)\n\t\t\t\t\t\t\tremoveTargetVm := vmList[len(vmList)-1]\n\t\t\t\t\t\t\t^\nsrc/core/mcis/monitor.go:42:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId   string `json:\"mcisId,omitempty\"`\n\t^\nsrc/core/mcis/utility.go:103:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckVm failed; nsId given is null.\")\n\t\t                  ^\nsrc/core/mcis/monitor.go:43:2: var-naming: struct field VmId should be VMID (revive)\n\tVmId     string `json:\"vmId,omitempty\"`\n\t^\nsrc/core/mcis/orchestration.go:326:8: var-naming: var delVmErr should be delVMErr (revive)\n\t\t\t\t\t\t\tdelVmErr := DelMcisVm(nsId, mcisPolicyTmp.Id, removeTargetVm, \"\")\n\t\t\t\t\t\t\t^\nsrc/core/mcis/monitor.go:44:2: var-naming: struct field PublicIp should be PublicIP (revive)\n\tPublicIp string `json:\"publicIp,omitempty\"`\n\t^\nsrc/core/mcis/utility.go:106:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckVm failed; mcisId given is null.\")\n\t\t                  ^\nsrc/core/mcis/monitor.go:47:2: var-naming: struct field SshKey should be SSHKey (revive)\n\tSshKey   string `json:\"sshKey,omitempty\"`\n\t^\nsrc/core/mcis/orchestration.go:378:27: var-naming: func parameter nsId should be nsID (revive)\nfunc UpdateMcisPolicyInfo(nsId string, mcisPolicyInfoData McisPolicyInfo) {\n                          ^\nsrc/core/mcis/monitor.go:48:2: var-naming: don't use underscores in Go names; struct field Csp_type should be CspType (revive)\n\tCsp_type string `json:\"cspType,omitempty\"`\n\t^\nsrc/core/mcis/utility.go:109:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckVm failed; vmId given is null.\")\n\t\t                  ^\nsrc/core/mcis/monitor.go:64:2: var-naming: struct field VmId should be VMID (revive)\n\tVmId   string `json:\"vmId\"`\n\t^\nsrc/core/mcis/orchestration.go:392:23: var-naming: func parameter nsId should be nsID (revive)\nfunc CreateMcisPolicy(nsId string, mcisId string, u *McisPolicyInfo) (McisPolicyInfo, error) {\n                      ^\nsrc/core/mcis/monitor.go:71:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId           string            `json:\"nsId\"`\n\t^\nsrc/core/mcis/utility.go:146:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckMcis failed; nsId given is null.\")\n\t\t                  ^\nsrc/core/mcis/monitor.go:72:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId         string            `json:\"mcisId\"`\n\t^\nsrc/core/mcis/monitor.go:223:32: var-naming: func parameter nsId should be nsID (revive)\nfunc InstallMonitorAgentToMcis(nsId string, mcisId string, req *McisCmdReq) (AgentInstallContentWrapper, error) {\n                               ^\nsrc/core/mcis/utility.go:149:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckMcis failed; mcisId given is null.\")\n\t\t                  ^\nsrc/core/mcis/orchestration.go:445:26: var-naming: func parameter nsId should be nsID (revive)\nfunc GetMcisPolicyObject(nsId string, mcisId string) (McisPolicyInfo, error) {\n                         ^\nsrc/core/mcis/monitor.go:304:24: var-naming: func parameter nsId should be nsID (revive)\nfunc GetMonitoringData(nsId string, mcisId string, metric string) (MonResultSimpleResponse, error) {\n                       ^\nsrc/core/mcis/utility.go:235:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"In TrimIP(), sshAccessPoint does not seem 8.8.8.8:22 form.\")\n\t\t                  ^\nsrc/core/mcis/monitor.go:345:3: var-naming: var vmId should be vmID (revive)\n\t\tvmId := v\n\t\t^\nsrc/core/mcis/utility.go:241:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"In TrimIP(), strconv.Atoi returned an error.\")\n\t\t                  ^\nsrc/core/mcis/monitor.go:346:3: var-naming: var vmIp should be vmIP (revive)\n\t\tvmIp, _ := GetVmIp(nsId, mcisId, vmId)\n\t\t^\nsrc/core/mcis/orchestration.go:480:29: var-naming: func parameter nsId should be nsID (revive)\nfunc GetAllMcisPolicyObject(nsId string) ([]McisPolicyInfo, error) {\n                            ^\nsrc/core/mcis/utility.go:63:16: var-naming: func parameter nsId should be nsID (revive)\nfunc CheckMcis(nsId string, mcisId string) (bool, error) {\n               ^\nsrc/core/mcis/orchestration.go:506:6: var-naming: func ListMcisPolicyId should be ListMcisPolicyID (revive)\nfunc ListMcisPolicyId(nsId string) []string {\n     ^\nsrc/core/mcis/utility.go:99:6: var-naming: func CheckVm should be CheckVM (revive)\nfunc CheckVm(nsId string, mcisId string, vmId string) (bool, error) {\n     ^\nsrc/core/mcis/orchestration.go:527:20: var-naming: func parameter nsId should be nsID (revive)\nfunc DelMcisPolicy(nsId string, mcisId string) error {\n                   ^\nsrc/core/mcis/orchestration.go:563:23: var-naming: func parameter nsId should be nsID (revive)\nfunc DelAllMcisPolicy(nsId string) (string, error) {\n                      ^\nsrc/core/mcis/utility.go:142:22: var-naming: func parameter nsId should be nsID (revive)\nfunc CheckMcisPolicy(nsId string, mcisId string) (bool, error) {\n                     ^\nsrc/core/mcis/utility.go:238:2: var-naming: don't use underscores in Go names; var port_string should be portString (revive)\n\tport_string := splitted[1]\n\t^\nsrc/core/mcis/utility.go:252:6: var-naming: type SpiderNameIdSystemId should be SpiderNameIDSystemID (revive)\ntype SpiderNameIdSystemId struct {\n     ^\nsrc/core/mcis/utility.go:253:2: var-naming: struct field NameId should be NameID (revive)\n\tNameId   string\n\t^\nsrc/core/mcis/utility.go:254:2: var-naming: struct field SystemId should be SystemID (revive)\n\tSystemId string\n\t^\nsrc/core/mcis/utility.go:278:2: var-naming: struct field Id should be ID (revive)\n\tId          string `json:\"id\"`\n\t^\nsrc/core/mcis/utility.go:279:2: var-naming: struct field CspNativeId should be CspNativeID (revive)\n\tCspNativeId string `json:\"cspNativeId\"`\n\t^\nsrc/core/mcis/utility.go:283:2: var-naming: struct field Id should be ID (revive)\n\tId          string `json:\"id\"`\n\t^\nsrc/core/mcis/utility.go:284:2: var-naming: struct field CspNativeId should be CspNativeID (revive)\n\tCspNativeId string `json:\"cspNativeId\"`\n\t^\nsrc/core/mcis/utility.go:285:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId        string `json:\"nsId\"`\n\t^\nsrc/core/mcis/utility.go:286:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId      string `json:\"mcisId\"`\n\t^\nsrc/core/mcis/utility.go:320:11: var-naming: range var vmId should be vmID (revive)\n\t\t\tfor _, vmId := range vmListInMcis {\n\t\t\t       ^\nsrc/core/mcis/utility.go:347:7: var-naming: type JsonTemplate should be JSONTemplate (revive)\n\ttype JsonTemplate struct {\n\t     ^\nsrc/core/mcis/orchestration.go:140:13: superfluous-else: if block ends with a break statement, so drop this else and outdent its block (revive)\n\t\t\t\t\t} else { // need to enhance : loop for each policies and realize metric\n\n\t\t\t\t\t\t//Checking (measuring)\n\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusChecking\n\t\t\t\t\t\tUpdateMcisPolicyInfo(nsId, mcisPolicyTmp)\n\t\t\t\t\t\tfmt.Println(\"- PolicyStatus[\" + mcisPolicyTmp.Policy[policyIndex].Status + \"],[\" + v + \"]\")\n\n\t\t\t\t\t\tfmt.Println(\"[MCIS is exist] \" + mcisPolicyTmp.Id)\n\t\t\t\t\t\tcontent, err := GetMonitoringData(nsId, mcisPolicyTmp.Id, mcisPolicyTmp.Policy[policyIndex].AutoCondition.Metric)\n\t\t\t\t\t\tif err != nil {\n\t\t\t\t\t\t\tcommon.CBLog.Error(err)\n\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusError\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//common.PrintJsonPretty(content)\n\n\t\t\t\t\t\t//Statistic\n\t\t\t\t\t\tsumMcis := 0.0\n\t\t\t\t\t\tfor _, monData := range content.McisMonitoring {\n\t\t\t\t\t\t\t//fmt.Println(\"[monData.Value: ] \" + monData.Value)\n\t\t\t\t\t\t\tmonDataValue, _ := strconv.ParseFloat(monData.Value, 64)\n\t\t\t\t\t\t\tsumMcis += monDataValue\n\t\t\t\t\t\t}\n\t\t\t\t\t\taverMcis := (sumMcis / float64(len(content.McisMonitoring)))\n\t\t\t\t\t\tfmt.Printf(\"[monData.Value] AverMcis: %f,  SumMcis: %f \\n\", averMcis, sumMcis)\n\n\t\t\t\t\t\tevaluationPeriod, _ := strconv.Atoi(mcisPolicyTmp.Policy[policyIndex].AutoCondition.EvaluationPeriod)\n\t\t\t\t\t\tevaluationValue := mcisPolicyTmp.Policy[policyIndex].AutoCondition.EvaluationValue\n\t\t\t\t\t\tevaluationValue = append([]string{fmt.Sprintf(\"%f\", averMcis)}, evaluationValue...) // prepend current aver date\n\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].AutoCondition.EvaluationValue = evaluationValue\n\n\t\t\t\t\t\tsum := 0.0\n\t\t\t\t\t\taver := -0.1\n\t\t\t\t\t\t// accumerate previous evaluation value\n\t\t\t\t\t\tfmt.Printf(\"[Evaluation History]\\n\")\n\t\t\t\t\t\tfor evi, evv := range evaluationValue {\n\t\t\t\t\t\t\tevvFloat, _ := strconv.ParseFloat(evv, 64)\n\t\t\t\t\t\t\tsum += evvFloat\n\t\t\t\t\t\t\tfmt.Printf(\"[%v] %f \", evi, evvFloat)\n\t\t\t\t\t\t\t// break with outside evaluationValue\n\t\t\t\t\t\t\tif evi >= evaluationPeriod-1 {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// average for evaluationPeriod (if data for the period is not enough, skip)\n\t\t\t\t\t\tif evaluationPeriod != 0 && len(evaluationValue) >= evaluationPeriod {\n\t\t\t\t\t\t\taver = sum / float64(evaluationPeriod)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfmt.Printf(\"\\n[Evaluation] Aver: %f,  Period: %v \\n\", aver, evaluationPeriod)\n\n\t\t\t\t\t\t//Detecting\n\t\t\t\t\t\toperator := mcisPolicyTmp.Policy[policyIndex].AutoCondition.Operator\n\t\t\t\t\t\toperand, _ := strconv.ParseFloat(mcisPolicyTmp.Policy[policyIndex].AutoCondition.Operand, 64)\n\n\t\t\t\t\t\tif evaluationPeriod == 0 {\n\t\t\t\t\t\t\tfmt.Println(\"[Checking] Not available evaluationPeriod \")\n\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusError\n\t\t\t\t\t\t\tUpdateMcisPolicyInfo(nsId, mcisPolicyTmp)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// not enough evaluationPeriod\n\t\t\t\t\t\tif aver == -0.1 {\n\t\t\t\t\t\t\tfmt.Println(\"[Checking] Not enough evaluationPeriod \")\n\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusReady\n\t\t\t\t\t\t\tUpdateMcisPolicyInfo(nsId, mcisPolicyTmp)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch {\n\t\t\t\t\t\tcase operator == \">=\":\n\t\t\t\t\t\t\tif aver >= operand {\n\t\t\t\t\t\t\t\tfmt.Printf(\"[Detected] Aver: %f >=  Operand: %f \\n\", aver, operand)\n\t\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusDetected\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt.Printf(\"[Not Detected] Aver: %f >=  Operand: %f \\n\", aver, operand)\n\t\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusReady\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase operator == \">\":\n\t\t\t\t\t\t\tif aver > operand {\n\t\t\t\t\t\t\t\tfmt.Printf(\"[Detected] Aver: %f >  Operand: %f \\n\", aver, operand)\n\t\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusDetected\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt.Printf(\"[Not Detected] Aver: %f >  Operand: %f \\n\", aver, operand)\n\t\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusReady\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase operator == \"<=\":\n\t\t\t\t\t\t\tif aver <= operand {\n\t\t\t\t\t\t\t\tfmt.Printf(\"[Detected] Aver: %f <=  Operand: %f \\n\", aver, operand)\n\t\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusDetected\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt.Printf(\"[Not Detected] Aver: %f <=  Operand: %f \\n\", aver, operand)\n\t\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusReady\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase operator == \"<\":\n\t\t\t\t\t\t\tif aver < operand {\n\t\t\t\t\t\t\t\tfmt.Printf(\"[Detected] Aver: %f <  Operand: %f \\n\", aver, operand)\n\t\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusDetected\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt.Printf(\"[Not Detected] Aver: %f <  Operand: %f \\n\", aver, operand)\n\t\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusReady\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tfmt.Println(\"[Checking] Not available operator \" + operator)\n\t\t\t\t\t\t\tmcisPolicyTmp.Policy[policyIndex].Status = AutoStatusError\n\t\t\t\t\t\t}\n\t\t\t\t\t}\nsrc/core/mcis/control.go:1874:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)\n\t} else {\n\t\t//response := echo.Map{}\n\t\t//response[\"result\"] = *result\n\t\t//response := RestPostCmdMcisVmResponse{Result: *result}\n\t\t//return c.JSON(http.StatusOK, response)\n\t\treturn *result, nil\n\t}\nsrc/core/mcis/control.go:3116:10: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t\t} else {\n\t\t\treturn errors.New(action + \" is not allowed for \" + mcisStatusTmp.Status + \" MCIS\")\n\t\t}\nsrc/core/mcis/control.go:3251:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\tfmt.Println(\"<\" + keyValue.Key + \"> \\n\" + keyValue.Value)\n\t\tfmt.Println(\"===============================================\")\n\n\t\tunmarshalErr := json.Unmarshal([]byte(keyValue.Value), &temp)\n\t\tif unmarshalErr != nil {\n\t\t\tfmt.Println(\"Unmarshal error:\", unmarshalErr)\n\t\t}\n\n\t\tfmt.Println(\"\\n[Calling SPIDER]START vmControl\")\n\n\t\tcspVmId := temp.CspViewVmDetail.IId.NameId\n\t\tcommon.PrintJsonPretty(temp.CspViewVmDetail)\n\n\t\t// Prevent malformed cspVmId\n\t\tif cspVmId == \"\" || common.CheckString(cspVmId) != nil {\n\t\t\tresultTmp.Error = fmt.Errorf(\"Not valid requested CSPNativeVmId: [\" + cspVmId + \"]\")\n\t\t\ttemp.Status = StatusFailed\n\t\t\ttemp.SystemMessage = resultTmp.Error.Error()\n\t\t\tUpdateVmInfo(nsId, mcisId, temp)\n\t\t\t//return err\n\t\t} else {\n\t\t\tif os.Getenv(\"SPIDER_CALL_METHOD\") == \"REST\" {\n\n\t\t\t\turl := \"\"\n\t\t\t\tmethod := \"\"\n\t\t\t\tswitch action {\n\t\t\t\tcase ActionTerminate:\n\n\t\t\t\t\ttemp.TargetAction = ActionTerminate\n\t\t\t\t\ttemp.TargetStatus = StatusTerminated\n\t\t\t\t\ttemp.Status = StatusTerminating\n\n\t\t\t\t\turl = common.SPIDER_REST_URL + \"/vm/\" + cspVmId\n\t\t\t\t\tmethod = \"DELETE\"\n\t\t\t\tcase ActionReboot:\n\n\t\t\t\t\ttemp.TargetAction = ActionReboot\n\t\t\t\t\ttemp.TargetStatus = StatusRunning\n\t\t\t\t\ttemp.Status = StatusRebooting\n\n\t\t\t\t\turl = common.SPIDER_REST_URL + \"/controlvm/\" + cspVmId + \"?action=reboot\"\n\t\t\t\t\tmethod = \"GET\"\n\t\t\t\tcase ActionSuspend:\n\n\t\t\t\t\ttemp.TargetAction = ActionSuspend\n\t\t\t\t\ttemp.TargetStatus = StatusSuspended\n\t\t\t\t\ttemp.Status = StatusSuspending\n\n\t\t\t\t\turl = common.SPIDER_REST_URL + \"/controlvm/\" + cspVmId + \"?action=suspend\"\n\t\t\t\t\tmethod = \"GET\"\n\t\t\t\tcase ActionResume:\n\n\t\t\t\t\ttemp.TargetAction = ActionResume\n\t\t\t\t\ttemp.TargetStatus = StatusRunning\n\t\t\t\t\ttemp.Status = StatusResuming\n\n\t\t\t\t\turl = common.SPIDER_REST_URL + \"/controlvm/\" + cspVmId + \"?action=resume\"\n\t\t\t\t\tmethod = \"GET\"\n\t\t\t\tdefault:\n\t\t\t\t\treturn errors.New(action + \"is invalid actionType\")\n\t\t\t\t}\n\n\t\t\t\tUpdateVmInfo(nsId, mcisId, temp)\n\t\t\t\t//fmt.Println(\"url: \" + url + \" method: \" + method)\n\n\t\t\t\ttype ControlVMReqInfo struct {\n\t\t\t\t\tConnectionName string\n\t\t\t\t}\n\t\t\t\ttempReq := ControlVMReqInfo{}\n\t\t\t\ttempReq.ConnectionName = temp.ConnectionName\n\t\t\t\tpayload, _ := json.MarshalIndent(tempReq, \"\", \"  \")\n\t\t\t\t//fmt.Println(\"payload: \" + string(payload)) // for debug\n\n\t\t\t\tclient := &http.Client{\n\t\t\t\t\tCheckRedirect: func(req *http.Request, via []*http.Request) error {\n\t\t\t\t\t\treturn http.ErrUseLastResponse\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\treq, err := http.NewRequest(method, url, strings.NewReader(string(payload)))\n\n\t\t\t\tif err != nil {\n\t\t\t\t\tcommon.CBLog.Error(err)\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t\treq.Header.Add(\"Content-Type\", \"application/json\")\n\n\t\t\t\tres, err := client.Do(req)\n\t\t\t\tif err != nil {\n\t\t\t\t\tcommon.CBLog.Error(err)\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t\tdefer res.Body.Close()\n\t\t\t\tbody, err := ioutil.ReadAll(res.Body)\n\t\t\t\tif err != nil {\n\t\t\t\t\tcommon.CBLog.Error(err)\n\t\t\t\t\treturn err\n\t\t\t\t}\n\n\t\t\t\tfmt.Println(\"HTTP Status code: \" + strconv.Itoa(res.StatusCode))\n\t\t\t\tswitch {\n\t\t\t\tcase res.StatusCode >= 400 || res.StatusCode < 200:\n\t\t\t\t\terr := fmt.Errorf(string(body))\n\t\t\t\t\tcommon.CBLog.Error(err)\n\t\t\t\t\terrTmp = err\n\t\t\t\t}\n\n\t\t\t\terr2 = json.Unmarshal(body, &resultTmp)\n\n\t\t\t} else {\n\n\t\t\t\t// CCM API 설정\n\t\t\t\tccm := api.NewCloudResourceHandler()\n\t\t\t\terr := ccm.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\t\t\tif err != nil {\n\t\t\t\t\tcommon.CBLog.Error(\"ccm failed to set config : \", err)\n\t\t\t\t\ttemp.Status = StatusFailed\n\t\t\t\t\tUpdateVmInfo(nsId, mcisId, temp)\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t\terr = ccm.Open()\n\t\t\t\tif err != nil {\n\t\t\t\t\tcommon.CBLog.Error(\"ccm api open failed : \", err)\n\t\t\t\t\ttemp.Status = StatusFailed\n\t\t\t\t\tUpdateVmInfo(nsId, mcisId, temp)\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t\tdefer ccm.Close()\n\n\t\t\t\tvar result string\n\n\t\t\t\tswitch action {\n\t\t\t\tcase ActionTerminate:\n\n\t\t\t\t\ttemp.TargetAction = ActionTerminate\n\t\t\t\t\ttemp.TargetStatus = StatusTerminated\n\t\t\t\t\ttemp.Status = StatusTerminating\n\n\t\t\t\t\tUpdateVmInfo(nsId, mcisId, temp)\n\n\t\t\t\t\tresult, err = ccm.TerminateVMByParam(temp.ConnectionName, cspVmId, \"false\")\n\n\t\t\t\tcase ActionReboot:\n\n\t\t\t\t\ttemp.TargetAction = ActionReboot\n\t\t\t\t\ttemp.TargetStatus = StatusRunning\n\t\t\t\t\ttemp.Status = StatusRebooting\n\n\t\t\t\t\tUpdateVmInfo(nsId, mcisId, temp)\n\n\t\t\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"reboot\")\n\n\t\t\t\tcase ActionSuspend:\n\n\t\t\t\t\ttemp.TargetAction = ActionSuspend\n\t\t\t\t\ttemp.TargetStatus = StatusSuspended\n\t\t\t\t\ttemp.Status = StatusSuspending\n\n\t\t\t\t\tUpdateVmInfo(nsId, mcisId, temp)\n\n\t\t\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"suspend\")\n\n\t\t\t\tcase ActionResume:\n\n\t\t\t\t\ttemp.TargetAction = ActionResume\n\t\t\t\t\ttemp.TargetStatus = StatusRunning\n\t\t\t\t\ttemp.Status = StatusResuming\n\n\t\t\t\t\tUpdateVmInfo(nsId, mcisId, temp)\n\n\t\t\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"resume\")\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn errors.New(action + \"is invalid actionType\")\n\t\t\t\t}\n\n\t\t\t\terr2 = json.Unmarshal([]byte(result), &resultTmp)\n\n\t\t\t}\n\n\t\t\tif err2 != nil {\n\t\t\t\tfmt.Println(err2)\n\t\t\t\tcommon.CBLog.Error(err)\n\t\t\t\terrTmp = err\n\t\t\t}\n\t\t\tif errTmp != nil {\n\t\t\t\tresultTmp.Error = errTmp\n\n\t\t\t\ttemp.Status = StatusFailed\n\t\t\t\ttemp.SystemMessage = errTmp.Error()\n\t\t\t\tUpdateVmInfo(nsId, mcisId, temp)\n\t\t\t}\n\t\t\tresults.ResultArray = append(results.ResultArray, resultTmp)\n\n\t\t\tcommon.PrintJsonPretty(resultTmp)\n\n\t\t\tfmt.Println(\"[Calling SPIDER]END vmControl\")\n\n\t\t\tif action != ActionTerminate {\n\t\t\t\t//When VM is restared, temporal PublicIP will be chanaged. Need update.\n\t\t\t\tUpdateVmPublicIp(nsId, mcisId, temp)\n\t\t\t}\n\t\t}\n\n\t}\nsrc/core/mcis/control.go:3590:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\n\t\t// CCM API 설정\n\t\tccm := api.NewCloudResourceHandler()\n\t\terr := ccm.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(\"ccm failed to set config : \", err)\n\t\t\treturn err\n\t\t}\n\t\terr = ccm.Open()\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(\"ccm api open failed : \", err)\n\t\t\treturn err\n\t\t}\n\t\tdefer ccm.Close()\n\n\t\tvar result string\n\n\t\tswitch action {\n\t\tcase ActionTerminate:\n\n\t\t\tresult, err = ccm.TerminateVMByParam(temp.ConnectionName, cspVmId, \"false\")\n\t\t\tif err != nil {\n\t\t\t\tcommon.CBLog.Error(err)\n\t\t\t\treturn err\n\t\t\t}\n\n\t\tcase ActionReboot:\n\n\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"reboot\")\n\t\t\tif err != nil {\n\t\t\t\tcommon.CBLog.Error(err)\n\t\t\t\treturn err\n\t\t\t}\n\n\t\tcase ActionSuspend:\n\n\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"suspend\")\n\t\t\tif err != nil {\n\t\t\t\tcommon.CBLog.Error(err)\n\t\t\t\treturn err\n\t\t\t}\n\n\t\tcase ActionResume:\n\n\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"resume\")\n\t\t\tif err != nil {\n\t\t\t\tcommon.CBLog.Error(err)\n\t\t\t\treturn err\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn errors.New(action + \"is invalid actionType\")\n\t\t}\n\n\t\tfmt.Println(result)\n\t\tfmt.Println(\"[Calling SPIDER]END vmControl\\n\")\n\n\t\treturn nil\n\t}\nsrc/core/mcis/control.go:114:2: var-naming: struct field VMUserId should be VMUserID (revive)\n\tVMUserId     string // ex) user1\n\t^\nsrc/core/mcis/control.go:153:2: var-naming: struct field Vm should be VM (revive)\n\tVm []TbVmReq `json:\"vm\"`\n\t^\nsrc/core/mcis/control.go:157:2: var-naming: struct field Id should be ID (revive)\n\tId           string `json:\"id\"`\n\t^\nsrc/core/mcis/control.go:170:2: var-naming: struct field Vm should be VM (revive)\n\tVm            []TbVmInfo `json:\"vm\"`\n\t^\nsrc/core/mcis/control.go:174:6: var-naming: type TbVmReq should be TbVMReq (revive)\ntype TbVmReq struct {\n     ^\nsrc/core/mcis/control.go:179:2: var-naming: struct field VmGroupSize should be VMGroupSize (revive)\n\tVmGroupSize string `json:\"vmGroupSize\" example:\"3\" default:\"\"`\n\t^\nsrc/core/mcis/control.go:186:2: var-naming: struct field SpecId should be SpecID (revive)\n\tSpecId           string   `json:\"specId\"`\n\t^\nsrc/core/mcis/control.go:187:2: var-naming: struct field ImageId should be ImageID (revive)\n\tImageId          string   `json:\"imageId\"`\n\t^\nsrc/core/mcis/control.go:188:2: var-naming: struct field VNetId should be VNetID (revive)\n\tVNetId           string   `json:\"vNetId\"`\n\t^\nsrc/core/mcis/control.go:189:2: var-naming: struct field SubnetId should be SubnetID (revive)\n\tSubnetId         string   `json:\"subnetId\"`\n\t^\nsrc/core/mcis/control.go:191:2: var-naming: struct field SshKeyId should be SSHKeyID (revive)\n\tSshKeyId         string   `json:\"sshKeyId\"`\n\t^\nsrc/core/mcis/control.go:192:2: var-naming: struct field VmUserAccount should be VMUserAccount (revive)\n\tVmUserAccount    string   `json:\"vmUserAccount\"`\n\t^\nsrc/core/mcis/control.go:193:2: var-naming: struct field VmUserPassword should be VMUserPassword (revive)\n\tVmUserPassword   string   `json:\"vmUserPassword\"`\n\t^\nsrc/core/mcis/control.go:197:6: var-naming: type TbVmGroupInfo should be TbVMGroupInfo (revive)\ntype TbVmGroupInfo struct {\n     ^\nsrc/core/mcis/control.go:198:2: var-naming: struct field Id should be ID (revive)\n\tId          string   `json:\"id\"`\n\t^\nsrc/core/mcis/control.go:200:2: var-naming: struct field VmId should be VMID (revive)\n\tVmId        []string `json:\"vmId\"`\n\t^\nsrc/core/mcis/control.go:201:2: var-naming: struct field VmGroupSize should be VMGroupSize (revive)\n\tVmGroupSize string   `json:\"vmGroupSize\"`\n\t^\nsrc/core/mcis/control.go:205:6: var-naming: type TbVmInfo should be TbVMInfo (revive)\ntype TbVmInfo struct {\n     ^\nsrc/core/mcis/control.go:206:2: var-naming: struct field Id should be ID (revive)\n\tId   string `json:\"id\"`\n\t^\nsrc/core/mcis/control.go:210:2: var-naming: struct field VmGroupId should be VMGroupID (revive)\n\tVmGroupId string `json:\"vmGroupId\"`\n\t^\nsrc/core/mcis/control.go:241:2: var-naming: struct field SpecId should be SpecID (revive)\n\tSpecId           string   `json:\"specId\"`\n\t^\nsrc/core/mcis/control.go:242:2: var-naming: struct field ImageId should be ImageID (revive)\n\tImageId          string   `json:\"imageId\"`\n\t^\nsrc/core/mcis/control.go:243:2: var-naming: struct field VNetId should be VNetID (revive)\n\tVNetId           string   `json:\"vNetId\"`\n\t^\nsrc/core/mcis/control.go:244:2: var-naming: struct field SubnetId should be SubnetID (revive)\n\tSubnetId         string   `json:\"subnetId\"`\n\t^\nsrc/core/mcis/control.go:246:2: var-naming: struct field SshKeyId should be SSHKeyID (revive)\n\tSshKeyId         string   `json:\"sshKeyId\"`\n\t^\nsrc/core/mcis/control.go:247:2: var-naming: struct field VmUserAccount should be VMUserAccount (revive)\n\tVmUserAccount    string   `json:\"vmUserAccount\"`\n\t^\nsrc/core/mcis/control.go:248:2: var-naming: struct field VmUserPassword should be VMUserPassword (revive)\n\tVmUserPassword   string   `json:\"vmUserPassword\"`\n\t^\nsrc/core/mcis/control.go:250:2: var-naming: struct field CspViewVmDetail should be CspViewVMDetail (revive)\n\tCspViewVmDetail SpiderVMInfo `json:\"cspViewVmDetail\"`\n\t^\nsrc/core/mcis/control.go:263:2: var-naming: struct field Id should be ID (revive)\n\tId   string `json:\"id\"`\n\t^\nsrc/core/mcis/control.go:274:2: var-naming: struct field MasterVmId should be MasterVMID (revive)\n\tMasterVmId    string `json:\"masterVmId\" example:\"vm-asiaeast1-cb-01\"`\n\t^\nsrc/core/mcis/control.go:275:2: var-naming: struct field MasterIp should be MasterIP (revive)\n\tMasterIp      string `json:\"masterIp\" example:\"32.201.134.113\"`\n\t^\nsrc/core/mcis/control.go:278:2: var-naming: struct field Vm should be VM (revive)\n\tVm []TbVmStatusInfo `json:\"vm\"`\n\t^\nsrc/core/mcis/control.go:282:6: var-naming: type TbVmStatusInfo should be TbVMStatusInfo (revive)\ntype TbVmStatusInfo struct {\n     ^\nsrc/core/mcis/control.go:283:2: var-naming: struct field Id should be ID (revive)\n\tId      string `json:\"id\"`\n\t^\nsrc/core/mcis/control.go:285:2: var-naming: struct field CspVmId should be CspVMID (revive)\n\tCspVmId string `json:\"cspVmId\"`\n\t^\nsrc/core/mcis/control.go:301:2: var-naming: struct field PublicIp should be PublicIP (revive)\n\tPublicIp  string `json:\"publicIp\"`\n\t^\nsrc/core/mcis/control.go:302:2: var-naming: struct field PrivateIp should be PrivateIP (revive)\n\tPrivateIp string `json:\"privateIp\"`\n\t^\nsrc/core/mcis/control.go:315:2: var-naming: struct field VmReq should be VMReq (revive)\n\tVmReq          []TbVmRecommendReq `json:\"vmReq\"`\n\t^\nsrc/core/mcis/control.go:321:6: var-naming: type TbVmRecommendReq should be TbVMRecommendReq (revive)\ntype TbVmRecommendReq struct {\n     ^\nsrc/core/mcis/control.go:334:6: var-naming: type TbVmPriority should be TbVMPriority (revive)\ntype TbVmPriority struct {\n     ^\nsrc/core/mcis/control.go:336:2: var-naming: struct field VmSpec should be VMSpec (revive)\n\tVmSpec   mcir.TbSpecInfo `json:\"vmSpec\"`\n\t^\nsrc/core/mcis/control.go:339:6: var-naming: type TbVmRecommendInfo should be TbVMRecommendInfo (revive)\ntype TbVmRecommendInfo struct {\n     ^\nsrc/core/mcis/control.go:340:2: var-naming: struct field VmReq should be VMReq (revive)\n\tVmReq          TbVmRecommendReq  `json:\"vmReq\"`\n\t^\nsrc/core/mcis/control.go:341:2: var-naming: struct field VmPriority should be VMPriority (revive)\n\tVmPriority     []TbVmPriority    `json:\"vmPriority\"`\n\t^\nsrc/core/mcis/control.go:346:6: var-naming: func VerifySshUserName should be VerifySSHUserName (revive)\nfunc VerifySshUserName(nsId string, mcisId string, vmId string, vmIp string, sshPort string, givenUserName string) (string, string, error) {\n     ^\nsrc/core/mcis/control.go:447:6: var-naming: type SshCmdResult should be SSHCmdResult (revive)\ntype SshCmdResult struct { // Tumblebug\n     ^\nsrc/core/mcis/control.go:448:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId string `json:\"mcisId\"`\n\t^\nsrc/core/mcis/control.go:449:2: var-naming: struct field VmId should be VMID (revive)\n\tVmId   string `json:\"vmId\"`\n\t^\nsrc/core/mcis/control.go:450:2: var-naming: struct field VmIp should be VMIP (revive)\n\tVmIp   string `json:\"vmIp\"`\n\t^\nsrc/core/mcis/control.go:457:2: var-naming: don't use underscores in Go names; struct field Result_array should be ResultArray (revive)\n\tResult_array []AgentInstallContent `json:\"result_array\"`\n\t^\nsrc/core/mcis/control.go:462:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId string `json:\"mcisId\"`\n\t^\nsrc/core/mcis/control.go:463:2: var-naming: struct field VmId should be VMID (revive)\n\tVmId   string `json:\"vmId\"`\n\t^\nsrc/core/mcis/control.go:464:2: var-naming: struct field VmIp should be VMIP (revive)\n\tVmIp   string `json:\"vmIp\"`\n\t^\nsrc/core/mcis/control.go:468:25: var-naming: func parameter nsId should be nsID (revive)\nfunc InstallAgentToMcis(nsId string, mcisId string, req *McisCmdReq) (AgentInstallContentWrapper, error) {\n                        ^\nsrc/core/mcis/control.go:509:3: var-naming: var vmId should be vmID (revive)\n\t\tvmId := v\n\t\t^\nsrc/core/mcis/control.go:510:3: var-naming: var vmIp should be vmIP (revive)\n\t\tvmIp, sshPort := GetVmIp(nsId, mcisId, vmId)\n\t\t^\nsrc/core/mcis/control.go:564:2: var-naming: struct field SpecId should be SpecID (revive)\n\tSpecId     string `json:\"specid\"`\n\t^\nsrc/core/mcis/control.go:582:2: var-naming: struct field SpecId should be SpecID (revive)\n\tSpecId      string          `json:\"specid\"`\n\t^\nsrc/core/mcis/control.go:599:56: var-naming: func parameter nsId should be nsID (revive)\nfunc CallMilkyway(wg *sync.WaitGroup, vmList []string, nsId string, mcisId string, vmId string, vmIp string, action string, option string, results *BenchmarkInfoArray) {\n                                                       ^\nsrc/core/mcis/control.go:612:7: var-naming: type JsonTemplate should be JSONTemplate (revive)\n\ttype JsonTemplate struct {\n\t     ^\nsrc/core/mcis/control.go:622:4: var-naming: var vmIdTmp should be vmIDTmp (revive)\n\t\t\tvmIdTmp := vm\n\t\t\t^\nsrc/core/mcis/control.go:623:4: var-naming: var vmIpTmp should be vmIPTmp (revive)\n\t\t\tvmIpTmp, _ := GetVmIp(nsId, mcisId, vmIdTmp)\n\t\t\t^\nsrc/core/mcis/control.go:678:26: var-naming: func parameter nsId should be nsID (revive)\nfunc CoreGetAllBenchmark(nsId string, mcisId string, host string) (*BenchmarkInfoArray, error) {\n                         ^\nsrc/core/mcis/control.go:721:4: var-naming: var SpecId should be SpecID (revive)\n\t\t\tSpecId := k.SpecId\n\t\t\t^\nsrc/core/mcis/control.go:802:3: var-naming: var SpecId should be SpecID (revive)\n\t\tSpecId := k.SpecId\n\t\t^\nsrc/core/mcis/control.go:811:4: var-naming: var tagetSpecId should be tagetSpecID (revive)\n\t\t\ttagetSpecId := m.SpecId\n\t\t\t^\nsrc/core/mcis/control.go:836:23: var-naming: func parameter nsId should be nsID (revive)\nfunc CoreGetBenchmark(nsId string, mcisId string, action string, host string) (*BenchmarkInfoArray, error) {\n                      ^\nsrc/core/mcis/control.go:890:22: var-naming: func parameter nsId should be nsID (revive)\nfunc BenchmarkAction(nsId string, mcisId string, action string, option string) (BenchmarkInfoArray, error) {\n                     ^\nsrc/core/mcis/control.go:906:3: var-naming: var vmId should be vmID (revive)\n\t\tvmId := v\n\t\t^\nsrc/core/mcis/control.go:907:3: var-naming: var vmIp should be vmIP (revive)\n\t\tvmIp, _ := GetVmIp(nsId, mcisId, vmId)\n\t\t^\nsrc/core/mcis/control.go:1044:21: var-naming: func parameter nsId should be nsID (revive)\nfunc UpdateMcisInfo(nsId string, mcisInfoData TbMcisInfo) {\n                    ^\nsrc/core/mcis/control.go:1072:6: var-naming: func UpdateVmInfo should be UpdateVMInfo (revive)\nfunc UpdateVmInfo(nsId string, mcisId string, vmInfoData TbVmInfo) {\n     ^\nsrc/core/mcis/control.go:1098:6: var-naming: func ListMcisId should be ListMcisID (revive)\nfunc ListMcisId(nsId string) ([]string, error) {\n     ^\nsrc/core/mcis/control.go:1133:6: var-naming: func ListVmId should be ListVMID (revive)\nfunc ListVmId(nsId string, mcisId string) ([]string, error) {\n     ^\nsrc/core/mcis/control.go:1188:6: var-naming: func ListVmGroupId should be ListVMGroupID (revive)\nfunc ListVmGroupId(nsId string, mcisId string) ([]string, error) {\n     ^\nsrc/core/mcis/control.go:1224:14: var-naming: func parameter nsId should be nsID (revive)\nfunc DelMcis(nsId string, mcisId string, option string) error {\n             ^\nsrc/core/mcis/control.go:1340:6: var-naming: func DelMcisVm should be DelMcisVM (revive)\nfunc DelMcisVm(nsId string, mcisId string, vmId string, option string) error {\n     ^\nsrc/core/mcis/control.go:1406:23: var-naming: func parameter nsId should be nsID (revive)\nfunc GetRecommendList(nsId string, cpuSize string, memSize string, diskSize string) ([]TbVmPriority, error) {\n                      ^\nsrc/core/mcis/control.go:1411:3: var-naming: struct field Id should be ID (revive)\n\t\tId             string\n\t\t^\nsrc/core/mcis/control.go:1461:23: var-naming: func parameter nsId should be nsID (revive)\nfunc HandleMcisAction(nsId string, mcisId string, action string) (string, error) {\n                      ^\nsrc/core/mcis/control.go:1593:18: var-naming: func parameter nsId should be nsID (revive)\nfunc GetMcisInfo(nsId string, mcisId string) (*TbMcisInfo, error) {\n                 ^\nsrc/core/mcis/control.go:1651:21: var-naming: func parameter nsId should be nsID (revive)\nfunc CoreGetAllMcis(nsId string, option string) ([]TbMcisInfo, error) {\n                    ^\nsrc/core/mcis/control.go:1688:3: var-naming: var mcisId should be mcisID (revive)\n\t\tmcisId := v\n\t\t^\nsrc/core/mcis/control.go:1747:21: var-naming: func parameter nsId should be nsID (revive)\nfunc CoreDelAllMcis(nsId string, option string) (string, error) {\n                    ^\nsrc/core/mcis/control.go:1780:28: var-naming: func parameter nsId should be nsID (revive)\nfunc CorePostMcisRecommend(nsId string, req *McisRecommendReq) ([]TbVmRecommendInfo, error) {\n                           ^\nsrc/core/mcis/control.go:1801:2: var-naming: don't use underscores in Go names; var Vm_recommend should be VMRecommend (revive)\n\tVm_recommend := []TbVmRecommendInfo{}\n\t^\nsrc/core/mcis/control.go:1828:6: var-naming: func CorePostCmdMcisVm should be CorePostCmdMcisVM (revive)\nfunc CorePostCmdMcisVm(nsId string, mcisId string, vmId string, req *McisCmdReq) (string, error) {\n     ^\nsrc/core/mcis/control.go:1854:2: var-naming: var vmIp should be vmIP (revive)\n\tvmIp, sshPort := GetVmIp(nsId, mcisId, vmId)\n\t^\nsrc/core/mcis/control.go:1883:22: var-naming: func parameter nsId should be nsID (revive)\nfunc CorePostCmdMcis(nsId string, mcisId string, req *McisCmdReq) ([]SshCmdResult, error) {\n                     ^\nsrc/core/mcis/control.go:1930:3: var-naming: var vmId should be vmID (revive)\n\t\tvmId := v\n\t\t^\nsrc/core/mcis/control.go:1931:3: var-naming: var vmIp should be vmIP (revive)\n\t\tvmIp, sshPort := GetVmIp(nsId, mcisId, vmId)\n\t\t^\nsrc/core/mcis/control.go:1968:6: var-naming: func CorePostMcisVm should be CorePostMcisVM (revive)\nfunc CorePostMcisVm(nsId string, mcisId string, vmInfoData *TbVmInfo) (*TbVmInfo, error) {\n     ^\nsrc/core/mcis/control.go:2060:6: var-naming: func CorePostMcisGroupVm should be CorePostMcisGroupVM (revive)\nfunc CorePostMcisGroupVm(nsId string, mcisId string, vmReq *TbVmReq) (*TbMcisInfo, error) {\n     ^\nsrc/core/mcis/control.go:2070:6: var-naming: func CreateMcisGroupVm should be CreateMcisGroupVM (revive)\nfunc CreateMcisGroupVm(nsId string, mcisId string, vmRequest *TbVmReq) (*TbMcisInfo, error) {\n     ^\nsrc/core/mcis/control.go:2233:6: var-naming: func CoreGetMcisVmAction should be CoreGetMcisVMAction (revive)\nfunc CoreGetMcisVmAction(nsId string, mcisId string, vmId string, action string) (string, error) {\n     ^\nsrc/core/mcis/control.go:2297:6: var-naming: func CoreGetMcisVmStatus should be CoreGetMcisVMStatus (revive)\nfunc CoreGetMcisVmStatus(nsId string, mcisId string, vmId string) (*TbVmStatusInfo, error) {\n     ^\nsrc/core/mcis/control.go:2349:6: var-naming: func CoreGetMcisVmInfo should be CoreGetMcisVMInfo (revive)\nfunc CoreGetMcisVmInfo(nsId string, mcisId string, vmId string) (*TbVmInfo, error) {\n     ^\nsrc/core/mcis/control.go:2411:17: var-naming: func parameter nsId should be nsID (revive)\nfunc CreateMcis(nsId string, req *TbMcisReq) (*TbMcisInfo, error) {\n                ^\nsrc/core/mcis/control.go:2434:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := req.Name\n\t^\nsrc/core/mcis/control.go:2620:6: var-naming: func AddVmToMcis should be AddVMToMcis (revive)\nfunc AddVmToMcis(wg *sync.WaitGroup, nsId string, mcisId string, vmInfoData *TbVmInfo) error {\n     ^\nsrc/core/mcis/control.go:2705:6: var-naming: func CreateVm should be CreateVM (revive)\nfunc CreateVm(nsId string, mcisId string, vmInfoData *TbVmInfo) error {\n     ^\nsrc/core/mcis/control.go:2772:3: var-naming: var cspVmIdToRequest should be cspVMIDToRequest (revive)\n\t\tcspVmIdToRequest := nsId + \"-\" + mcisId + \"-\" + vmInfoData.Name\n\t\t^\nsrc/core/mcis/control.go:2804:4: var-naming: var CspSgId should be CspSgID (revive)\n\t\t\tCspSgId := v //common.GetCspResourceId(nsId, common.StrSecurityGroup, v)\n\t\t\t^\nsrc/core/mcis/control.go:2909:3: var-naming: var cspVmIdToRequest should be cspVMIDToRequest (revive)\n\t\tcspVmIdToRequest := nsId + \"-\" + mcisId + \"-\" + vmInfoData.Name\n\t\t^\nsrc/core/mcis/control.go:2940:4: var-naming: var CspSgId should be CspSgID (revive)\n\t\t\tCspSgId := v //common.GetCspResourceId(nsId, common.StrSecurityGroup, v)\n\t\t\t^\nsrc/core/mcis/control.go:3055:18: var-naming: func parameter nsId should be nsID (revive)\nfunc ControlMcis(nsId string, mcisId string, action string) error {\n                 ^\nsrc/core/mcis/control.go:3087:29: var-naming: func parameter nsId should be nsID (revive)\nfunc CheckAllowedTransition(nsId string, mcisId string, action string) error {\n                            ^\nsrc/core/mcis/control.go:3123:23: var-naming: func parameter nsId should be nsID (revive)\nfunc ControlMcisAsync(nsId string, mcisId string, action string) error {\n                      ^\nsrc/core/mcis/control.go:3219:6: var-naming: type ControlVmResult should be ControlVMResult (revive)\ntype ControlVmResult struct {\n     ^\nsrc/core/mcis/control.go:3220:2: var-naming: struct field VmId should be VMID (revive)\n\tVmId   string `json:\"vmId\"`\n\t^\nsrc/core/mcis/control.go:3224:6: var-naming: type ControlVmResultWrapper should be ControlVMResultWrapper (revive)\ntype ControlVmResultWrapper struct {\n     ^\nsrc/core/mcis/control.go:3228:6: var-naming: func ControlVmAsync should be ControlVMAsync (revive)\nfunc ControlVmAsync(wg *sync.WaitGroup, nsId string, mcisId string, vmId string, action string, results *ControlVmResultWrapper) error {\n     ^\nsrc/core/mcis/control.go:3262:3: var-naming: var cspVmId should be cspVMID (revive)\n\t\tcspVmId := temp.CspViewVmDetail.IId.NameId\n\t\t^\nsrc/core/mcis/control.go:3461:6: var-naming: func ControlVm should be ControlVM (revive)\nfunc ControlVm(nsId string, mcisId string, vmId string, action string) error {\n     ^\nsrc/core/mcis/control.go:3464:3: var-naming: struct field CloudId should be CloudID (revive)\n\t\tCloudId string `json:\"cloudId\"`\n\t\t^\nsrc/core/mcis/control.go:3465:3: var-naming: struct field CspVmId should be CspVMID (revive)\n\t\tCspVmId string `json:\"cspVmId\"`\n\t\t^\nsrc/core/mcis/control.go:3497:2: var-naming: var cspVmId should be cspVMID (revive)\n\tcspVmId := temp.CspViewVmDetail.IId.NameId\n\t^\nsrc/core/mcis/control.go:3653:20: var-naming: func parameter nsId should be nsID (revive)\nfunc GetMcisObject(nsId string, mcisId string) (TbMcisInfo, error) {\n                   ^\nsrc/core/mcis/control.go:3682:20: var-naming: func parameter nsId should be nsID (revive)\nfunc GetMcisStatus(nsId string, mcisId string) (*McisStatusInfo, error) {\n                   ^\nsrc/core/mcis/control.go:3785:2: var-naming: var numVm should be numVM (revive)\n\tnumVm := len(mcisStatus.Vm)\n\t^\nsrc/core/mcis/control.go:3833:23: var-naming: func parameter nsId should be nsID (revive)\nfunc GetMcisStatusAll(nsId string) ([]McisStatusInfo, error) {\n                      ^\nsrc/core/mcis/control.go:3842:9: var-naming: range var mcisId should be mcisID (revive)\n\tfor _, mcisId := range mcisList {\n\t       ^\nsrc/core/mcis/control.go:3856:6: var-naming: func GetVmObject should be GetVMObject (revive)\nfunc GetVmObject(nsId string, mcisId string, vmId string) (TbVmInfo, error) {\n     ^\nsrc/core/mcis/control.go:3869:6: var-naming: func GetVmStatusAsync should be GetVMStatusAsync (revive)\nfunc GetVmStatusAsync(wg *sync.WaitGroup, nsId string, mcisId string, vmId string, results *McisStatusInfo) error {\n     ^\nsrc/core/mcis/control.go:3883:6: var-naming: func GetVmStatus should be GetVMStatus (revive)\nfunc GetVmStatus(nsId string, mcisId string, vmId string) (TbVmStatusInfo, error) {\n     ^\nsrc/core/mcis/control.go:3931:2: var-naming: var cspVmId should be cspVMID (revive)\n\tcspVmId := temp.CspViewVmDetail.IId.NameId\n\t^\nsrc/core/mcis/control.go:4176:6: var-naming: func UpdateVmPublicIp should be UpdateVMPublicIP (revive)\nfunc UpdateVmPublicIp(nsId string, mcisId string, vmInfoData TbVmInfo) error {\n     ^\nsrc/core/mcis/control.go:4191:6: var-naming: func GetVmCurrentPublicIp should be GetVMCurrentPublicIP (revive)\nfunc GetVmCurrentPublicIp(nsId string, mcisId string, vmId string) (TbVmStatusInfo, error) {\n     ^\nsrc/core/mcis/control.go:4212:2: var-naming: var cspVmId should be cspVMID (revive)\n\tcspVmId := temp.CspViewVmDetail.IId.NameId\n\t^\nsrc/core/mcis/control.go:4311:6: var-naming: func GetVmSshKey should be GetVMSSHKey (revive)\nfunc GetVmSshKey(nsId string, mcisId string, vmId string) (string, string, string) {\n     ^\nsrc/core/mcis/control.go:4314:3: var-naming: struct field SshKeyId should be SSHKeyID (revive)\n\t\tSshKeyId string `json:\"sshKeyId\"`\n\t\t^\nsrc/core/mcis/control.go:4342:6: var-naming: func UpdateVmSshKey should be UpdateVMSSHKey (revive)\nfunc UpdateVmSshKey(nsId string, mcisId string, vmId string, verifiedUserName string) error {\n     ^\nsrc/core/mcis/control.go:4345:3: var-naming: struct field SshKeyId should be SSHKeyID (revive)\n\t\tSshKeyId string `json:\"sshKeyId\"`\n\t\t^\nsrc/core/mcis/control.go:4355:2: var-naming: var tmpSshKeyInfo should be tmpSSHKeyInfo (revive)\n\ttmpSshKeyInfo := mcir.TbSshKeyInfo{}\n\t^\nsrc/core/mcis/control.go:4369:6: var-naming: func GetVmIp should be GetVMIP (revive)\nfunc GetVmIp(nsId string, mcisId string, vmId string) (string, string) {\n     ^\nsrc/core/mcis/control.go:4391:6: var-naming: func GetVmSpecId should be GetVMSpecID (revive)\nfunc GetVmSpecId(nsId string, mcisId string, vmId string) string {\n     ^\nsrc/core/mcis/control.go:4394:3: var-naming: struct field SpecId should be SpecID (revive)\n\t\tSpecId string `json:\"specId\"`\n\t\t^\nsrc/core/mcis/control.go:4409:6: var-naming: func GetVmListByLabel should be GetVMListByLabel (revive)\nfunc GetVmListByLabel(nsId string, mcisId string, label string) ([]string, error) {\n     ^\nsrc/core/mcis/control.go:4442:6: var-naming: func GetVmTemplate should be GetVMTemplate (revive)\nfunc GetVmTemplate(nsId string, mcisId string, algo string) (TbVmInfo, error) {\n     ^\nsrc/api/grpc/server/common/namespace.go:20:30: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *NSService) CreateNS(ctx context.Context, req *pb.NSCreateRequest) (*pb.NSInfoResponse, error) {\n                             ^\nsrc/api/grpc/server/common/namespace.go:49:28: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *NSService) ListNS(ctx context.Context, req *pb.Empty) (*pb.ListNSInfoResponse, error) {\n                           ^\nsrc/api/grpc/server/common/namespace.go:71:30: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *NSService) ListNSId(ctx context.Context, req *pb.Empty) (*pb.ListIdResponse, error) {\n                             ^\nsrc/api/grpc/server/common/namespace.go:93:27: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *NSService) GetNS(ctx context.Context, req *pb.NSQryRequest) (*pb.NSInfoResponse, error) {\n                          ^\nsrc/api/grpc/server/common/namespace.go:115:30: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *NSService) DeleteNS(ctx context.Context, req *pb.NSQryRequest) (*pb.MessageResponse, error) {\n                             ^\nsrc/api/grpc/server/common/namespace.go:130:33: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *NSService) DeleteAllNS(ctx context.Context, req *pb.Empty) (*pb.MessageResponse, error) {\n                                ^\nsrc/api/grpc/server/common/namespace.go:145:29: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *NSService) CheckNS(ctx context.Context, req *pb.NSQryRequest) (*pb.ExistsResponse, error) {\n                            ^\nsrc/api/grpc/server/common/config.go:20:39: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) CreateConfig(ctx context.Context, req *pb.ConfigCreateRequest) (*pb.ConfigInfoResponse, error) {\n                                      ^\nsrc/api/grpc/server/common/config.go:49:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) ListConfig(ctx context.Context, req *pb.Empty) (*pb.ListConfigInfoResponse, error) {\n                                    ^\nsrc/api/grpc/server/common/utility.go:21:41: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) ListConnConfig(ctx context.Context, req *pb.Empty) (*pb.ListConnConfigResponse, error) {\n                                        ^\nsrc/api/grpc/server/common/config.go:71:36: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) GetConfig(ctx context.Context, req *pb.ConfigQryRequest) (*pb.ConfigInfoResponse, error) {\n                                   ^\nsrc/api/grpc/server/common/config.go:93:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) InitConfig(ctx context.Context, req *pb.ConfigQryRequest) (*pb.MessageResponse, error) {\n                                    ^\nsrc/api/grpc/server/common/utility.go:42:40: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) GetConnConfig(ctx context.Context, req *pb.ConnConfigQryRequest) (*pb.ConnConfigResponse, error) {\n                                       ^\nsrc/api/grpc/server/common/utility.go:64:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) ListRegion(ctx context.Context, req *pb.Empty) (*pb.ListRegionResponse, error) {\n                                    ^\nsrc/api/grpc/server/common/config.go:108:40: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) InitAllConfig(ctx context.Context, req *pb.Empty) (*pb.MessageResponse, error) {\n                                       ^\nsrc/api/grpc/server/common/utility.go:85:36: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) GetRegion(ctx context.Context, req *pb.RegionQryRequest) (*pb.RegionResponse, error) {\n                                   ^\nsrc/api/grpc/server/common/utility.go:107:47: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) InspectMcirResources(ctx context.Context, req *pb.InspectQryRequest) (*pb.InspectMcirInfoResponse, error) {\n                                              ^\nsrc/api/grpc/server/common/utility.go:129:45: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) InspectVmResources(ctx context.Context, req *pb.InspectQryRequest) (*pb.InspectVmInfoResponse, error) {\n                                            ^\nsrc/api/grpc/server/common/utility.go:151:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) ListObject(ctx context.Context, req *pb.ObjectQryRequest) (*pb.ListObjectInfoResponse, error) {\n                                    ^\nsrc/api/grpc/server/common/utility.go:163:36: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) GetObject(ctx context.Context, req *pb.ObjectQryRequest) (*pb.ObjectInfoResponse, error) {\n                                   ^\nsrc/api/grpc/server/common/utility.go:178:39: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) DeleteObject(ctx context.Context, req *pb.ObjectQryRequest) (*pb.MessageResponse, error) {\n                                      ^\nsrc/api/grpc/server/common/utility.go:200:42: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *UtilityService) DeleteAllObject(ctx context.Context, req *pb.ObjectQryRequest) (*pb.MessageResponse, error) {\n                                         ^\nsrc/api/rest/server/mcis/control.go:225:18: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestPutMcis(c echo.Context) error {\n                 ^\nsrc/api/rest/server/mcis/control.go:613:20: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestPutMcisVm(c echo.Context) error {\n                   ^\nsrc/api/rest/server/mcis/orchestration.go:128:24: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestPutMcisPolicy(c echo.Context) error {\n                       ^\nsrc/api/rest/server/mcis/plan.go:23:6: var-naming: func RestRecommendVm should be RestRecommendVM (revive)\nfunc RestRecommendVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/plan.go:25:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:13:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:14:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:18:7: var-naming: type JsonTemplate should be JSONTemplate (revive)\n\ttype JsonTemplate struct {\n\t     ^\nsrc/api/rest/server/mcis/orchestration.go:27:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:28:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:34:6: var-naming: func RestCheckVm should be RestCheckVM (revive)\nfunc RestCheckVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/utility.go:36:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:59:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:60:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:37:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:38:2: var-naming: var vmId should be vmID (revive)\n\tvmId := c.Param(\"vmId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:96:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:145:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:42:7: var-naming: type JsonTemplate should be JSONTemplate (revive)\n\ttype JsonTemplate struct {\n\t     ^\nsrc/api/rest/server/mcis/orchestration.go:146:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:170:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:26:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:52:6: var-naming: func RestTestListVmId should be RestTestListVMID (revive)\nfunc RestTestListVmId(c echo.Context) error { // for debug\n     ^\nsrc/api/rest/server/mcis/control.go:53:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/monitor.go:26:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/monitor.go:27:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:54:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:86:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/monitor.go:58:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/monitor.go:59:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:87:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:172:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:243:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:244:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:270:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:285:2: var-naming: don't use underscores in Go names; struct field Vm_recommend should be VMRecommend (revive)\n\tVm_recommend   []mcis.TbVmRecommendInfo `json:\"vm_recommend\"`\n\t^\nsrc/api/rest/server/mcis/control.go:305:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:329:6: var-naming: type RestPostCmdMcisVmResponse should be RestPostCmdMcisVMResponse (revive)\ntype RestPostCmdMcisVmResponse struct {\n     ^\nsrc/api/rest/server/mcis/control.go:347:6: var-naming: func RestPostCmdMcisVm should be RestPostCmdMcisVM (revive)\nfunc RestPostCmdMcisVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/control.go:349:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:350:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:351:2: var-naming: var vmId should be vmID (revive)\n\tvmId := c.Param(\"vmId\")\n\t^\nsrc/api/rest/server/mcis/control.go:369:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId string `json:\"mcisId\"`\n\t^\nsrc/api/rest/server/mcis/control.go:370:2: var-naming: struct field VmId should be VMID (revive)\n\tVmId   string `json:\"vmId\"`\n\t^\nsrc/api/rest/server/mcis/control.go:371:2: var-naming: struct field VmIp should be VMIP (revive)\n\tVmIp   string `json:\"vmIp\"`\n\t^\nsrc/api/rest/server/mcis/control.go:376:2: var-naming: don't use underscores in Go names; struct field Result_array should be ResultArray (revive)\n\tResult_array []RestPostCmdMcisResponse `json:\"result_array\"`\n\t^\nsrc/api/rest/server/mcis/control.go:394:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:395:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:443:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:444:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:473:6: var-naming: func RestPostMcisVm should be RestPostMcisVM (revive)\nfunc RestPostMcisVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/control.go:475:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:476:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:507:6: var-naming: func RestPostMcisVmGroup should be RestPostMcisVMGroup (revive)\nfunc RestPostMcisVmGroup(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/control.go:509:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:510:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:545:6: var-naming: func RestGetMcisVm should be RestGetMcisVM (revive)\nfunc RestGetMcisVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/control.go:548:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:549:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:550:2: var-naming: var vmId should be vmID (revive)\n\tvmId := c.Param(\"vmId\")\n\t^\nsrc/api/rest/server/mcis/control.go:630:6: var-naming: func RestDelMcisVm should be RestDelMcisVM (revive)\nfunc RestDelMcisVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/control.go:632:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:633:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:634:2: var-naming: var vmId should be vmID (revive)\n\tvmId := c.Param(\"vmId\")\n\t^\nsrc/api/rest/server/mcis/control.go:669:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:670:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:714:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:715:2: var-naming: var mcisId should be mcisID (revive)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/grpc/cbadm/proc/keypair.go:20:6: var-naming: func SaveSshKey should be SaveSSHKey (revive)\nfunc SaveSshKey(mcir *tb_api.MCIRApi, nameSpaceID string, resourceID string, sshSaveFileName string) (string, error) {\n     ^\nsrc/api/grpc/cbadm/proc/mcis.go:15:2: var-naming: struct field Id should be ID (revive)\n\tId   string   `yaml:\"id\" json:\"id\"`\n\t^\nsrc/api/grpc/cbadm/proc/mcis.go:17:2: var-naming: struct field Vm should be VM (revive)\n\tVm   []string `yaml:\"vm\" json:\"vm\"`\n\t^\nsrc/api/grpc/request/common/utility.go:132:26: var-naming: method InspectVmResources should be InspectVMResources (revive)\nfunc (r *UtilityRequest) InspectVmResources() (string, error) {\n                         ^\nsrc/api/grpc/interceptors/authjwt/auth.go:40:17: var-declaration: should omit type string from declaration of var tokenInfo; it will be inferred from the right-hand side (revive)\n\t\tvar tokenInfo string = \"{\"\n\t\t              ^\nsrc/api/grpc/request/mcis/control.go:72:23: var-naming: method ListMcisId should be ListMcisID (revive)\nfunc (r *MCISRequest) ListMcisId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcis/control.go:207:23: var-naming: method ListMcisVmId should be ListMcisVMID (revive)\nfunc (r *MCISRequest) ListMcisVmId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcis/control.go:504:23: var-naming: method CmdMcisVm should be CmdMcisVM (revive)\nfunc (r *MCISRequest) CmdMcisVm() (string, error) {\n                      ^\nsrc/api/grpc/request/mcis/utility.go:45:23: var-naming: method CheckVm should be CheckVM (revive)\nfunc (r *MCISRequest) CheckVm() (string, error) {\n                      ^\nsrc/api/grpc/request/mcirapi.go:41:2: var-naming: struct field NameId should be NameID (revive)\n\tNameId   string `yaml:\"NameId\" json:\"NameId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:42:2: var-naming: struct field SystemId should be SystemID (revive)\n\tSystemId string `yaml:\"SystemId\" json:\"SystemId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:47:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId string     `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:55:2: var-naming: struct field CspImageId should be CspImageID (revive)\n\tCspImageId     string `yaml:\"cspImageId\" json:\"cspImageId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:61:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId string      `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:67:2: var-naming: struct field Id should be ID (revive)\n\tId                   string     `yaml:\"id\" json:\"id\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:70:2: var-naming: struct field CspImageId should be CspImageID (revive)\n\tCspImageId           string     `yaml:\"cspImageId\" json:\"cspImageId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:83:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId     string   `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:89:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId string             `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:97:2: var-naming: struct field VNetId should be VNetID (revive)\n\tVNetId         string                    `yaml:\"vNetId\" json:\"vNetId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:113:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId string    `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:127:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId string     `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:133:2: var-naming: struct field Id should be ID (revive)\n\tId                    string   `yaml:\"id\" json:\"id\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:137:2: var-naming: don't use underscores in Go names; struct field Os_type should be OsType (revive)\n\tOs_type               string   `yaml:\"os_type\" json:\"os_type\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:138:2: var-naming: don't use underscores in Go names; struct field Num_vCPU should be NumVCPU (revive)\n\tNum_vCPU              uint16   `yaml:\"num_vCPU\" json:\"num_vCPU\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:139:2: var-naming: don't use underscores in Go names; struct field Num_core should be NumCore (revive)\n\tNum_core              uint16   `yaml:\"num_core\" json:\"num_core\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:140:2: var-naming: don't use underscores in Go names; struct field Mem_GiB should be MemGiB (revive)\n\tMem_GiB               uint16   `yaml:\"mem_GiB\" json:\"mem_GiB\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:141:2: var-naming: don't use underscores in Go names; struct field Storage_GiB should be StorageGiB (revive)\n\tStorage_GiB           uint32   `yaml:\"storage_GiB\" json:\"storage_GiB\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:143:2: var-naming: don't use underscores in Go names; struct field Cost_per_hour should be CostPerHour (revive)\n\tCost_per_hour         float32  `yaml:\"cost_per_hour\" json:\"cost_per_hour\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:144:2: var-naming: don't use underscores in Go names; struct field Num_storage should be NumStorage (revive)\n\tNum_storage           uint8    `yaml:\"num_storage\" json:\"num_storage\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:145:2: var-naming: don't use underscores in Go names; struct field Max_num_storage should be MaxNumStorage (revive)\n\tMax_num_storage       uint8    `yaml:\"max_num_storage\" json:\"max_num_storage\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:146:2: var-naming: don't use underscores in Go names; struct field Max_total_storage_TiB should be MaxTotalStorageTiB (revive)\n\tMax_total_storage_TiB uint16   `yaml:\"max_total_storage_TiB\" json:\"max_total_storage_TiB\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:147:2: var-naming: don't use underscores in Go names; struct field Net_bw_Gbps should be NetBwGbps (revive)\n\tNet_bw_Gbps           uint16   `yaml:\"net_bw_Gbps\" json:\"net_bw_Gbps\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:148:2: var-naming: don't use underscores in Go names; struct field Ebs_bw_Mbps should be EbsBwMbps (revive)\n\tEbs_bw_Mbps           uint32   `yaml:\"ebs_bw_Mbps\" json:\"ebs_bw_Mbps\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:149:2: var-naming: don't use underscores in Go names; struct field Gpu_model should be GpuModel (revive)\n\tGpu_model             string   `yaml:\"gpu_model\" json:\"gpu_model\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:150:2: var-naming: don't use underscores in Go names; struct field Num_gpu should be NumGpu (revive)\n\tNum_gpu               uint8    `yaml:\"num_gpu\" json:\"num_gpu\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:151:2: var-naming: don't use underscores in Go names; struct field Gpumem_GiB should be GpumemGiB (revive)\n\tGpumem_GiB            uint16   `yaml:\"gpumem_GiB\" json:\"gpumem_GiB\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:152:2: var-naming: don't use underscores in Go names; struct field Gpu_p2p should be GpuP2p (revive)\n\tGpu_p2p               string   `yaml:\"gpu_p2p\" json:\"gpu_p2p\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:155:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_01 should be EvaluationScore01 (revive)\n\tEvaluationScore_01    float32  `yaml:\"evaluationScore_01\" json:\"evaluationScore_01\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:156:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_02 should be EvaluationScore02 (revive)\n\tEvaluationScore_02    float32  `yaml:\"evaluationScore_02\" json:\"evaluationScore_02\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:157:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_03 should be EvaluationScore03 (revive)\n\tEvaluationScore_03    float32  `yaml:\"evaluationScore_03\" json:\"evaluationScore_03\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:158:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_04 should be EvaluationScore04 (revive)\n\tEvaluationScore_04    float32  `yaml:\"evaluationScore_04\" json:\"evaluationScore_04\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:159:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_05 should be EvaluationScore05 (revive)\n\tEvaluationScore_05    float32  `yaml:\"evaluationScore_05\" json:\"evaluationScore_05\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:160:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_06 should be EvaluationScore06 (revive)\n\tEvaluationScore_06    float32  `yaml:\"evaluationScore_06\" json:\"evaluationScore_06\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:161:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_07 should be EvaluationScore07 (revive)\n\tEvaluationScore_07    float32  `yaml:\"evaluationScore_07\" json:\"evaluationScore_07\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:162:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_08 should be EvaluationScore08 (revive)\n\tEvaluationScore_08    float32  `yaml:\"evaluationScore_08\" json:\"evaluationScore_08\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:163:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_09 should be EvaluationScore09 (revive)\n\tEvaluationScore_09    float32  `yaml:\"evaluationScore_09\" json:\"evaluationScore_09\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:164:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_10 should be EvaluationScore10 (revive)\n\tEvaluationScore_10    float32  `yaml:\"evaluationScore_10\" json:\"evaluationScore_10\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:170:6: var-naming: type TbSshKeyCreateRequest should be TbSSHKeyCreateRequest (revive)\ntype TbSshKeyCreateRequest struct {\n     ^\nsrc/api/grpc/request/mcirapi.go:171:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId string      `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:176:6: var-naming: type TbSshKeyReq should be TbSSHKeyReq (revive)\ntype TbSshKeyReq struct {\n     ^\nsrc/api/grpc/request/mcirapi.go:184:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId string    `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:200:2: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\tIPv4_CIDR    string     `yaml:\"IPv4_CIDR\" json:\"IPv4_CIDR\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:517:19: var-naming: method ListImageId should be ListImageID (revive)\nfunc (m *MCIRApi) ListImageId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:527:19: var-naming: method ListImageIdByParam should be ListImageIDByParam (revive)\nfunc (m *MCIRApi) ListImageIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:706:64: var-naming: method parameter cspImageId should be cspImageID (revive)\nfunc (m *MCIRApi) GetLookupImageByParam(connConfigName string, cspImageId string) (string, error) {\n                                                               ^\nsrc/api/grpc/request/mcirapi.go:775:19: var-naming: method ListSecurityGroupId should be ListSecurityGroupID (revive)\nfunc (m *MCIRApi) ListSecurityGroupId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:785:19: var-naming: method ListSecurityGroupIdByParam should be ListSecurityGroupIDByParam (revive)\nfunc (m *MCIRApi) ListSecurityGroupIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:958:19: var-naming: method ListSpecId should be ListSpecID (revive)\nfunc (m *MCIRApi) ListSpecId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:968:19: var-naming: method ListSpecIdByParam should be ListSpecIDByParam (revive)\nfunc (m *MCIRApi) ListSpecIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1173:19: var-naming: method CreateSshKey should be CreateSSHKey (revive)\nfunc (m *MCIRApi) CreateSshKey(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1183:19: var-naming: method CreateSshKeyByParam should be CreateSSHKeyByParam (revive)\nfunc (m *MCIRApi) CreateSshKeyByParam(req *TbSshKeyCreateRequest) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1202:19: var-naming: method ListSshKey should be ListSSHKey (revive)\nfunc (m *MCIRApi) ListSshKey(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1212:19: var-naming: method ListSshKeyByParam should be ListSSHKeyByParam (revive)\nfunc (m *MCIRApi) ListSshKeyByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1227:19: var-naming: method ListSshKeyId should be ListSSHKeyID (revive)\nfunc (m *MCIRApi) ListSshKeyId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1237:19: var-naming: method ListSshKeyIdByParam should be ListSSHKeyIDByParam (revive)\nfunc (m *MCIRApi) ListSshKeyIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1252:19: var-naming: method GetSshKey should be GetSSHKey (revive)\nfunc (m *MCIRApi) GetSshKey(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1262:19: var-naming: method GetSshKeyByParam should be GetSSHKeyByParam (revive)\nfunc (m *MCIRApi) GetSshKeyByParam(nameSpaceID string, resourceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1277:19: var-naming: method DeleteSshKey should be DeleteSSHKey (revive)\nfunc (m *MCIRApi) DeleteSshKey(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1287:19: var-naming: method DeleteSshKeyByParam should be DeleteSSHKeyByParam (revive)\nfunc (m *MCIRApi) DeleteSshKeyByParam(nameSpaceID string, resourceID string, force string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1302:19: var-naming: method DeleteAllSshKey should be DeleteAllSSHKey (revive)\nfunc (m *MCIRApi) DeleteAllSshKey(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1312:19: var-naming: method DeleteAllSshKeyByParam should be DeleteAllSSHKeyByParam (revive)\nfunc (m *MCIRApi) DeleteAllSshKeyByParam(nameSpaceID string, force string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1381:19: var-naming: method ListVNetId should be ListVNetID (revive)\nfunc (m *MCIRApi) ListVNetId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1391:19: var-naming: method ListVNetIdByParam should be ListVNetIDByParam (revive)\nfunc (m *MCIRApi) ListVNetIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:35:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId string    `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:46:2: var-naming: struct field Vm should be VM (revive)\n\tVm              []TbVmReq `yaml:\"vm\" json:\"vm\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:50:6: var-naming: type TbVmReq should be TbVMReq (revive)\ntype TbVmReq struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:52:2: var-naming: struct field VmGroupSize should be VMGroupSize (revive)\n\tVmGroupSize      string   `yaml:\"vmGroupSize\" json:\"vmGroupSize\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:56:2: var-naming: struct field SpecId should be SpecID (revive)\n\tSpecId           string   `yaml:\"specId\" json:\"specId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:57:2: var-naming: struct field ImageId should be ImageID (revive)\n\tImageId          string   `yaml:\"imageId\" json:\"imageId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:58:2: var-naming: struct field VNetId should be VNetID (revive)\n\tVNetId           string   `yaml:\"vNetId\" json:\"vNetId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:59:2: var-naming: struct field SubnetId should be SubnetID (revive)\n\tSubnetId         string   `yaml:\"subnetId\" json:\"subnetId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:61:2: var-naming: struct field SshKeyId should be SSHKeyID (revive)\n\tSshKeyId         string   `yaml:\"sshKeyId\" json:\"sshKeyId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:62:2: var-naming: struct field VmUserAccount should be VMUserAccount (revive)\n\tVmUserAccount    string   `yaml:\"vmUserAccount\" json:\"vmUserAccount\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:63:2: var-naming: struct field VmUserPassword should be VMUserPassword (revive)\n\tVmUserPassword   string   `yaml:\"vmUserPassword\" json:\"vmUserPassword\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:67:6: var-naming: type TbVmCreateRequest should be TbVMCreateRequest (revive)\ntype TbVmCreateRequest struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:68:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId   string   `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:69:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId string   `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:74:6: var-naming: type TbVmGroupCreateRequest should be TbVMGroupCreateRequest (revive)\ntype TbVmGroupCreateRequest struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:75:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId   string  `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:76:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId string  `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:81:6: var-naming: type TbVmInfo should be TbVMInfo (revive)\ntype TbVmInfo struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:82:2: var-naming: struct field Id should be ID (revive)\n\tId               string      `yaml:\"id\" json:\"id\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:84:2: var-naming: struct field VmGroupId should be VMGroupID (revive)\n\tVmGroupId        string      `yaml:\"vmGroupId\" json:\"vmGroupId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:103:2: var-naming: struct field SpecId should be SpecID (revive)\n\tSpecId           string      `yaml:\"specId\" json:\"specId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:104:2: var-naming: struct field ImageId should be ImageID (revive)\n\tImageId          string      `yaml:\"imageId\" json:\"imageId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:105:2: var-naming: struct field VNetId should be VNetID (revive)\n\tVNetId           string      `yaml:\"vNetId\" json:\"vNetId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:106:2: var-naming: struct field SubnetId should be SubnetID (revive)\n\tSubnetId         string      `yaml:\"subnetId\" json:\"subnetId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:108:2: var-naming: struct field SshKeyId should be SSHKeyID (revive)\n\tSshKeyId         string      `yaml:\"sshKeyId\" json:\"sshKeyId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:109:2: var-naming: struct field VmUserAccount should be VMUserAccount (revive)\n\tVmUserAccount    string      `yaml:\"vmUserAccount\" json:\"vmUserAccount\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:110:2: var-naming: struct field VmUserPassword should be VMUserPassword (revive)\n\tVmUserPassword   string      `yaml:\"vmUserPassword\" json:\"vmUserPassword\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:143:2: var-naming: struct field VMUserId should be VMUserID (revive)\n\tVMUserId     string `yaml:\"VMUserId\" json:\"VMUserId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:168:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId string           `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:174:2: var-naming: struct field VmReq should be VMReq (revive)\n\tVmReq          []TbVmRecommendReq `yaml:\"vmReq\" json:\"vmReq\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:181:6: var-naming: type TbVmRecommendReq should be TbVMRecommendReq (revive)\ntype TbVmRecommendReq struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:195:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId   string     `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:196:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId string     `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:202:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId   string `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:203:2: var-naming: struct field VmId should be VMID (revive)\n\tVmId     string `yaml:\"vmId\" json:\"vmId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:204:2: var-naming: struct field Ip should be IP (revive)\n\tIp       string `yaml:\"ip\" json:\"ip\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:206:2: var-naming: struct field SshKey should be SSHKey (revive)\n\tSshKey   string `yaml:\"sshKey\" json:\"sshKey\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:211:6: var-naming: type McisCmdVmCreateRequest should be McisCmdVMCreateRequest (revive)\ntype McisCmdVmCreateRequest struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:212:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId   string     `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:213:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId string     `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:214:2: var-naming: struct field VmId should be VMID (revive)\n\tVmId   string     `yaml:\"vmId\" json:\"vmId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:220:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId   string         `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:221:2: var-naming: struct field McisId should be McisID (revive)\n\tMcisId string         `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:237:2: var-naming: struct field Vm should be VM (revive)\n\tVm            TbVmInfo   `yaml:\"vm\" json:\"vm\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:252:2: var-naming: struct field Id should be ID (revive)\n\tId     string   `yaml:\"Id\" json:\"Id\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:260:6: var-naming: type McisRecommendVmCreateRequest should be McisRecommendVMCreateRequest (revive)\ntype McisRecommendVmCreateRequest struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:261:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId string         `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:591:19: var-naming: method ListMcisId should be ListMcisID (revive)\nfunc (m *MCISApi) ListMcisId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:601:19: var-naming: method ListMcisIdByParam should be ListMcisIDByParam (revive)\nfunc (m *MCISApi) ListMcisIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:716:19: var-naming: method ListMcisVmId should be ListMcisVMID (revive)\nfunc (m *MCISApi) ListMcisVmId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:726:19: var-naming: method ListMcisVmIdByParam should be ListMcisVMIDByParam (revive)\nfunc (m *MCISApi) ListMcisVmIdByParam(nameSpaceID string, mcisID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:1036:19: var-naming: method CmdMcisVm should be CmdMcisVM (revive)\nfunc (m *MCISApi) CmdMcisVm(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:1046:19: var-naming: method CmdMcisVmByParam should be CmdMcisVMByParam (revive)\nfunc (m *MCISApi) CmdMcisVmByParam(req *McisCmdVmCreateRequest) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:1223:19: var-naming: method CheckVm should be CheckVM (revive)\nfunc (m *MCISApi) CheckVm(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:1233:19: var-naming: method CheckVmByParam should be CheckVMByParam (revive)\nfunc (m *MCISApi) CheckVmByParam(nameSpaceID string, mcisID string, vmID string) (string, error) {\n                  ^\nsrc/api/grpc/request/tbutilapi.go:23:6: var-naming: type UtilityApi should be UtilityAPI (revive)\ntype UtilityApi struct {\n     ^\nsrc/api/grpc/request/tbutilapi.go:385:39: var-naming: method parameter configId should be configID (revive)\nfunc (u *UtilityApi) GetConfigByParam(configId string) (string, error) {\n                                      ^\nsrc/api/grpc/request/tbutilapi.go:410:40: var-naming: method parameter configId should be configID (revive)\nfunc (u *UtilityApi) InitConfigByParam(configId string) (string, error) {\n                                       ^\nsrc/api/grpc/request/tbutilapi.go:459:22: var-naming: method InspectVmResources should be InspectVMResources (revive)\nfunc (u *UtilityApi) InspectVmResources(doc string) (string, error) {\n                     ^\nsrc/api/grpc/request/tbutilapi.go:469:22: var-naming: method InspectVmResourcesByParam should be InspectVMResourcesByParam (revive)\nfunc (u *UtilityApi) InspectVmResourcesByParam(connectionName string) (string, error) {\n                     ^\nsrc/core/common/common.go:19:6: var-naming: type IdList should be IDList (revive)\ntype IdList struct {\n     ^\nsrc/core/common/common.go:20:2: var-naming: struct field IdList should be IDList (revive)\n\tIdList []string `json:\"idList\"`\n\t^\nsrc/core/common/common.go:27:5: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nvar SPIDER_REST_URL string\n    ^\nsrc/core/common/common.go:28:5: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nvar DRAGONFLY_REST_URL string\n    ^\nsrc/core/common/common.go:29:5: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nvar DB_URL string\n    ^\nsrc/core/common/common.go:30:5: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nvar DB_DATABASE string\n    ^\nsrc/core/common/common.go:31:5: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nvar DB_USER string\n    ^\nsrc/core/common/common.go:32:5: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nvar DB_PASSWORD string\n    ^\nsrc/core/common/common.go:33:5: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nvar AUTOCONTROL_DURATION_MS string\n    ^\nsrc/core/common/common.go:39:2: var-naming: don't use underscores in Go names; const StrSPIDER_REST_URL should be StrSPIDERRESTURL (revive)\n\tStrSPIDER_REST_URL            string = \"SPIDER_REST_URL\"\n\t^\nsrc/core/common/common.go:40:2: var-naming: don't use underscores in Go names; const StrDRAGONFLY_REST_URL should be StrDRAGONFLYRESTURL (revive)\n\tStrDRAGONFLY_REST_URL         string = \"DRAGONFLY_REST_URL\"\n\t^\nsrc/core/common/common.go:41:2: var-naming: don't use underscores in Go names; const StrDB_URL should be StrDBURL (revive)\n\tStrDB_URL                     string = \"DB_URL\"\n\t^\nsrc/core/common/common.go:42:2: var-naming: don't use underscores in Go names; const StrDB_DATABASE should be StrDBDATABASE (revive)\n\tStrDB_DATABASE                string = \"DB_DATABASE\"\n\t^\nsrc/core/common/common.go:43:2: var-naming: don't use underscores in Go names; const StrDB_USER should be StrDBUSER (revive)\n\tStrDB_USER                    string = \"DB_USER\"\n\t^\nsrc/core/common/common.go:44:2: var-naming: don't use underscores in Go names; const StrDB_PASSWORD should be StrDBPASSWORD (revive)\n\tStrDB_PASSWORD                string = \"DB_PASSWORD\"\n\t^\nsrc/core/common/common.go:45:2: var-naming: don't use underscores in Go names; const StrAUTOCONTROL_DURATION_MS should be StrAUTOCONTROLDURATIONMS (revive)\n\tStrAUTOCONTROL_DURATION_MS    string = \"AUTOCONTROL_DURATION_MS\"\n\t^\nsrc/core/common/common.go:67:2: var-naming: struct field NameId should be NameID (revive)\n\tNameId   string // NameID by user\n\t^\nsrc/core/common/common.go:68:2: var-naming: struct field SystemId should be SystemID (revive)\n\tSystemId string // SystemID by CloudOS\n\t^\nsrc/core/common/config.go:29:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"The provided name is empty.\")\n\t\t                  ^\nsrc/core/common/config.go:271:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckConfig failed; configId given is null.\")\n\t\t                  ^\nsrc/core/common/config.go:20:2: var-naming: struct field Id should be ID (revive)\n\tId    string `json:\"id\" example:\"SPIDER_REST_URL\"`\n\t^\nsrc/core/common/config.go:215:6: var-naming: func ListConfigId should be ListConfigID (revive)\nfunc ListConfigId() []string {\n     ^\nsrc/core/common/config.go:260:2: var-naming: var configIdList should be configIDList (revive)\n\tconfigIdList := ListConfigId()\n\t^\nsrc/core/common/namespace.go:330:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckNs failed; nsId given is null.\")\n\t\t                  ^\nsrc/core/common/namespace.go:24:2: var-naming: struct field Id should be ID (revive)\n\tId          string `json:\"id\" example:\"namespaceid01\"`\n\t^\nsrc/core/common/namespace.go:33:4: var-naming: var nsId should be nsID (revive)\n\t\t\tnsId := c.Param(\"nsId\")\n\t\t\t^\nsrc/core/common/namespace.go:184:6: var-naming: func ListNsId should be ListNsID (revive)\nfunc ListNsId() ([]string, error) {\n     ^\nsrc/core/common/namespace.go:309:2: var-naming: var nsIdList should be nsIDList (revive)\n\tnsIdList, err := ListNsId()\n\t^\nsrc/core/common/utility.go:47:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"The provided name is empty.\")\n\t\t                  ^\nsrc/core/common/utility.go:132:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn \"/invalidKey\"\n\t}\nsrc/core/common/utility.go:258:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\n\t\t// CIM API 설정\n\t\tcim := api.NewCloudInfoManager()\n\t\terr := cim.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim failed to set config : \", err)\n\t\t\treturn ConnConfig{}, err\n\t\t}\n\t\terr = cim.Open()\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api open failed : \", err)\n\t\t\treturn ConnConfig{}, err\n\t\t}\n\t\tdefer cim.Close()\n\n\t\tresult, err := cim.GetConnectionConfigByParam(ConnConfigName)\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api request failed : \", err)\n\t\t\treturn ConnConfig{}, err\n\t\t}\n\n\t\ttemp := ConnConfig{}\n\t\terr = json.Unmarshal([]byte(result), &temp)\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api request failed : \", err)\n\t\t\treturn ConnConfig{}, err\n\t\t}\n\t\treturn temp, nil\n\t}\nsrc/core/common/utility.go:328:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\n\t\t// CIM API 설정\n\t\tcim := api.NewCloudInfoManager()\n\t\terr := cim.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim failed to set config : \", err)\n\t\t\treturn ConnConfigList{}, err\n\t\t}\n\t\terr = cim.Open()\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api open failed : \", err)\n\t\t\treturn ConnConfigList{}, err\n\t\t}\n\t\tdefer cim.Close()\n\n\t\tresult, err := cim.ListConnectionConfig()\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api request failed : \", err)\n\t\t\treturn ConnConfigList{}, err\n\t\t}\n\n\t\ttemp := ConnConfigList{}\n\t\terr = json.Unmarshal([]byte(result), &temp)\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api Unmarshal failed : \", err)\n\t\t\treturn ConnConfigList{}, err\n\t\t}\n\t\treturn temp, nil\n\n\t}\nsrc/core/common/utility.go:401:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\n\t\t// CIM API 설정\n\t\tcim := api.NewCloudInfoManager()\n\t\terr := cim.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim failed to set config : \", err)\n\t\t\treturn Region{}, err\n\t\t}\n\t\terr = cim.Open()\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api open failed : \", err)\n\t\t\treturn Region{}, err\n\t\t}\n\t\tdefer cim.Close()\n\n\t\tresult, err := cim.GetRegionByParam(RegionName)\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api request failed : \", err)\n\t\t\treturn Region{}, err\n\t\t}\n\n\t\ttemp := Region{}\n\t\terr = json.Unmarshal([]byte(result), &temp)\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api Unmarshal failed : \", err)\n\t\t\treturn Region{}, err\n\t\t}\n\t\treturn temp, nil\n\n\t}\nsrc/core/common/utility.go:474:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\n\t\t// CIM API 설정\n\t\tcim := api.NewCloudInfoManager()\n\t\terr := cim.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim failed to set config : \", err)\n\t\t\treturn RegionList{}, err\n\t\t}\n\t\terr = cim.Open()\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api open failed : \", err)\n\t\t\treturn RegionList{}, err\n\t\t}\n\t\tdefer cim.Close()\n\n\t\tresult, err := cim.ListRegion()\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api request failed : \", err)\n\t\t\treturn RegionList{}, err\n\t\t}\n\n\t\ttemp := RegionList{}\n\t\terr = json.Unmarshal([]byte(result), &temp)\n\t\tif err != nil {\n\t\t\tCBLog.Error(\"cim api Unmarshal failed : \", err)\n\t\t\treturn RegionList{}, err\n\t\t}\n\t\treturn temp, nil\n\n\t}\nsrc/core/common/utility.go:40:6: var-naming: func GenUuid should be GenUUID (revive)\nfunc GenUuid() string {\n     ^\nsrc/core/common/utility.go:70:17: var-naming: func parameter nsId should be nsID (revive)\nfunc GenMcisKey(nsId string, mcisId string, vmId string) string {\n                ^\nsrc/core/common/utility.go:84:6: var-naming: func GenMcisVmGroupKey should be GenMcisVMGroupKey (revive)\nfunc GenMcisVmGroupKey(nsId string, mcisId string, groupId string) string {\n     ^\nsrc/core/common/utility.go:91:23: var-naming: func parameter nsId should be nsID (revive)\nfunc GenMcisPolicyKey(nsId string, mcisId string, vmId string) string {\n                      ^\nsrc/core/common/utility.go:112:6: var-naming: func PrintJsonPretty should be PrintJSONPretty (revive)\nfunc PrintJsonPretty(v interface{}) {\n     ^\nsrc/core/common/utility.go:121:21: var-naming: func parameter nsId should be nsID (revive)\nfunc GenResourceKey(nsId string, resourceType string, resourceId string) string {\n                    ^\nsrc/core/common/utility.go:138:2: var-naming: struct field CspImageId should be CspImageID (revive)\n\tCspImageId           string\n\t^\nsrc/core/common/utility.go:140:2: var-naming: struct field CspSshKeyName should be CspSSHKeyName (revive)\n\tCspSshKeyName        string\n\t^\nsrc/core/common/utility.go:142:2: var-naming: struct field CspVNetId should be CspVNetID (revive)\n\tCspVNetId            string\n\t^\nsrc/core/common/utility.go:144:2: var-naming: struct field CspSecurityGroupId should be CspSecurityGroupID (revive)\n\tCspSecurityGroupId   string\n\t^\nsrc/core/common/utility.go:146:2: var-naming: struct field CspPublicIpId should be CspPublicIPID (revive)\n\tCspPublicIpId        string\n\t^\nsrc/core/common/utility.go:147:2: var-naming: struct field CspPublicIpName should be CspPublicIPName (revive)\n\tCspPublicIpName      string\n\t^\nsrc/core/common/utility.go:148:2: var-naming: struct field CspVNicId should be CspVNicID (revive)\n\tCspVNicId            string\n\t^\nsrc/core/common/utility.go:154:6: var-naming: func GetCspResourceId should be GetCspResourceID (revive)\nfunc GetCspResourceId(nsId string, resourceType string, resourceId string) (string, error) {\n     ^\nsrc/core/common/utility.go:631:6: var-naming: func GetChildIdList should be GetChildIDList (revive)\nfunc GetChildIdList(key string) []string {\n     ^\nsrc/core/common/utility.go:636:6: var-naming: var childIdList should be childIDList (revive)\n\tvar childIdList []string\n\t    ^\nsrc/core/common/utility.go:654:6: var-naming: var childIdList should be childIDList (revive)\n\tvar childIdList []string\n\t    ^\nsrc/api/grpc/common/cbconnection.go:40:31: var-declaration: should drop = nil from declaration of var tracer; it is the zero value (revive)\n\t\ttracer opentracing.Tracer = nil\n\t\t                            ^\nsrc/api/grpc/common/cbconnection.go:41:31: var-declaration: should drop = nil from declaration of var closer; it is the zero value (revive)\n\t\tcloser io.Closer          = nil\n\t\t                            ^\nsrc/api/grpc/common/cbserver.go:49:48: var-declaration: should drop = nil from declaration of var tracer; it is the zero value (revive)\n\t\ttracer      opentracing.Tracer             = nil\n\t\t                                             ^\nsrc/api/grpc/common/cbserver.go:50:48: var-declaration: should drop = nil from declaration of var closer; it is the zero value (revive)\n\t\tcloser      io.Closer                      = nil\n\t\t                                             ^\nsrc/api/grpc/common/cbserver.go:51:48: var-declaration: should drop = nil from declaration of var reg; it is the zero value (revive)\n\t\treg         *prometheus.Registry           = nil\n\t\t                                             ^\nsrc/api/grpc/common/cbserver.go:52:48: var-declaration: should drop = nil from declaration of var grpcMetrics; it is the zero value (revive)\n\t\tgrpcMetrics *grpc_prometheus.ServerMetrics = nil\n\t\t                                             ^\nsrc/api/grpc/request/mcir/image.go:99:23: var-naming: method ListImageId should be ListImageID (revive)\nfunc (r *MCIRRequest) ListImageId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/securitygroup.go:72:23: var-naming: method ListSecurityGroupId should be ListSecurityGroupID (revive)\nfunc (r *MCIRRequest) ListSecurityGroupId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:18:23: var-naming: method CreateSshKey should be CreateSSHKey (revive)\nfunc (r *MCIRRequest) CreateSshKey() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:45:23: var-naming: method ListSshKey should be ListSSHKey (revive)\nfunc (r *MCIRRequest) ListSshKey() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:72:23: var-naming: method ListSshKeyId should be ListSSHKeyID (revive)\nfunc (r *MCIRRequest) ListSshKeyId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:99:23: var-naming: method GetSshKey should be GetSSHKey (revive)\nfunc (r *MCIRRequest) GetSshKey() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:126:23: var-naming: method DeleteSshKey should be DeleteSSHKey (revive)\nfunc (r *MCIRRequest) DeleteSshKey() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:153:23: var-naming: method DeleteAllSshKey should be DeleteAllSSHKey (revive)\nfunc (r *MCIRRequest) DeleteAllSshKey() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/vnet.go:72:23: var-naming: method ListVNetId should be ListVNetID (revive)\nfunc (r *MCIRRequest) ListVNetId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/spec.go:99:23: var-naming: method ListSpecId should be ListSpecID (revive)\nfunc (r *MCIRRequest) ListSpecId() (string, error) {\n                      ^\nsrc/core/mcir/sshkey.go:40:6: var-naming: type TbSshKeyReq should be TbSSHKeyReq (revive)\ntype TbSshKeyReq struct {\n     ^\nsrc/core/mcir/sshkey.go:46:6: var-naming: type TbSshKeyInfo should be TbSSHKeyInfo (revive)\ntype TbSshKeyInfo struct {\n     ^\nsrc/core/mcir/sshkey.go:47:2: var-naming: struct field Id should be ID (revive)\n\tId                   string            `json:\"id\"`\n\t^\nsrc/core/mcir/sshkey.go:51:2: var-naming: struct field CspSshKeyName should be CspSSHKeyName (revive)\n\tCspSshKeyName        string            `json:\"cspSshKeyName\"`\n\t^\nsrc/core/mcir/sshkey.go:63:6: var-naming: func CreateSshKey should be CreateSSHKey (revive)\nfunc CreateSshKey(nsId string, u *TbSshKeyReq) (TbSshKeyInfo, error) {\n     ^\nsrc/core/mcir/image.go:46:2: var-naming: struct field CspImageId should be CspImageID (revive)\n\tCspImageId     string `json:\"cspImageId\"`\n\t^\nsrc/core/mcir/image.go:52:2: var-naming: struct field Id should be ID (revive)\n\tId                   string            `json:\"id\"`\n\t^\nsrc/core/mcir/image.go:55:2: var-naming: struct field CspImageId should be CspImageID (revive)\n\tCspImageId           string            `json:\"cspImageId\"`\n\t^\nsrc/core/mcir/image.go:96:6: var-naming: func RegisterImageWithId should be RegisterImageWithID (revive)\nfunc RegisterImageWithId(nsId string, u *TbImageReq) (TbImageInfo, error) {\n     ^\nsrc/core/mcir/image.go:172:28: var-naming: func parameter nsId should be nsID (revive)\nfunc RegisterImageWithInfo(nsId string, content *TbImageInfo) (TbImageInfo, error) {\n                           ^\nsrc/core/mcir/image.go:319:37: var-naming: func parameter imageId should be imageID (revive)\nfunc LookupImage(connConfig string, imageId string) (SpiderImageInfo, error) {\n                                    ^\nsrc/core/mcir/image.go:416:50: var-naming: func parameter nsId should be nsID (revive)\nfunc FetchImagesForConnConfig(connConfig string, nsId string) (imageCount uint, err error) {\n                                                 ^\nsrc/core/mcir/image.go:432:3: var-naming: var tumblebugImageId should be tumblebugImageID (revive)\n\t\ttumblebugImageId := connConfig + \"-\" + RefineImageName(tumblebugImage.Name)\n\t\t^\nsrc/core/mcir/image.go:458:35: var-naming: func parameter nsId should be nsID (revive)\nfunc FetchImagesForAllConnConfigs(nsId string) (connConfigCount uint, imageCount uint, err error) {\n                                  ^\nsrc/core/mcir/image.go:481:18: var-naming: func parameter nsId should be nsID (revive)\nfunc SearchImage(nsId string, keywords ...string) ([]TbImageInfo, error) {\n                 ^\nsrc/core/mcir/image.go:241:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"LookupImage() called with empty connConfig.\")\n\t\t                  ^\nsrc/core/mcir/image.go:323:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"LookupImage() called with empty connConfig.\")\n\t\t                  ^\nsrc/core/mcir/image.go:328:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"LookupImage() called with empty imageId.\")\n\t\t                  ^\nsrc/core/mcir/image.go:285:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\n\t\t// CCM API 설정\n\t\tccm := api.NewCloudResourceHandler()\n\t\terr := ccm.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(\"ccm failed to set config : \", err)\n\t\t\treturn SpiderImageList{}, err\n\t\t}\n\t\terr = ccm.Open()\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(\"ccm api open failed : \", err)\n\t\t\treturn SpiderImageList{}, err\n\t\t}\n\t\tdefer ccm.Close()\n\n\t\tresult, err := ccm.ListImageByParam(connConfig)\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(err)\n\t\t\treturn SpiderImageList{}, err\n\t\t}\n\n\t\ttemp := SpiderImageList{}\n\t\terr = json.Unmarshal([]byte(result), &temp)\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(err)\n\t\t\treturn SpiderImageList{}, err\n\t\t}\n\t\treturn temp, nil\n\n\t}\nsrc/core/mcir/image.go:372:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\n\t\t// CCM API 설정\n\t\tccm := api.NewCloudResourceHandler()\n\t\terr := ccm.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(\"ccm failed to set config : \", err)\n\t\t\treturn SpiderImageInfo{}, err\n\t\t}\n\t\terr = ccm.Open()\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(\"ccm api open failed : \", err)\n\t\t\treturn SpiderImageInfo{}, err\n\t\t}\n\t\tdefer ccm.Close()\n\n\t\tresult, err := ccm.GetImageByParam(connConfig, imageId)\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(err)\n\t\t\treturn SpiderImageInfo{}, err\n\t\t}\n\n\t\ttemp := SpiderImageInfo{}\n\t\terr2 := json.Unmarshal([]byte(result), &temp)\n\t\tif err2 != nil {\n\t\t\t//fmt.Errorf(\"an error occurred while unmarshaling: \" + err2.Error())\n\t\t\tcommon.CBLog.Error(err2)\n\t\t}\n\t\treturn temp, nil\n\n\t}\nsrc/core/mcir/securitygroup.go:56:2: var-naming: struct field VNetId should be VNetID (revive)\n\tVNetId         string                    `json:\"vNetId\"`\n\t^\nsrc/core/mcir/securitygroup.go:62:2: var-naming: struct field Id should be ID (revive)\n\tId                   string                    `json:\"id\"`\n\t^\nsrc/core/mcir/securitygroup.go:65:2: var-naming: struct field VNetId should be VNetID (revive)\n\tVNetId               string                    `json:\"vNetId\"`\n\t^\nsrc/core/mcir/securitygroup.go:68:2: var-naming: struct field CspSecurityGroupId should be CspSecurityGroupID (revive)\n\tCspSecurityGroupId   string                    `json:\"cspSecurityGroupId\"`\n\t^\nsrc/core/mcir/securitygroup.go:79:26: var-naming: func parameter nsId should be nsID (revive)\nfunc CreateSecurityGroup(nsId string, u *TbSecurityGroupReq) (TbSecurityGroupInfo, error) {\n                         ^\nsrc/core/mcir/common.go:34:22: var-naming: func parameter nsId should be nsID (revive)\nfunc DelAllResources(nsId string, resourceType string, forceFlag string) error {\n                     ^\nsrc/core/mcir/common.go:42:2: var-naming: var resourceIdList should be resourceIDList (revive)\n\tresourceIdList, err := ListResourceId(nsId, resourceType)\n\t^\nsrc/core/mcir/common.go:61:18: var-naming: func parameter nsId should be nsID (revive)\nfunc DelResource(nsId string, resourceType string, resourceId string, forceFlag string) error {\n                 ^\nsrc/core/mcir/vnet.go:23:2: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\tIPv4_CIDR      string\n\t^\nsrc/core/mcir/vnet.go:30:2: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\tIPv4_CIDR    string\n\t^\nsrc/core/mcir/spec.go:1022:18: var-declaration: should drop = nil from declaration of var err; it is the zero value (revive)\n\tvar err error = nil\n\t                ^\nsrc/core/mcir/spec.go:55:2: var-naming: struct field Id should be ID (revive)\n\tId                    string   `json:\"id\"`\n\t^\nsrc/core/mcir/vnet.go:36:2: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\tIPv4_CIDR      string\n\t^\nsrc/core/mcir/spec.go:59:2: var-naming: don't use underscores in Go names; struct field Os_type should be OsType (revive)\n\tOs_type               string   `json:\"os_type\"`\n\t^\nsrc/core/mcir/common.go:113:8: var-naming: type JsonTemplate should be JSONTemplate (revive)\n\t\ttype JsonTemplate struct {\n\t\t     ^\nsrc/core/mcir/spec.go:60:2: var-naming: don't use underscores in Go names; struct field Num_vCPU should be NumVCPU (revive)\n\tNum_vCPU              uint16   `json:\"num_vCPU\"`\n\t^\nsrc/core/mcir/vnet.go:43:2: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\tIPv4_CIDR    string\n\t^\nsrc/core/mcir/spec.go:61:2: var-naming: don't use underscores in Go names; struct field Num_core should be NumCore (revive)\n\tNum_core              uint16   `json:\"num_core\"`\n\t^\nsrc/core/mcir/common.go:404:6: var-naming: type SpiderNameIdSystemId should be SpiderNameIDSystemID (revive)\ntype SpiderNameIdSystemId struct {\n     ^\nsrc/core/mcir/spec.go:62:2: var-naming: don't use underscores in Go names; struct field Mem_GiB should be MemGiB (revive)\n\tMem_GiB               uint16   `json:\"mem_GiB\"`\n\t^\nsrc/core/mcir/vnet.go:56:2: var-naming: struct field Id should be ID (revive)\n\tId                   string             `json:\"id\"`\n\t^\nsrc/core/mcir/spec.go:63:2: var-naming: don't use underscores in Go names; struct field Storage_GiB should be StorageGiB (revive)\n\tStorage_GiB           uint32   `json:\"storage_GiB\"`\n\t^\nsrc/core/mcir/common.go:405:2: var-naming: struct field NameId should be NameID (revive)\n\tNameId   string\n\t^\nsrc/core/mcir/spec.go:65:2: var-naming: don't use underscores in Go names; struct field Cost_per_hour should be CostPerHour (revive)\n\tCost_per_hour         float32  `json:\"cost_per_hour\"`\n\t^\nsrc/core/mcir/vnet.go:62:2: var-naming: struct field CspVNetId should be CspVNetID (revive)\n\tCspVNetId            string             `json:\"cspVNetId\"`\n\t^\nsrc/core/mcir/spec.go:66:2: var-naming: don't use underscores in Go names; struct field Num_storage should be NumStorage (revive)\n\tNum_storage           uint8    `json:\"num_storage\"`\n\t^\nsrc/core/mcir/common.go:406:2: var-naming: struct field SystemId should be SystemID (revive)\n\tSystemId string\n\t^\nsrc/core/mcir/spec.go:67:2: var-naming: don't use underscores in Go names; struct field Max_num_storage should be MaxNumStorage (revive)\n\tMax_num_storage       uint8    `json:\"max_num_storage\"`\n\t^\nsrc/core/mcir/vnet.go:75:17: var-naming: func parameter nsId should be nsID (revive)\nfunc CreateVNet(nsId string, u *TbVNetReq) (TbVNetInfo, error) {\n                ^\nsrc/core/mcir/spec.go:68:2: var-naming: don't use underscores in Go names; struct field Max_total_storage_TiB should be MaxTotalStorageTiB (revive)\n\tMax_total_storage_TiB uint16   `json:\"max_total_storage_TiB\"`\n\t^\nsrc/core/mcir/common.go:430:2: var-naming: struct field Id should be ID (revive)\n\tId          string `json:\"id\"`\n\t^\nsrc/core/mcir/spec.go:69:2: var-naming: don't use underscores in Go names; struct field Net_bw_Gbps should be NetBwGbps (revive)\n\tNet_bw_Gbps           uint16   `json:\"net_bw_Gbps\"`\n\t^\nsrc/core/mcir/spec.go:70:2: var-naming: don't use underscores in Go names; struct field Ebs_bw_Mbps should be EbsBwMbps (revive)\n\tEbs_bw_Mbps           uint32   `json:\"ebs_bw_Mbps\"`\n\t^\nsrc/core/mcir/common.go:431:2: var-naming: struct field CspNativeId should be CspNativeID (revive)\n\tCspNativeId string `json:\"cspNativeId\"`\n\t^\nsrc/core/mcir/common.go:435:2: var-naming: struct field Id should be ID (revive)\n\tId          string `json:\"id\"`\n\t^\nsrc/core/mcir/spec.go:71:2: var-naming: don't use underscores in Go names; struct field Gpu_model should be GpuModel (revive)\n\tGpu_model             string   `json:\"gpu_model\"`\n\t^\nsrc/core/mcir/spec.go:72:2: var-naming: don't use underscores in Go names; struct field Num_gpu should be NumGpu (revive)\n\tNum_gpu               uint8    `json:\"num_gpu\"`\n\t^\nsrc/core/mcir/common.go:436:2: var-naming: struct field CspNativeId should be CspNativeID (revive)\n\tCspNativeId string `json:\"cspNativeId\"`\n\t^\nsrc/core/mcir/common.go:437:2: var-naming: struct field NsId should be NsID (revive)\n\tNsId        string `json:\"nsId\"`\n\t^\nsrc/core/mcir/spec.go:73:2: var-naming: don't use underscores in Go names; struct field Gpumem_GiB should be GpumemGiB (revive)\n\tGpumem_GiB            uint16   `json:\"gpumem_GiB\"`\n\t^\nsrc/core/mcir/spec.go:74:2: var-naming: don't use underscores in Go names; struct field Gpu_p2p should be GpuP2p (revive)\n\tGpu_p2p               string   `json:\"gpu_p2p\"`\n\t^\nsrc/core/mcir/common.go:526:7: var-naming: type JsonTemplate should be JSONTemplate (revive)\n\ttype JsonTemplate struct {\n\t     ^\nsrc/core/mcir/common.go:614:6: var-naming: func ListResourceId should be ListResourceID (revive)\nfunc ListResourceId(nsId string, resourceType string) ([]string, error) {\n     ^\nsrc/core/mcir/spec.go:77:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_01 should be EvaluationScore01 (revive)\n\tEvaluationScore_01    float32  `json:\"evaluationScore_01\"`\n\t^\nsrc/core/mcir/spec.go:78:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_02 should be EvaluationScore02 (revive)\n\tEvaluationScore_02    float32  `json:\"evaluationScore_02\"`\n\t^\nsrc/core/mcir/common.go:660:19: var-naming: func parameter nsId should be nsID (revive)\nfunc ListResource(nsId string, resourceType string) (interface{}, error) {\n                  ^\nsrc/core/mcir/spec.go:79:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_03 should be EvaluationScore03 (revive)\n\tEvaluationScore_03    float32  `json:\"evaluationScore_03\"`\n\t^\nsrc/core/mcir/spec.go:80:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_04 should be EvaluationScore04 (revive)\n\tEvaluationScore_04    float32  `json:\"evaluationScore_04\"`\n\t^\nsrc/core/mcir/common.go:776:31: var-naming: func parameter nsId should be nsID (revive)\nfunc GetAssociatedObjectCount(nsId string, resourceType string, resourceId string) (int, error) {\n                              ^\nsrc/core/mcir/spec.go:81:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_05 should be EvaluationScore05 (revive)\n\tEvaluationScore_05    float32  `json:\"evaluationScore_05\"`\n\t^\nsrc/core/mcir/spec.go:82:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_06 should be EvaluationScore06 (revive)\n\tEvaluationScore_06    float32  `json:\"evaluationScore_06\"`\n\t^\nsrc/core/mcir/common.go:823:30: var-naming: func parameter nsId should be nsID (revive)\nfunc GetAssociatedObjectList(nsId string, resourceType string, resourceId string) ([]string, error) {\n                             ^\nsrc/core/mcir/spec.go:83:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_07 should be EvaluationScore07 (revive)\n\tEvaluationScore_07    float32  `json:\"evaluationScore_07\"`\n\t^\nsrc/core/mcir/spec.go:84:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_08 should be EvaluationScore08 (revive)\n\tEvaluationScore_08    float32  `json:\"evaluationScore_08\"`\n\t^\nsrc/core/mcir/common.go:915:33: var-naming: func parameter nsId should be nsID (revive)\nfunc UpdateAssociatedObjectList(nsId string, resourceType string, resourceId string, cmd string, objectKey string) ([]string, error) {\n                                ^\nsrc/core/mcir/spec.go:85:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_09 should be EvaluationScore09 (revive)\n\tEvaluationScore_09    float32  `json:\"evaluationScore_09\"`\n\t^\nsrc/core/mcir/spec.go:86:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_10 should be EvaluationScore10 (revive)\n\tEvaluationScore_10    float32  `json:\"evaluationScore_10\"`\n\t^\nsrc/core/mcir/common.go:970:8: var-naming: var anyJson should be anyJSON (revive)\n\t\t\tvar anyJson map[string]interface{}\n\t\t\t    ^\nsrc/core/mcir/common.go:973:5: var-naming: don't use underscores in Go names; var array_to_be should be arrayToBe (revive)\n\t\t\t\tarray_to_be := []string{objectKey}\n\t\t\t\t^\nsrc/core/mcir/spec.go:295:49: var-naming: func parameter nsId should be nsID (revive)\nfunc FetchSpecsForConnConfig(connConfig string, nsId string) (specCount uint, err error) {\n                                                ^\nsrc/core/mcir/spec.go:311:3: var-naming: var tumblebugSpecId should be tumblebugSpecID (revive)\n\t\ttumblebugSpecId := connConfig + \"-\" + RefineSpecName(tumblebugSpec.Name)\n\t\t^\nsrc/core/mcir/common.go:978:5: var-naming: don't use underscores in Go names; var array_as_is should be arrayAsIs (revive)\n\t\t\t\tarray_as_is := anyJson[\"associatedObjectList\"].([]interface{})\n\t\t\t\t^\nsrc/core/mcir/common.go:981:5: var-naming: don't use underscores in Go names; var array_to_be should be arrayToBe (revive)\n\t\t\t\tarray_to_be := append(array_as_is, objectKey)\n\t\t\t\t^\nsrc/core/mcir/spec.go:337:34: var-naming: func parameter nsId should be nsID (revive)\nfunc FetchSpecsForAllConnConfigs(nsId string) (connConfigCount uint, specCount uint, err error) {\n                                 ^\nsrc/core/mcir/spec.go:360:34: var-naming: func parameter nsId should be nsID (revive)\nfunc RegisterSpecWithCspSpecName(nsId string, u *TbSpecReq) (TbSpecInfo, error) {\n                                 ^\nsrc/core/mcir/common.go:986:4: var-naming: var updatedJson should be updatedJSON (revive)\n\t\t\tupdatedJson, _ := json.Marshal(anyJson)\n\t\t\t^\nsrc/core/mcir/common.go:1039:18: var-naming: func parameter nsId should be nsID (revive)\nfunc GetResource(nsId string, resourceType string, resourceId string) (interface{}, error) {\n                 ^\nsrc/core/mcir/spec.go:444:27: var-naming: func parameter nsId should be nsID (revive)\nfunc RegisterSpecWithInfo(nsId string, content *TbSpecInfo) (TbSpecInfo, error) {\n                          ^\nsrc/core/mcir/spec.go:504:28: var-naming: func parameter nsId should be nsID (revive)\nfunc RegisterRecommendList(nsId string, connectionName string, cpuSize uint16, memSize uint16, diskSize uint32, specId string, price float32) error {\n                           ^\nsrc/core/mcir/common.go:1128:20: var-naming: func parameter nsId should be nsID (revive)\nfunc CheckResource(nsId string, resourceType string, resourceId string) (bool, error) {\n                   ^\nsrc/core/mcir/spec.go:531:23: var-naming: func parameter nsId should be nsID (revive)\nfunc DelRecommendSpec(nsId string, specId string, cpuSize uint16, memSize uint16, diskSize uint32) error {\n                      ^\nsrc/core/mcir/common.go:1132:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckResource failed; nsId given is null.\")\n\t\t                  ^\nsrc/core/mcir/spec.go:554:18: var-naming: func parameter nsId should be nsID (revive)\nfunc FilterSpecs(nsId string, filter TbSpecInfo) ([]TbSpecInfo, error) {\n                 ^\nsrc/core/mcir/common.go:1135:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckResource failed; resourceType given is null.\")\n\t\t                  ^\nsrc/core/mcir/common.go:1138:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"CheckResource failed; resourceId given is null.\")\n\t\t                  ^\nsrc/core/mcir/spec.go:716:2: var-naming: struct field Id should be ID (revive)\n\tId                    string `json:\"id\"`\n\t^\nsrc/core/mcir/spec.go:720:2: var-naming: don't use underscores in Go names; struct field Os_type should be OsType (revive)\n\tOs_type               string `json:\"os_type\"`\n\t^\nsrc/core/mcir/common.go:629:43: empty-block: this block is empty, you can remove it (revive)\n\t\tresourceType == common.StrSecurityGroup {\n\t\t// continue\n\t} else {\nsrc/core/mcir/common.go:675:43: empty-block: this block is empty, you can remove it (revive)\n\t\tresourceType == common.StrSecurityGroup {\n\t\t// continue\n\t} else {\nsrc/core/mcir/spec.go:721:2: var-naming: don't use underscores in Go names; struct field Num_vCPU should be NumVCPU (revive)\n\tNum_vCPU              Range  `json:\"num_vCPU\"`\n\t^\nsrc/core/mcir/spec.go:722:2: var-naming: don't use underscores in Go names; struct field Num_core should be NumCore (revive)\n\tNum_core              Range  `json:\"num_core\"`\n\t^\nsrc/core/mcir/common.go:1147:43: empty-block: this block is empty, you can remove it (revive)\n\t\tresourceType == common.StrSecurityGroup {\n\t\t//resourceType == \"subnet\" ||\n\t\t//resourceType == \"publicIp\" ||\n\t\t//resourceType == \"vNic\" {\n\t\t// continue\n\t} else {\nsrc/core/mcir/common.go:1004:11: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t\t\t} else {\n\t\t\t\tkeyValue.Value, err = sjson.Delete(keyValue.Value, \"associatedObjectList.\"+strconv.Itoa(foundKey))\n\t\t\t\tif err != nil {\n\t\t\t\t\tcommon.CBLog.Error(err)\n\t\t\t\t\treturn nil, err\n\t\t\t\t}\n\t\t\t}\nsrc/core/mcir/spec.go:723:2: var-naming: don't use underscores in Go names; struct field Mem_GiB should be MemGiB (revive)\n\tMem_GiB               Range  `json:\"mem_GiB\"`\n\t^\nsrc/core/mcir/spec.go:724:2: var-naming: don't use underscores in Go names; struct field Storage_GiB should be StorageGiB (revive)\n\tStorage_GiB           Range  `json:\"storage_GiB\"`\n\t^\nsrc/core/mcir/common.go:1227:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn \"\"\n\t}\nsrc/core/mcir/spec.go:726:2: var-naming: don't use underscores in Go names; struct field Cost_per_hour should be CostPerHour (revive)\n\tCost_per_hour         Range  `json:\"cost_per_hour\"`\n\t^\nsrc/core/mcir/spec.go:727:2: var-naming: don't use underscores in Go names; struct field Num_storage should be NumStorage (revive)\n\tNum_storage           Range  `json:\"num_storage\"`\n\t^\nsrc/core/mcir/spec.go:728:2: var-naming: don't use underscores in Go names; struct field Max_num_storage should be MaxNumStorage (revive)\n\tMax_num_storage       Range  `json:\"max_num_storage\"`\n\t^\nsrc/core/mcir/spec.go:729:2: var-naming: don't use underscores in Go names; struct field Max_total_storage_TiB should be MaxTotalStorageTiB (revive)\n\tMax_total_storage_TiB Range  `json:\"max_total_storage_TiB\"`\n\t^\nsrc/core/mcir/spec.go:730:2: var-naming: don't use underscores in Go names; struct field Net_bw_Gbps should be NetBwGbps (revive)\n\tNet_bw_Gbps           Range  `json:\"net_bw_Gbps\"`\n\t^\nsrc/core/mcir/spec.go:731:2: var-naming: don't use underscores in Go names; struct field Ebs_bw_Mbps should be EbsBwMbps (revive)\n\tEbs_bw_Mbps           Range  `json:\"ebs_bw_Mbps\"`\n\t^\nsrc/core/mcir/spec.go:732:2: var-naming: don't use underscores in Go names; struct field Gpu_model should be GpuModel (revive)\n\tGpu_model             string `json:\"gpu_model\"`\n\t^\nsrc/core/mcir/spec.go:733:2: var-naming: don't use underscores in Go names; struct field Num_gpu should be NumGpu (revive)\n\tNum_gpu               Range  `json:\"num_gpu\"`\n\t^\nsrc/core/mcir/spec.go:734:2: var-naming: don't use underscores in Go names; struct field Gpumem_GiB should be GpumemGiB (revive)\n\tGpumem_GiB            Range  `json:\"gpumem_GiB\"`\n\t^\nsrc/core/mcir/spec.go:735:2: var-naming: don't use underscores in Go names; struct field Gpu_p2p should be GpuP2p (revive)\n\tGpu_p2p               string `json:\"gpu_p2p\"`\n\t^\nsrc/core/mcir/spec.go:737:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_01 should be EvaluationScore01 (revive)\n\tEvaluationScore_01    Range  `json:\"evaluationScore_01\"`\n\t^\nsrc/core/mcir/spec.go:738:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_02 should be EvaluationScore02 (revive)\n\tEvaluationScore_02    Range  `json:\"evaluationScore_02\"`\n\t^\nsrc/core/mcir/spec.go:739:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_03 should be EvaluationScore03 (revive)\n\tEvaluationScore_03    Range  `json:\"evaluationScore_03\"`\n\t^\nsrc/core/mcir/spec.go:740:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_04 should be EvaluationScore04 (revive)\n\tEvaluationScore_04    Range  `json:\"evaluationScore_04\"`\n\t^\nsrc/core/mcir/spec.go:741:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_05 should be EvaluationScore05 (revive)\n\tEvaluationScore_05    Range  `json:\"evaluationScore_05\"`\n\t^\nsrc/core/mcir/spec.go:742:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_06 should be EvaluationScore06 (revive)\n\tEvaluationScore_06    Range  `json:\"evaluationScore_06\"`\n\t^\nsrc/core/mcir/spec.go:743:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_07 should be EvaluationScore07 (revive)\n\tEvaluationScore_07    Range  `json:\"evaluationScore_07\"`\n\t^\nsrc/core/mcir/spec.go:744:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_08 should be EvaluationScore08 (revive)\n\tEvaluationScore_08    Range  `json:\"evaluationScore_08\"`\n\t^\nsrc/core/mcir/spec.go:745:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_09 should be EvaluationScore09 (revive)\n\tEvaluationScore_09    Range  `json:\"evaluationScore_09\"`\n\t^\nsrc/core/mcir/spec.go:746:2: var-naming: don't use underscores in Go names; struct field EvaluationScore_10 should be EvaluationScore10 (revive)\n\tEvaluationScore_10    Range  `json:\"evaluationScore_10\"`\n\t^\nsrc/core/mcir/spec.go:750:25: var-naming: func parameter nsId should be nsID (revive)\nfunc FilterSpecsByRange(nsId string, filter FilterSpecsByRangeRequest) ([]TbSpecInfo, error) {\n                        ^\nsrc/core/mcir/spec.go:1157:17: var-naming: func parameter nsId should be nsID (revive)\nfunc UpdateSpec(nsId string, newSpec TbSpecInfo) (TbSpecInfo, error) {\n                ^\nsrc/core/mcir/spec.go:19:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t_ \"github.com/go-sql-driver/mysql\"\n\t^\nsrc/core/mcir/spec.go:122:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"LookupSpec() called with empty connConfig.\")\n\t\t                  ^\nsrc/core/mcir/spec.go:204:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"LookupSpec() called with empty connConfig.\")\n\t\t                  ^\nsrc/core/mcir/spec.go:209:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr := fmt.Errorf(\"LookupSpec() called with empty specName.\")\n\t\t                  ^\nsrc/core/mcir/spec.go:166:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\n\t\t// CCM API 설정\n\t\tccm := api.NewCloudResourceHandler()\n\t\terr := ccm.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(\"ccm failed to set config : \", err)\n\t\t\treturn SpiderSpecList{}, err\n\t\t}\n\t\terr = ccm.Open()\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(\"ccm api open failed : \", err)\n\t\t\treturn SpiderSpecList{}, err\n\t\t}\n\t\tdefer ccm.Close()\n\n\t\tresult, err := ccm.ListVMSpecByParam(connConfig)\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(err)\n\t\t\treturn SpiderSpecList{}, err\n\t\t}\n\n\t\ttemp := SpiderSpecList{}\n\t\terr = json.Unmarshal([]byte(result), &temp)\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(err)\n\t\t\treturn SpiderSpecList{}, err\n\t\t}\n\t\treturn temp, nil\n\n\t}\nsrc/core/mcir/spec.go:254:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\n\t\t// CCM API 설정\n\t\tccm := api.NewCloudResourceHandler()\n\t\terr := ccm.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(\"ccm failed to set config : \", err)\n\t\t\treturn SpiderSpecInfo{}, err\n\t\t}\n\t\terr = ccm.Open()\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(\"ccm api open failed : \", err)\n\t\t\treturn SpiderSpecInfo{}, err\n\t\t}\n\t\tdefer ccm.Close()\n\n\t\tresult, err := ccm.GetVMSpecByParam(connConfig, specName)\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(err)\n\t\t\treturn SpiderSpecInfo{}, err\n\t\t}\n\n\t\ttemp := SpiderSpecInfo{}\n\t\terr2 := json.Unmarshal([]byte(result), &temp)\n\t\tif err2 != nil {\n\t\t\tfmt.Errorf(\"an error occurred while unmarshaling: \" + err2.Error())\n\t\t}\n\t\treturn temp, nil\n\n\t}\nsrc/api/rest/server/common/namespace.go:263:16: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestPutNs(c echo.Context) error {\n               ^\nsrc/api/rest/server/common/namespace.go:168:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\tnsList, err := common.ListNs()\n\t\tif err != nil {\n\t\t\t//mapA := common.SimpleMsg{\"Failed to list namespaces.\"}\n\t\t\t//return c.JSON(http.StatusNotFound, &mapA)\n\t\t\treturn SendMessage(c, http.StatusOK, \"Failed to list namespaces.\")\n\t\t}\n\n\t\tif nsList == nil {\n\t\t\t//return c.JSON(http.StatusOK, &content)\n\t\t\treturn Send(c, http.StatusOK, content)\n\t\t}\n\n\t\t// When err == nil && resourceList != nil\n\t\tcontent.Ns = nsList\n\t\t//return c.JSON(http.StatusOK, &content)\n\t\treturn Send(c, http.StatusOK, content)\n\t}\nsrc/api/rest/server/common/config.go:35:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\t//return c.JSON(http.StatusOK, &res)\n\t\treturn SendMessage(c, http.StatusOK, \"The config \"+c.Param(\"configId\")+\" has been initialized.\")\n\t}\nsrc/api/rest/server/common/namespace.go:211:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\t//return c.JSON(http.StatusOK, &res)\n\t\treturn Send(c, http.StatusOK, res)\n\t}\nsrc/api/rest/server/common/namespace.go:40:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/common/config.go:64:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\t//return c.JSON(http.StatusOK, &res)\n\t\treturn Send(c, http.StatusOK, res)\n\t}\nsrc/api/rest/server/common/utility.go:51:11: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\t\treturn errors.New(fmt.Sprintf(\"[%s]%s\", err.Key, err.Error()))\n\t\t\t       ^\nsrc/api/rest/server/mcir/common.go:23:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:43:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:48:2: var-naming: var resourceId should be resourceID (revive)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/vnet.go:26:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/vnet.go:63:18: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestPutVNet(c echo.Context) error {\n                 ^\nsrc/api/rest/server/mcir/common.go:66:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:130:5: var-naming: struct field SshKey should be SSHKey (revive)\n\t\t\t\tSshKey []mcir.TbSshKeyInfo `json:\"sshKey\"`\n\t\t\t\t^\nsrc/api/rest/server/mcir/vnet.go:81:18: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestGetVNet(c echo.Context) error {\n                 ^\nsrc/api/rest/server/mcir/vnet.go:103:21: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestGetAllVNet(c echo.Context) error {\n                    ^\nsrc/api/rest/server/mcir/common.go:163:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:168:2: var-naming: var resourceId should be resourceID (revive)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/vnet.go:119:18: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestDelVNet(c echo.Context) error {\n                 ^\nsrc/api/rest/server/mcir/vnet.go:134:21: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestDelAllVNet(c echo.Context) error {\n                    ^\nsrc/api/rest/server/mcir/common.go:193:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:195:2: var-naming: var resourceId should be resourceID (revive)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/common.go:199:7: var-naming: type JsonTemplate should be JSONTemplate (revive)\n\ttype JsonTemplate struct {\n\t     ^\nsrc/api/rest/server/mcir/common.go:219:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:223:2: var-naming: var resourceId should be resourceID (revive)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/common.go:240:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:244:2: var-naming: var resourceId should be resourceID (revive)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/common.go:261:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:265:2: var-naming: var resourceId should be resourceID (revive)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/common.go:83:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\n\t\tresourceList, err := mcir.ListResource(nsId, resourceType)\n\t\tif err != nil {\n\t\t\tmapA := map[string]string{\"message\": \"Failed to list \" + resourceType + \"s; \" + err.Error()}\n\t\t\treturn c.JSON(http.StatusNotFound, &mapA)\n\t\t}\n\n\t\tswitch resourceType {\n\t\tcase common.StrImage:\n\t\t\tvar content struct {\n\t\t\t\tImage []mcir.TbImageInfo `json:\"image\"`\n\t\t\t}\n\n\t\t\tif resourceList == nil {\n\t\t\t\treturn c.JSON(http.StatusOK, &content)\n\t\t\t}\n\n\t\t\t// When err == nil && resourceList != nil\n\t\t\tcontent.Image = resourceList.([]mcir.TbImageInfo) // type assertion (interface{} -> array)\n\t\t\treturn c.JSON(http.StatusOK, &content)\n\t\tcase common.StrSecurityGroup:\n\t\t\tvar content struct {\n\t\t\t\tSecurityGroup []mcir.TbSecurityGroupInfo `json:\"securityGroup\"`\n\t\t\t}\n\n\t\t\tif resourceList == nil {\n\t\t\t\treturn c.JSON(http.StatusOK, &content)\n\t\t\t}\n\n\t\t\t// When err == nil && resourceList != nil\n\t\t\tcontent.SecurityGroup = resourceList.([]mcir.TbSecurityGroupInfo) // type assertion (interface{} -> array)\n\t\t\treturn c.JSON(http.StatusOK, &content)\n\t\tcase common.StrSpec:\n\t\t\tvar content struct {\n\t\t\t\tSpec []mcir.TbSpecInfo `json:\"spec\"`\n\t\t\t}\n\n\t\t\tif resourceList == nil {\n\t\t\t\treturn c.JSON(http.StatusOK, &content)\n\t\t\t}\n\n\t\t\t// When err == nil && resourceList != nil\n\t\t\tcontent.Spec = resourceList.([]mcir.TbSpecInfo) // type assertion (interface{} -> array)\n\t\t\treturn c.JSON(http.StatusOK, &content)\n\t\tcase common.StrSSHKey:\n\t\t\tvar content struct {\n\t\t\t\tSshKey []mcir.TbSshKeyInfo `json:\"sshKey\"`\n\t\t\t}\n\n\t\t\tif resourceList == nil {\n\t\t\t\treturn c.JSON(http.StatusOK, &content)\n\t\t\t}\n\n\t\t\t// When err == nil && resourceList != nil\n\t\t\tcontent.SshKey = resourceList.([]mcir.TbSshKeyInfo) // type assertion (interface{} -> array)\n\t\t\treturn c.JSON(http.StatusOK, &content)\n\t\tcase common.StrVNet:\n\t\t\tvar content struct {\n\t\t\t\tVNet []mcir.TbVNetInfo `json:\"vNet\"`\n\t\t\t}\n\n\t\t\tif resourceList == nil {\n\t\t\t\treturn c.JSON(http.StatusOK, &content)\n\t\t\t}\n\n\t\t\t// When err == nil && resourceList != nil\n\t\t\tcontent.VNet = resourceList.([]mcir.TbVNetInfo) // type assertion (interface{} -> array)\n\t\t\treturn c.JSON(http.StatusOK, &content)\n\t\tdefault:\n\t\t\treturn c.JSON(http.StatusBadRequest, nil)\n\n\t\t}\n\t\t// return c.JSON(http.StatusBadRequest, nil)\n\t}\nsrc/api/rest/server/mcir/common.go:174:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn c.JSON(http.StatusOK, &res)\n\t}\nsrc/api/rest/server/mcir/securitygroup.go:26:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:28:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:84:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:85:2: var-naming: var specId should be specID (revive)\n\tspecId := c.Param(\"specId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:193:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:246:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:280:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:302:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:48:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else { // if action == \"registerWithCspSpecName\" { // The default mode.\n\t\tfmt.Println(\"[Registering Spec with CspSpecName]\")\n\t\tu := &mcir.TbSpecReq{}\n\t\tif err := c.Bind(u); err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcontent, err := mcir.RegisterSpecWithCspSpecName(nsId, u)\n\t\tif err != nil {\n\t\t\tcommon.CBLog.Error(err)\n\t\t\tmapA := map[string]string{\n\t\t\t\t\"message\": err.Error()}\n\t\t\treturn c.JSON(http.StatusInternalServerError, &mapA)\n\t\t}\n\t\treturn c.JSON(http.StatusCreated, content)\n\n\t} /* else {\nsrc/api/rest/server/mcir/spec.go:340:18: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestGetSpec(c echo.Context) error {\n                 ^\nsrc/api/rest/server/mcir/spec.go:362:21: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestGetAllSpec(c echo.Context) error {\n                    ^\nsrc/api/rest/server/mcir/spec.go:378:18: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestDelSpec(c echo.Context) error {\n                 ^\nsrc/api/rest/server/mcir/spec.go:393:21: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestDelAllSpec(c echo.Context) error {\n                    ^\nsrc/api/rest/server/mcir/image.go:28:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/image.go:97:2: var-naming: struct field CspImageId should be CspImageID (revive)\n\tCspImageId     string `json:\"cspImageId\"`\n\t^\nsrc/api/rest/server/mcir/image.go:175:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/sshkey.go:24:6: var-naming: func RestPostSshKey should be RestPostSSHKey (revive)\nfunc RestPostSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/sshkey.go:26:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/image.go:305:2: var-naming: var nsId should be nsID (revive)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/image.go:88:19: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestPutImage(c echo.Context) error {\n                  ^\nsrc/api/rest/server/mcir/sshkey.go:58:6: var-naming: func RestPutSshKey should be RestPutSSHKey (revive)\nfunc RestPutSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/sshkey.go:76:6: var-naming: func RestGetSshKey should be RestGetSSHKey (revive)\nfunc RestGetSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/image.go:229:19: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestGetImage(c echo.Context) error {\n                  ^\nsrc/api/rest/server/mcir/image.go:251:22: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestGetAllImage(c echo.Context) error {\n                     ^\nsrc/api/rest/server/mcir/sshkey.go:82:6: var-naming: type RestGetAllSshKeyResponse should be RestGetAllSSHKeyResponse (revive)\ntype RestGetAllSshKeyResponse struct {\n     ^\nsrc/api/rest/server/mcir/sshkey.go:83:2: var-naming: struct field SshKey should be SSHKey (revive)\n\tSshKey []mcir.TbSshKeyInfo `json:\"sshKey\"`\n\t^\nsrc/api/rest/server/mcir/image.go:267:19: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestDelImage(c echo.Context) error {\n                  ^\nsrc/api/rest/server/mcir/image.go:282:22: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestDelAllImage(c echo.Context) error {\n                     ^\nsrc/api/rest/server/mcir/sshkey.go:98:6: var-naming: func RestGetAllSshKey should be RestGetAllSSHKey (revive)\nfunc RestGetAllSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/sshkey.go:114:6: var-naming: func RestDelSshKey should be RestDelSSHKey (revive)\nfunc RestDelSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/sshkey.go:129:6: var-naming: func RestDelAllSshKey should be RestDelAllSSHKey (revive)\nfunc RestDelAllSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/securitygroup.go:62:27: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestPutSecurityGroup(c echo.Context) error {\n                          ^\nsrc/api/rest/server/mcir/securitygroup.go:80:27: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestGetSecurityGroup(c echo.Context) error {\n                          ^\nsrc/api/rest/server/mcir/securitygroup.go:102:30: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestGetAllSecurityGroup(c echo.Context) error {\n                             ^\nsrc/api/rest/server/mcir/securitygroup.go:118:27: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestDelSecurityGroup(c echo.Context) error {\n                          ^\nsrc/api/rest/server/mcir/securitygroup.go:133:30: unused-parameter: parameter 'c' seems to be unused, consider removing or renaming it as _ (revive)\nfunc RestDelAllSecurityGroup(c echo.Context) error {\n                             ^\n"},"gofmt":{"run":1,"cnt":1,"details":"src/api/grpc/request/test/test_api.go:326: File is not `gofmt`-ed with `-s` (gofmt)\n\t\t\tsp_api.KeyValue{Key: \"IdentityEndpoint\", Value: \"http://192.168.201.208:5000/v3\"},\n\t\t\tsp_api.KeyValue{Key: \"Username\", Value: \"demo\"},\n\t\t\tsp_api.KeyValue{Key: \"Password\", Value: \"openstack\"},\n\t\t\tsp_api.KeyValue{Key: \"DomainName\", Value: \"Default\"},\n\t\t\tsp_api.KeyValue{Key: \"ProjectID\", Value: \"b31474c562184bcbaf3496e08f5a6a4c\"},\n"},"govet":{"run":1,"cnt":41,"details":"src/core/mcir/image_test.go:46:15: CreateImageTable not declared by package common (typecheck)\n\terr = common.CreateImageTable()\n\t             ^\nsrc/core/mcir/spec_test.go:46:15: CreateSpecTable not declared by package common (typecheck)\n\terr = common.CreateSpecTable()\n\t             ^\nsrc/core/mcis/control.go:3567:9: httpresponse: using res before checking for errors (govet)\n\t\tdefer res.Body.Close()\n\t\t      ^\nsrc/core/mcis/control.go:3572:3: printf: `Println` arg list ends with redundant newline (govet)\n\t\tfmt.Println(\"[Calling SPIDER]END vmControl\\n\")\n\t\t^\nsrc/core/mcis/control.go:3646:3: printf: `Println` arg list ends with redundant newline (govet)\n\t\tfmt.Println(\"[Calling SPIDER]END vmControl\\n\")\n\t\t^\nsrc/core/mcis/control.go:487:3: shadow: declaration of \"err\" shadows declaration at line 470 (govet)\n\t\terr := fmt.Errorf(\"The mcis \" + mcisId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/control.go:699:3: shadow: declaration of \"err\" shadows declaration at line 680 (govet)\n\t\terr := fmt.Errorf(\"The mcis \" + mcisId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/control.go:857:3: shadow: declaration of \"err\" shadows declaration at line 838 (govet)\n\t\terr := fmt.Errorf(\"The mcis \" + mcisId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/control.go:1240:3: shadow: declaration of \"err\" shadows declaration at line 1226 (govet)\n\t\terr := fmt.Errorf(\"The mcis \" + mcisId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/control.go:1262:3: shadow: declaration of \"err\" shadows declaration at line 1226 (govet)\n\t\terr := fmt.Errorf(\"MCIS \" + mcisId + \" status nil, Deletion is not allowed (use option=force for force deletion)\")\n\t\t^\nsrc/core/mcis/control.go:1270:3: shadow: declaration of \"err\" shadows declaration at line 1226 (govet)\n\t\terr := fmt.Errorf(\"MCIS \" + mcisId + \" is \" + mcisStatus.Status + \" and not \" + StatusTerminated + \"/\" + StatusUndefined + \"/\" + StatusFailed + \", Deletion is not allowed (use option=force for force deletion)\")\n\t\t^\nsrc/core/mcis/control.go:1292:11: shadow: declaration of \"err\" shadows declaration at line 1226 (govet)\n\t\tvmInfo, err := GetVmObject(nsId, mcisId, v)\n\t\t        ^\nsrc/core/mcis/control.go:1323:3: shadow: declaration of \"err\" shadows declaration at line 1226 (govet)\n\t\terr := common.CBStore.Delete(vmGroupKey)\n\t\t^\nsrc/core/mcis/control.go:1362:3: shadow: declaration of \"err\" shadows declaration at line 1342 (govet)\n\t\terr := fmt.Errorf(\"The vm \" + vmId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/control.go:1438:14: shadow: declaration of \"err\" shadows declaration at line 1418 (govet)\n\t\tkeyValue2, err := common.CBStore.Get(key2)\n\t\t           ^\nsrc/core/mcis/control.go:1612:3: shadow: declaration of \"err\" shadows declaration at line 1595 (govet)\n\t\terr := fmt.Errorf(\"The mcis \" + mcisId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/control.go:1850:3: shadow: declaration of \"err\" shadows declaration at line 1830 (govet)\n\t\terr := fmt.Errorf(\"The vm \" + vmId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/control.go:1900:3: shadow: declaration of \"err\" shadows declaration at line 1885 (govet)\n\t\terr := fmt.Errorf(\"The mcis \" + mcisId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/control.go:1993:3: shadow: declaration of \"err\" shadows declaration at line 1970 (govet)\n\t\terr := fmt.Errorf(\"The vm \" + vmInfoData.Name + \" already exists.\")\n\t\t^\nsrc/core/mcis/control.go:2127:3: shadow: declaration of \"err\" shadows declaration at line 2072 (govet)\n\t\terr := common.CBStore.Put(string(key), string(val))\n\t\t^\nsrc/core/mcis/control.go:2324:3: shadow: declaration of \"err\" shadows declaration at line 2299 (govet)\n\t\terr := fmt.Errorf(\"The vm \" + vmId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/control.go:2375:3: shadow: declaration of \"err\" shadows declaration at line 2351 (govet)\n\t\terr := fmt.Errorf(\"The vm \" + vmId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/control.go:2427:3: shadow: declaration of \"err\" shadows declaration at line 2413 (govet)\n\t\terr := fmt.Errorf(\"The mcis \" + req.Name + \" already exists.\")\n\t\t^\nsrc/core/mcis/control.go:2450:3: shadow: declaration of \"err\" shadows declaration at line 2413 (govet)\n\t\terr := fmt.Errorf(\"System Error: CreateMcis json.Marshal(mapA) Error\")\n\t\t^\nsrc/core/mcis/control.go:2457:3: shadow: declaration of \"err\" shadows declaration at line 2413 (govet)\n\t\terr := fmt.Errorf(\"System Error: CreateMcis CBStore.Put Error\")\n\t\t^\nsrc/core/mcis/control.go:2500:4: shadow: declaration of \"err\" shadows declaration at line 2413 (govet)\n\t\t\terr := common.CBStore.Put(string(key), string(val))\n\t\t\t^\nsrc/core/mcis/control.go:2602:13: shadow: declaration of \"err\" shadows declaration at line 2413 (govet)\n\t\t\tcontent, err := InstallMonitorAgentToMcis(nsId, mcisId, reqToMon)\n\t\t\t         ^\nsrc/core/mcis/control.go:3330:10: shadow: declaration of \"err\" shadows declaration at line 3232 (govet)\n\t\t\t\treq, err := http.NewRequest(method, url, strings.NewReader(string(payload)))\n\t\t\t\t     ^\nsrc/core/mcis/control.go:3364:5: shadow: declaration of \"err\" shadows declaration at line 3232 (govet)\n\t\t\t\terr := ccm.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\t\t\t^\nsrc/core/mcis/control.go:3706:3: shadow: declaration of \"err\" shadows declaration at line 3684 (govet)\n\t\terr := fmt.Errorf(\"Not found [\" + key + \"]\")\n\t\t^\nsrc/core/mcis/control.go:3965:10: shadow: declaration of \"err\" shadows declaration at line 3898 (govet)\n\t\t\t\treq, err := http.NewRequest(method, url, strings.NewReader(string(payload)))\n\t\t\t\t     ^\nsrc/core/mcis/control.go:4004:4: shadow: declaration of \"err\" shadows declaration at line 3898 (govet)\n\t\t\terr := ccm.SetConfigPath(os.Getenv(\"CBTUMBLEBUG_ROOT\") + \"/conf/grpc_conf.yaml\")\n\t\t\t^\nsrc/core/mcis/monitor.go:242:3: shadow: declaration of \"err\" shadows declaration at line 225 (govet)\n\t\terr := fmt.Errorf(\"The mcis \" + mcisId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/monitor.go:323:3: shadow: declaration of \"err\" shadows declaration at line 306 (govet)\n\t\terr := fmt.Errorf(\"The mcis \" + mcisId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/orchestration.go:415:3: shadow: declaration of \"err\" shadows declaration at line 394 (govet)\n\t\terr := fmt.Errorf(\"The MCIS Policy Obj \" + u.Name + \" already exists.\")\n\t\t^\nsrc/core/mcis/orchestration.go:543:3: shadow: declaration of \"err\" shadows declaration at line 529 (govet)\n\t\terr := fmt.Errorf(\"The mcis Policy\" + mcisId + \" does not exist.\")\n\t\t^\nsrc/core/mcis/utility.go:310:18: shadow: declaration of \"err\" shadows declaration at line 294 (govet)\n\t\t\tvmListInMcis, err := ListVmId(ns, mcis)\n\t\t\t              ^\nsrc/core/common/config.go:29:3: shadow: declaration of \"err\" shadows declaration at line 35 (govet)\n\t\terr := fmt.Errorf(\"The provided name is empty.\")\n\t\t^\nsrc/core/common/config.go:155:3: shadow: declaration of \"err\" shadows declaration at line 151 (govet)\n\t\terr := fmt.Errorf(errString)\n\t\t^\nsrc/core/common/namespace.go:65:3: shadow: declaration of \"err\" shadows declaration at line 54 (govet)\n\t\terr := fmt.Errorf(\"CreateNs(); The namespace \" + u.Name + \" already exists.\")\n\t\t^\nsrc/core/common/namespace.go:115:3: shadow: declaration of \"err\" shadows declaration at line 103 (govet)\n\t\terr := fmt.Errorf(errString)\n\t\t^\nsrc/core/common/namespace.go:250:3: shadow: declaration of \"err\" shadows declaration at line 240 (govet)\n\t\terr := fmt.Errorf(errString)\n\t\t^\nsrc/core/common/namespace.go:291:3: shadow: declaration of \"err\" shadows declaration at line 240 (govet)\n\t\terr := fmt.Errorf(errString)\n\t\t^\n"},"gocyclo":{"run":1,"cnt":49,"details":"src/api/rest/server/mcis/control.go:83:1: cyclomatic complexity 12 of func `RestGetMcis` is high (> 10) (gocyclo)\nfunc RestGetMcis(c echo.Context) error {\n^\nsrc/api/grpc/cbadm/cmd/gclient.go:40:1: cyclomatic complexity 182 of func `SetupAndRun` is high (> 10) (gocyclo)\nfunc SetupAndRun(cmd *cobra.Command, args []string) {\n^\nsrc/core/mcir/spec.go:750:1: cyclomatic complexity 56 of func `FilterSpecsByRange` is high (> 10) (gocyclo)\nfunc FilterSpecsByRange(nsId string, filter FilterSpecsByRangeRequest) ([]TbSpecInfo, error) {\n^\nsrc/core/mcir/common.go:61:1: cyclomatic complexity 47 of func `DelResource` is high (> 10) (gocyclo)\nfunc DelResource(nsId string, resourceType string, resourceId string, forceFlag string) error {\n^\nsrc/core/mcir/spec.go:1021:1: cyclomatic complexity 41 of func `SortSpecs` is high (> 10) (gocyclo)\nfunc SortSpecs(specList []TbSpecInfo, orderBy string, direction string) ([]TbSpecInfo, error) {\n^\nsrc/core/mcir/spec.go:554:1: cyclomatic complexity 34 of func `FilterSpecs` is high (> 10) (gocyclo)\nfunc FilterSpecs(nsId string, filter TbSpecInfo) ([]TbSpecInfo, error) {\n^\nsrc/core/mcir/common.go:660:1: cyclomatic complexity 24 of func `ListResource` is high (> 10) (gocyclo)\nfunc ListResource(nsId string, resourceType string) (interface{}, error) {\n^\nsrc/core/mcir/common.go:444:1: cyclomatic complexity 23 of func `InspectResources` is high (> 10) (gocyclo)\nfunc InspectResources(connConfig string, resourceType string) (interface{}, error) {\n^\nsrc/core/mcir/common.go:1039:1: cyclomatic complexity 17 of func `GetResource` is high (> 10) (gocyclo)\nfunc GetResource(nsId string, resourceType string, resourceId string) (interface{}, error) {\n^\nsrc/core/mcir/common.go:915:1: cyclomatic complexity 16 of func `UpdateAssociatedObjectList` is high (> 10) (gocyclo)\nfunc UpdateAssociatedObjectList(nsId string, resourceType string, resourceId string, cmd string, objectKey string) ([]string, error) {\n^\nsrc/core/mcir/securitygroup.go:79:1: cyclomatic complexity 14 of func `CreateSecurityGroup` is high (> 10) (gocyclo)\nfunc CreateSecurityGroup(nsId string, u *TbSecurityGroupReq) (TbSecurityGroupInfo, error) {\n^\nsrc/core/mcir/vnet.go:75:1: cyclomatic complexity 14 of func `CreateVNet` is high (> 10) (gocyclo)\nfunc CreateVNet(nsId string, u *TbVNetReq) (TbVNetInfo, error) {\n^\nsrc/core/mcir/sshkey.go:63:1: cyclomatic complexity 14 of func `CreateSshKey` is high (> 10) (gocyclo)\nfunc CreateSshKey(nsId string, u *TbSshKeyReq) (TbSshKeyInfo, error) {\n^\nsrc/core/mcir/common.go:1128:1: cyclomatic complexity 12 of func `CheckResource` is high (> 10) (gocyclo)\nfunc CheckResource(nsId string, resourceType string, resourceId string) (bool, error) {\n^\nsrc/core/mcir/spec.go:200:1: cyclomatic complexity 11 of func `LookupSpec` is high (> 10) (gocyclo)\nfunc LookupSpec(connConfig string, specName string) (SpiderSpecInfo, error) {\n^\nsrc/core/mcir/image.go:319:1: cyclomatic complexity 11 of func `LookupImage` is high (> 10) (gocyclo)\nfunc LookupImage(connConfig string, imageId string) (SpiderImageInfo, error) {\n^\nsrc/api/grpc/request/mcisapi.go:389:1: cyclomatic complexity 14 of func `(*MCISApi).SetConfigPath` is high (> 10) (gocyclo)\nfunc (m *MCISApi) SetConfigPath(configFile string) error {\n^\nsrc/api/grpc/request/mcirapi.go:286:1: cyclomatic complexity 14 of func `(*MCIRApi).SetConfigPath` is high (> 10) (gocyclo)\nfunc (m *MCIRApi) SetConfigPath(configFile string) error {\n^\nsrc/api/grpc/request/tbutilapi.go:121:1: cyclomatic complexity 14 of func `(*UtilityApi).SetConfigPath` is high (> 10) (gocyclo)\nfunc (u *UtilityApi) SetConfigPath(configFile string) error {\n^\nsrc/api/grpc/request/nsapi.go:121:1: cyclomatic complexity 14 of func `(*NSApi).SetConfigPath` is high (> 10) (gocyclo)\nfunc (ns *NSApi) SetConfigPath(configFile string) error {\n^\nsrc/api/grpc/request/test/test_api.go:131:1: cyclomatic complexity 14 of func `DocTypeNSApiTest` is high (> 10) (gocyclo)\nfunc DocTypeNSApiTest() {\n^\nsrc/api/grpc/config/config.go:111:1: cyclomatic complexity 28 of func `(*GrpcConfig).initGlobalParams` is high (> 10) (gocyclo)\nfunc (gConf *GrpcConfig) initGlobalParams() {\n^\nsrc/api/grpc/server/server.go:72:1: cyclomatic complexity 16 of func `configLoad` is high (> 10) (gocyclo)\nfunc configLoad(cf string) (config.GrpcConfig, error) {\n^\nsrc/core/mcis/control.go:3883:1: cyclomatic complexity 49 of func `GetVmStatus` is high (> 10) (gocyclo)\nfunc GetVmStatus(nsId string, mcisId string, vmId string) (TbVmStatusInfo, error) {\n^\nsrc/core/mcis/orchestration.go:78:1: cyclomatic complexity 42 of func `OrchestrationController` is high (> 10) (gocyclo)\nfunc OrchestrationController() {\n^\nsrc/core/mcis/control.go:2705:1: cyclomatic complexity 39 of func `CreateVm` is high (> 10) (gocyclo)\nfunc CreateVm(nsId string, mcisId string, vmInfoData *TbVmInfo) error {\n^\nsrc/core/mcis/control.go:3682:1: cyclomatic complexity 29 of func `GetMcisStatus` is high (> 10) (gocyclo)\nfunc GetMcisStatus(nsId string, mcisId string) (*McisStatusInfo, error) {\n^\nsrc/core/mcis/plan.go:59:1: cyclomatic complexity 25 of func `RecommendVm` is high (> 10) (gocyclo)\nfunc RecommendVm(nsId string, plan DeploymentPlan) ([]mcir.TbSpecInfo, error) {\n^\nsrc/core/mcis/control.go:3228:1: cyclomatic complexity 25 of func `ControlVmAsync` is high (> 10) (gocyclo)\nfunc ControlVmAsync(wg *sync.WaitGroup, nsId string, mcisId string, vmId string, action string, results *ControlVmResultWrapper) error {\n^\nsrc/core/mcis/control.go:678:1: cyclomatic complexity 24 of func `CoreGetAllBenchmark` is high (> 10) (gocyclo)\nfunc CoreGetAllBenchmark(nsId string, mcisId string, host string) (*BenchmarkInfoArray, error) {\n^\nsrc/core/mcis/control.go:2411:1: cyclomatic complexity 22 of func `CreateMcis` is high (> 10) (gocyclo)\nfunc CreateMcis(nsId string, req *TbMcisReq) (*TbMcisInfo, error) {\n^\nsrc/core/mcis/control.go:1461:1: cyclomatic complexity 22 of func `HandleMcisAction` is high (> 10) (gocyclo)\nfunc HandleMcisAction(nsId string, mcisId string, action string) (string, error) {\n^\nsrc/core/mcis/control.go:1224:1: cyclomatic complexity 20 of func `DelMcis` is high (> 10) (gocyclo)\nfunc DelMcis(nsId string, mcisId string, option string) error {\n^\nsrc/core/mcis/control.go:346:1: cyclomatic complexity 20 of func `VerifySshUserName` is high (> 10) (gocyclo)\nfunc VerifySshUserName(nsId string, mcisId string, vmId string, vmIp string, sshPort string, givenUserName string) (string, string, error) {\n^\nsrc/core/mcis/control.go:3461:1: cyclomatic complexity 18 of func `ControlVm` is high (> 10) (gocyclo)\nfunc ControlVm(nsId string, mcisId string, vmId string, action string) error {\n^\nsrc/core/mcis/control.go:2070:1: cyclomatic complexity 16 of func `CreateMcisGroupVm` is high (> 10) (gocyclo)\nfunc CreateMcisGroupVm(nsId string, mcisId string, vmRequest *TbVmReq) (*TbMcisInfo, error) {\n^\nsrc/core/mcis/utility.go:292:1: cyclomatic complexity 16 of func `InspectVMs` is high (> 10) (gocyclo)\nfunc InspectVMs(connConfig string) (interface{}, error) {\n^\nsrc/core/mcis/plan.go:179:1: cyclomatic complexity 14 of func `RecommendVmLocation` is high (> 10) (gocyclo)\nfunc RecommendVmLocation(nsId string, specList *[]mcir.TbSpecInfo, param *[]ParameterKeyVal) ([]mcir.TbSpecInfo, error) {\n^\nsrc/core/mcis/control.go:3123:1: cyclomatic complexity 14 of func `ControlMcisAsync` is high (> 10) (gocyclo)\nfunc ControlMcisAsync(nsId string, mcisId string, action string) error {\n^\nsrc/core/mcis/control.go:3087:1: cyclomatic complexity 13 of func `CheckAllowedTransition` is high (> 10) (gocyclo)\nfunc CheckAllowedTransition(nsId string, mcisId string, action string) error {\n^\nsrc/core/mcis/control.go:4483:1: cyclomatic complexity 12 of func `GetCloudLocation` is high (> 10) (gocyclo)\nfunc GetCloudLocation(cloudType string, nativeRegion string) GeoLocation {\n^\nsrc/core/mcis/control.go:1651:1: cyclomatic complexity 12 of func `CoreGetAllMcis` is high (> 10) (gocyclo)\nfunc CoreGetAllMcis(nsId string, option string) ([]TbMcisInfo, error) {\n^\nsrc/core/mcis/control.go:4191:1: cyclomatic complexity 12 of func `GetVmCurrentPublicIp` is high (> 10) (gocyclo)\nfunc GetVmCurrentPublicIp(nsId string, mcisId string, vmId string) (TbVmStatusInfo, error) {\n^\nsrc/core/mcis/monitor.go:372:1: cyclomatic complexity 11 of func `CallGetMonitoringAsync` is high (> 10) (gocyclo)\nfunc CallGetMonitoringAsync(wg *sync.WaitGroup, nsID string, mcisID string, vmID string, vmIP string, method string, metric string, cmd string, returnResult *[]MonResultSimple) {\n^\nsrc/api/grpc/cbadm/proc/connectinfos.go:66:1: cyclomatic complexity 13 of func `ListConnectInfos` is high (> 10) (gocyclo)\nfunc ListConnectInfos(cim *sp_api.CIMApi) (string, error) {\n^\nsrc/api/grpc/cbadm/proc/connectinfos.go:153:1: cyclomatic complexity 11 of func `GetConnectInfos` is high (> 10) (gocyclo)\nfunc GetConnectInfos(cim *sp_api.CIMApi, configName string) (string, error) {\n^\nsrc/api/grpc/common/cbmessage.go:46:1: cyclomatic complexity 19 of func `ConvertToOutput` is high (> 10) (gocyclo)\nfunc ConvertToOutput(outType string, obj interface{}) (string, error) {\n^\nsrc/api/grpc/common/cbserver.go:46:1: cyclomatic complexity 12 of func `NewCBServer` is high (> 10) (gocyclo)\nfunc NewCBServer(gConf *config.GrpcServerConfig) (*CBServer, io.Closer, error) {\n^\nsrc/api/rest/server/mcir/common.go:64:1: cyclomatic complexity 14 of func `RestGetAllResources` is high (> 10) (gocyclo)\nfunc RestGetAllResources(c echo.Context) error {\n^\n"},"golint":{"run":1,"cnt":571,"details":"src/core/mcir/image_test.go:46:15: CreateImageTable not declared by package common (typecheck)\n\terr = common.CreateImageTable()\n\t             ^\nsrc/core/mcir/spec_test.go:46:15: CreateSpecTable not declared by package common (typecheck)\n\terr = common.CreateSpecTable()\n\t             ^\nsrc/api/rest/server/mcir/common.go:23:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:43:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:48:2: var `resourceId` should be `resourceID` (golint)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/common.go:66:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:83:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/api/rest/server/mcir/common.go:130:5: struct field `SshKey` should be `SSHKey` (golint)\n\t\t\t\tSshKey []mcir.TbSshKeyInfo `json:\"sshKey\"`\n\t\t\t\t^\nsrc/api/rest/server/mcir/common.go:163:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:168:2: var `resourceId` should be `resourceID` (golint)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/common.go:174:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/api/rest/server/mcir/common.go:193:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:195:2: var `resourceId` should be `resourceID` (golint)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/common.go:199:7: type `JsonTemplate` should be `JSONTemplate` (golint)\n\ttype JsonTemplate struct {\n\t     ^\nsrc/api/rest/server/mcir/common.go:219:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:223:2: var `resourceId` should be `resourceID` (golint)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/common.go:240:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:244:2: var `resourceId` should be `resourceID` (golint)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/common.go:261:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/common.go:265:2: var `resourceId` should be `resourceID` (golint)\n\tresourceId := c.Param(\"resourceId\")\n\t^\nsrc/api/rest/server/mcir/image.go:28:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/image.go:97:2: struct field `CspImageId` should be `CspImageID` (golint)\n\tCspImageId     string `json:\"cspImageId\"`\n\t^\nsrc/api/rest/server/mcir/image.go:175:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/image.go:305:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/securitygroup.go:26:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:28:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:48:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else { // if action == \"registerWithCspSpecName\" { // The default mode.\n\t       ^\nsrc/api/rest/server/mcir/spec.go:84:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:85:2: var `specId` should be `specID` (golint)\n\tspecId := c.Param(\"specId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:193:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:246:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:280:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/spec.go:302:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/sshkey.go:24:6: func RestPostSshKey should be RestPostSSHKey (golint)\nfunc RestPostSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/sshkey.go:26:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcir/sshkey.go:58:6: func RestPutSshKey should be RestPutSSHKey (golint)\nfunc RestPutSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/sshkey.go:76:6: func RestGetSshKey should be RestGetSSHKey (golint)\nfunc RestGetSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/sshkey.go:82:6: type `RestGetAllSshKeyResponse` should be `RestGetAllSSHKeyResponse` (golint)\ntype RestGetAllSshKeyResponse struct {\n     ^\nsrc/api/rest/server/mcir/sshkey.go:83:2: struct field `SshKey` should be `SSHKey` (golint)\n\tSshKey []mcir.TbSshKeyInfo `json:\"sshKey\"`\n\t^\nsrc/api/rest/server/mcir/sshkey.go:98:6: func RestGetAllSshKey should be RestGetAllSSHKey (golint)\nfunc RestGetAllSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/sshkey.go:114:6: func RestDelSshKey should be RestDelSSHKey (golint)\nfunc RestDelSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/sshkey.go:129:6: func RestDelAllSshKey should be RestDelAllSSHKey (golint)\nfunc RestDelAllSshKey(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcir/vnet.go:26:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/core/common/common.go:19:6: type `IdList` should be `IDList` (golint)\ntype IdList struct {\n     ^\nsrc/core/common/common.go:20:2: struct field `IdList` should be `IDList` (golint)\n\tIdList []string `json:\"idList\"`\n\t^\nsrc/core/common/common.go:23:1: comment on exported var `CBLog` should be of the form `CBLog ...` (golint)\n// CB-Store\n^\nsrc/core/common/common.go:27:5: don't use ALL_CAPS in Go names; use CamelCase (golint)\nvar SPIDER_REST_URL string\n    ^\nsrc/core/common/common.go:28:5: don't use ALL_CAPS in Go names; use CamelCase (golint)\nvar DRAGONFLY_REST_URL string\n    ^\nsrc/core/common/common.go:29:5: don't use ALL_CAPS in Go names; use CamelCase (golint)\nvar DB_URL string\n    ^\nsrc/core/common/common.go:30:5: don't use ALL_CAPS in Go names; use CamelCase (golint)\nvar DB_DATABASE string\n    ^\nsrc/core/common/common.go:31:5: don't use ALL_CAPS in Go names; use CamelCase (golint)\nvar DB_USER string\n    ^\nsrc/core/common/common.go:32:5: don't use ALL_CAPS in Go names; use CamelCase (golint)\nvar DB_PASSWORD string\n    ^\nsrc/core/common/common.go:33:5: don't use ALL_CAPS in Go names; use CamelCase (golint)\nvar AUTOCONTROL_DURATION_MS string\n    ^\nsrc/core/common/common.go:39:2: don't use underscores in Go names; const StrSPIDER_REST_URL should be StrSPIDERRESTURL (golint)\n\tStrSPIDER_REST_URL            string = \"SPIDER_REST_URL\"\n\t^\nsrc/core/common/common.go:40:2: don't use underscores in Go names; const StrDRAGONFLY_REST_URL should be StrDRAGONFLYRESTURL (golint)\n\tStrDRAGONFLY_REST_URL         string = \"DRAGONFLY_REST_URL\"\n\t^\nsrc/core/common/common.go:41:2: don't use underscores in Go names; const StrDB_URL should be StrDBURL (golint)\n\tStrDB_URL                     string = \"DB_URL\"\n\t^\nsrc/core/common/common.go:42:2: don't use underscores in Go names; const StrDB_DATABASE should be StrDBDATABASE (golint)\n\tStrDB_DATABASE                string = \"DB_DATABASE\"\n\t^\nsrc/core/common/common.go:43:2: don't use underscores in Go names; const StrDB_USER should be StrDBUSER (golint)\n\tStrDB_USER                    string = \"DB_USER\"\n\t^\nsrc/core/common/common.go:44:2: don't use underscores in Go names; const StrDB_PASSWORD should be StrDBPASSWORD (golint)\n\tStrDB_PASSWORD                string = \"DB_PASSWORD\"\n\t^\nsrc/core/common/common.go:45:2: don't use underscores in Go names; const StrAUTOCONTROL_DURATION_MS should be StrAUTOCONTROLDURATIONMS (golint)\n\tStrAUTOCONTROL_DURATION_MS    string = \"AUTOCONTROL_DURATION_MS\"\n\t^\nsrc/core/common/common.go:67:2: struct field `NameId` should be `NameID` (golint)\n\tNameId   string // NameID by user\n\t^\nsrc/core/common/common.go:68:2: struct field `SystemId` should be `SystemID` (golint)\n\tSystemId string // SystemID by CloudOS\n\t^\nsrc/core/common/config.go:20:2: struct field `Id` should be `ID` (golint)\n\tId    string `json:\"id\" example:\"SPIDER_REST_URL\"`\n\t^\nsrc/core/common/config.go:29:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"The provided name is empty.\")\n\t\t                  ^\nsrc/core/common/config.go:215:6: func ListConfigId should be ListConfigID (golint)\nfunc ListConfigId() []string {\n     ^\nsrc/core/common/config.go:260:2: var `configIdList` should be `configIDList` (golint)\n\tconfigIdList := ListConfigId()\n\t^\nsrc/core/common/config.go:271:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"CheckConfig failed; configId given is null.\")\n\t\t                  ^\nsrc/core/common/namespace.go:24:2: struct field `Id` should be `ID` (golint)\n\tId          string `json:\"id\" example:\"namespaceid01\"`\n\t^\nsrc/core/common/namespace.go:33:4: var `nsId` should be `nsID` (golint)\n\t\t\tnsId := c.Param(\"nsId\")\n\t\t\t^\nsrc/core/common/namespace.go:184:6: func ListNsId should be ListNsID (golint)\nfunc ListNsId() ([]string, error) {\n     ^\nsrc/core/common/namespace.go:309:2: var `nsIdList` should be `nsIDList` (golint)\n\tnsIdList, err := ListNsId()\n\t^\nsrc/core/common/namespace.go:330:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"CheckNs failed; nsId given is null.\")\n\t\t                  ^\nsrc/core/common/utility.go:40:6: func GenUuid should be GenUUID (golint)\nfunc GenUuid() string {\n     ^\nsrc/core/common/utility.go:47:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"The provided name is empty.\")\n\t\t                  ^\nsrc/core/common/utility.go:70:17: func parameter `nsId` should be `nsID` (golint)\nfunc GenMcisKey(nsId string, mcisId string, vmId string) string {\n                ^\nsrc/core/common/utility.go:84:6: func GenMcisVmGroupKey should be GenMcisVMGroupKey (golint)\nfunc GenMcisVmGroupKey(nsId string, mcisId string, groupId string) string {\n     ^\nsrc/core/common/utility.go:91:23: func parameter `nsId` should be `nsID` (golint)\nfunc GenMcisPolicyKey(nsId string, mcisId string, vmId string) string {\n                      ^\nsrc/core/common/utility.go:112:6: func PrintJsonPretty should be PrintJSONPretty (golint)\nfunc PrintJsonPretty(v interface{}) {\n     ^\nsrc/core/common/utility.go:121:21: func parameter `nsId` should be `nsID` (golint)\nfunc GenResourceKey(nsId string, resourceType string, resourceId string) string {\n                    ^\nsrc/core/common/utility.go:132:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/core/common/utility.go:138:2: struct field `CspImageId` should be `CspImageID` (golint)\n\tCspImageId           string\n\t^\nsrc/core/common/utility.go:140:2: struct field `CspSshKeyName` should be `CspSSHKeyName` (golint)\n\tCspSshKeyName        string\n\t^\nsrc/core/common/utility.go:142:2: struct field `CspVNetId` should be `CspVNetID` (golint)\n\tCspVNetId            string\n\t^\nsrc/core/common/utility.go:144:2: struct field `CspSecurityGroupId` should be `CspSecurityGroupID` (golint)\n\tCspSecurityGroupId   string\n\t^\nsrc/core/common/utility.go:146:2: struct field `CspPublicIpId` should be `CspPublicIPID` (golint)\n\tCspPublicIpId        string\n\t^\nsrc/core/common/utility.go:147:2: struct field `CspPublicIpName` should be `CspPublicIPName` (golint)\n\tCspPublicIpName      string\n\t^\nsrc/core/common/utility.go:148:2: struct field `CspVNicId` should be `CspVNicID` (golint)\n\tCspVNicId            string\n\t^\nsrc/core/common/utility.go:154:6: func GetCspResourceId should be GetCspResourceID (golint)\nfunc GetCspResourceId(nsId string, resourceType string, resourceId string) (string, error) {\n     ^\nsrc/core/common/utility.go:258:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/core/common/utility.go:328:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/core/common/utility.go:401:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/core/common/utility.go:474:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/core/common/utility.go:631:6: func GetChildIdList should be GetChildIDList (golint)\nfunc GetChildIdList(key string) []string {\n     ^\nsrc/core/common/utility.go:636:6: var `childIdList` should be `childIDList` (golint)\n\tvar childIdList []string\n\t    ^\nsrc/core/common/utility.go:654:6: var `childIdList` should be `childIDList` (golint)\n\tvar childIdList []string\n\t    ^\nsrc/core/mcis/control.go:114:2: struct field `VMUserId` should be `VMUserID` (golint)\n\tVMUserId     string // ex) user1\n\t^\nsrc/core/mcis/control.go:153:2: struct field `Vm` should be `VM` (golint)\n\tVm []TbVmReq `json:\"vm\"`\n\t^\nsrc/core/mcis/control.go:157:2: struct field `Id` should be `ID` (golint)\n\tId           string `json:\"id\"`\n\t^\nsrc/core/mcis/control.go:170:2: struct field `Vm` should be `VM` (golint)\n\tVm            []TbVmInfo `json:\"vm\"`\n\t^\nsrc/core/mcis/control.go:174:6: type `TbVmReq` should be `TbVMReq` (golint)\ntype TbVmReq struct {\n     ^\nsrc/core/mcis/control.go:179:2: struct field `VmGroupSize` should be `VMGroupSize` (golint)\n\tVmGroupSize string `json:\"vmGroupSize\" example:\"3\" default:\"\"`\n\t^\nsrc/core/mcis/control.go:186:2: struct field `SpecId` should be `SpecID` (golint)\n\tSpecId           string   `json:\"specId\"`\n\t^\nsrc/core/mcis/control.go:187:2: struct field `ImageId` should be `ImageID` (golint)\n\tImageId          string   `json:\"imageId\"`\n\t^\nsrc/core/mcis/control.go:188:2: struct field `VNetId` should be `VNetID` (golint)\n\tVNetId           string   `json:\"vNetId\"`\n\t^\nsrc/core/mcis/control.go:189:2: struct field `SubnetId` should be `SubnetID` (golint)\n\tSubnetId         string   `json:\"subnetId\"`\n\t^\nsrc/core/mcis/control.go:191:2: struct field `SshKeyId` should be `SSHKeyID` (golint)\n\tSshKeyId         string   `json:\"sshKeyId\"`\n\t^\nsrc/core/mcis/control.go:192:2: struct field `VmUserAccount` should be `VMUserAccount` (golint)\n\tVmUserAccount    string   `json:\"vmUserAccount\"`\n\t^\nsrc/core/mcis/control.go:193:2: struct field `VmUserPassword` should be `VMUserPassword` (golint)\n\tVmUserPassword   string   `json:\"vmUserPassword\"`\n\t^\nsrc/core/mcis/control.go:197:6: type `TbVmGroupInfo` should be `TbVMGroupInfo` (golint)\ntype TbVmGroupInfo struct {\n     ^\nsrc/core/mcis/control.go:198:2: struct field `Id` should be `ID` (golint)\n\tId          string   `json:\"id\"`\n\t^\nsrc/core/mcis/control.go:200:2: struct field `VmId` should be `VMID` (golint)\n\tVmId        []string `json:\"vmId\"`\n\t^\nsrc/core/mcis/control.go:201:2: struct field `VmGroupSize` should be `VMGroupSize` (golint)\n\tVmGroupSize string   `json:\"vmGroupSize\"`\n\t^\nsrc/core/mcis/control.go:205:6: type `TbVmInfo` should be `TbVMInfo` (golint)\ntype TbVmInfo struct {\n     ^\nsrc/core/mcis/control.go:206:2: struct field `Id` should be `ID` (golint)\n\tId   string `json:\"id\"`\n\t^\nsrc/core/mcis/control.go:210:2: struct field `VmGroupId` should be `VMGroupID` (golint)\n\tVmGroupId string `json:\"vmGroupId\"`\n\t^\nsrc/core/mcis/control.go:241:2: struct field `SpecId` should be `SpecID` (golint)\n\tSpecId           string   `json:\"specId\"`\n\t^\nsrc/core/mcis/control.go:242:2: struct field `ImageId` should be `ImageID` (golint)\n\tImageId          string   `json:\"imageId\"`\n\t^\nsrc/core/mcis/control.go:243:2: struct field `VNetId` should be `VNetID` (golint)\n\tVNetId           string   `json:\"vNetId\"`\n\t^\nsrc/core/mcis/control.go:244:2: struct field `SubnetId` should be `SubnetID` (golint)\n\tSubnetId         string   `json:\"subnetId\"`\n\t^\nsrc/core/mcis/control.go:246:2: struct field `SshKeyId` should be `SSHKeyID` (golint)\n\tSshKeyId         string   `json:\"sshKeyId\"`\n\t^\nsrc/core/mcis/control.go:247:2: struct field `VmUserAccount` should be `VMUserAccount` (golint)\n\tVmUserAccount    string   `json:\"vmUserAccount\"`\n\t^\nsrc/core/mcis/control.go:248:2: struct field `VmUserPassword` should be `VMUserPassword` (golint)\n\tVmUserPassword   string   `json:\"vmUserPassword\"`\n\t^\nsrc/core/mcis/control.go:250:2: struct field `CspViewVmDetail` should be `CspViewVMDetail` (golint)\n\tCspViewVmDetail SpiderVMInfo `json:\"cspViewVmDetail\"`\n\t^\nsrc/core/mcis/control.go:262:6: type name will be used as mcis.McisStatusInfo by other packages, and that stutters; consider calling this StatusInfo (golint)\ntype McisStatusInfo struct {\n     ^\nsrc/core/mcis/control.go:263:2: struct field `Id` should be `ID` (golint)\n\tId   string `json:\"id\"`\n\t^\nsrc/core/mcis/control.go:274:2: struct field `MasterVmId` should be `MasterVMID` (golint)\n\tMasterVmId    string `json:\"masterVmId\" example:\"vm-asiaeast1-cb-01\"`\n\t^\nsrc/core/mcis/control.go:275:2: struct field `MasterIp` should be `MasterIP` (golint)\n\tMasterIp      string `json:\"masterIp\" example:\"32.201.134.113\"`\n\t^\nsrc/core/mcis/control.go:278:2: struct field `Vm` should be `VM` (golint)\n\tVm []TbVmStatusInfo `json:\"vm\"`\n\t^\nsrc/core/mcis/control.go:282:6: type `TbVmStatusInfo` should be `TbVMStatusInfo` (golint)\ntype TbVmStatusInfo struct {\n     ^\nsrc/core/mcis/control.go:283:2: struct field `Id` should be `ID` (golint)\n\tId      string `json:\"id\"`\n\t^\nsrc/core/mcis/control.go:285:2: struct field `CspVmId` should be `CspVMID` (golint)\n\tCspVmId string `json:\"cspVmId\"`\n\t^\nsrc/core/mcis/control.go:301:2: struct field `PublicIp` should be `PublicIP` (golint)\n\tPublicIp  string `json:\"publicIp\"`\n\t^\nsrc/core/mcis/control.go:302:2: struct field `PrivateIp` should be `PrivateIP` (golint)\n\tPrivateIp string `json:\"privateIp\"`\n\t^\nsrc/core/mcis/control.go:309:6: type name will be used as mcis.McisCmdReq by other packages, and that stutters; consider calling this CmdReq (golint)\ntype McisCmdReq struct {\n     ^\nsrc/core/mcis/control.go:314:6: type name will be used as mcis.McisRecommendReq by other packages, and that stutters; consider calling this RecommendReq (golint)\ntype McisRecommendReq struct {\n     ^\nsrc/core/mcis/control.go:315:2: struct field `VmReq` should be `VMReq` (golint)\n\tVmReq          []TbVmRecommendReq `json:\"vmReq\"`\n\t^\nsrc/core/mcis/control.go:321:6: type `TbVmRecommendReq` should be `TbVMRecommendReq` (golint)\ntype TbVmRecommendReq struct {\n     ^\nsrc/core/mcis/control.go:334:6: type `TbVmPriority` should be `TbVMPriority` (golint)\ntype TbVmPriority struct {\n     ^\nsrc/core/mcis/control.go:336:2: struct field `VmSpec` should be `VMSpec` (golint)\n\tVmSpec   mcir.TbSpecInfo `json:\"vmSpec\"`\n\t^\nsrc/core/mcis/control.go:339:6: type `TbVmRecommendInfo` should be `TbVMRecommendInfo` (golint)\ntype TbVmRecommendInfo struct {\n     ^\nsrc/core/mcis/control.go:340:2: struct field `VmReq` should be `VMReq` (golint)\n\tVmReq          TbVmRecommendReq  `json:\"vmReq\"`\n\t^\nsrc/core/mcis/control.go:341:2: struct field `VmPriority` should be `VMPriority` (golint)\n\tVmPriority     []TbVmPriority    `json:\"vmPriority\"`\n\t^\nsrc/core/mcis/control.go:346:6: func VerifySshUserName should be VerifySSHUserName (golint)\nfunc VerifySshUserName(nsId string, mcisId string, vmId string, vmIp string, sshPort string, givenUserName string) (string, string, error) {\n     ^\nsrc/core/mcis/control.go:447:6: type `SshCmdResult` should be `SSHCmdResult` (golint)\ntype SshCmdResult struct { // Tumblebug\n     ^\nsrc/core/mcis/control.go:448:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId string `json:\"mcisId\"`\n\t^\nsrc/core/mcis/control.go:449:2: struct field `VmId` should be `VMID` (golint)\n\tVmId   string `json:\"vmId\"`\n\t^\nsrc/core/mcis/control.go:450:2: struct field `VmIp` should be `VMIP` (golint)\n\tVmIp   string `json:\"vmIp\"`\n\t^\nsrc/core/mcis/control.go:457:2: don't use underscores in Go names; struct field Result_array should be ResultArray (golint)\n\tResult_array []AgentInstallContent `json:\"result_array\"`\n\t^\nsrc/core/mcis/control.go:462:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId string `json:\"mcisId\"`\n\t^\nsrc/core/mcis/control.go:463:2: struct field `VmId` should be `VMID` (golint)\n\tVmId   string `json:\"vmId\"`\n\t^\nsrc/core/mcis/control.go:464:2: struct field `VmIp` should be `VMIP` (golint)\n\tVmIp   string `json:\"vmIp\"`\n\t^\nsrc/core/mcis/control.go:468:25: func parameter `nsId` should be `nsID` (golint)\nfunc InstallAgentToMcis(nsId string, mcisId string, req *McisCmdReq) (AgentInstallContentWrapper, error) {\n                        ^\nsrc/core/mcis/control.go:509:3: var `vmId` should be `vmID` (golint)\n\t\tvmId := v\n\t\t^\nsrc/core/mcis/control.go:510:3: var `vmIp` should be `vmIP` (golint)\n\t\tvmIp, sshPort := GetVmIp(nsId, mcisId, vmId)\n\t\t^\nsrc/core/mcis/control.go:564:2: struct field `SpecId` should be `SpecID` (golint)\n\tSpecId     string `json:\"specid\"`\n\t^\nsrc/core/mcis/control.go:582:2: struct field `SpecId` should be `SpecID` (golint)\n\tSpecId      string          `json:\"specid\"`\n\t^\nsrc/core/mcis/control.go:599:56: func parameter `nsId` should be `nsID` (golint)\nfunc CallMilkyway(wg *sync.WaitGroup, vmList []string, nsId string, mcisId string, vmId string, vmIp string, action string, option string, results *BenchmarkInfoArray) {\n                                                       ^\nsrc/core/mcis/control.go:612:7: type `JsonTemplate` should be `JSONTemplate` (golint)\n\ttype JsonTemplate struct {\n\t     ^\nsrc/core/mcis/control.go:622:4: var `vmIdTmp` should be `vmIDTmp` (golint)\n\t\t\tvmIdTmp := vm\n\t\t\t^\nsrc/core/mcis/control.go:623:4: var `vmIpTmp` should be `vmIPTmp` (golint)\n\t\t\tvmIpTmp, _ := GetVmIp(nsId, mcisId, vmIdTmp)\n\t\t\t^\nsrc/core/mcis/control.go:678:26: func parameter `nsId` should be `nsID` (golint)\nfunc CoreGetAllBenchmark(nsId string, mcisId string, host string) (*BenchmarkInfoArray, error) {\n                         ^\nsrc/core/mcis/control.go:721:4: var `SpecId` should be `SpecID` (golint)\n\t\t\tSpecId := k.SpecId\n\t\t\t^\nsrc/core/mcis/control.go:802:3: var `SpecId` should be `SpecID` (golint)\n\t\tSpecId := k.SpecId\n\t\t^\nsrc/core/mcis/control.go:811:4: var `tagetSpecId` should be `tagetSpecID` (golint)\n\t\t\ttagetSpecId := m.SpecId\n\t\t\t^\nsrc/core/mcis/control.go:836:23: func parameter `nsId` should be `nsID` (golint)\nfunc CoreGetBenchmark(nsId string, mcisId string, action string, host string) (*BenchmarkInfoArray, error) {\n                      ^\nsrc/core/mcis/control.go:890:22: func parameter `nsId` should be `nsID` (golint)\nfunc BenchmarkAction(nsId string, mcisId string, action string, option string) (BenchmarkInfoArray, error) {\n                     ^\nsrc/core/mcis/control.go:906:3: var `vmId` should be `vmID` (golint)\n\t\tvmId := v\n\t\t^\nsrc/core/mcis/control.go:907:3: var `vmIp` should be `vmIP` (golint)\n\t\tvmIp, _ := GetVmIp(nsId, mcisId, vmId)\n\t\t^\nsrc/core/mcis/control.go:1044:21: func parameter `nsId` should be `nsID` (golint)\nfunc UpdateMcisInfo(nsId string, mcisInfoData TbMcisInfo) {\n                    ^\nsrc/core/mcis/control.go:1072:6: func UpdateVmInfo should be UpdateVMInfo (golint)\nfunc UpdateVmInfo(nsId string, mcisId string, vmInfoData TbVmInfo) {\n     ^\nsrc/core/mcis/control.go:1098:6: func ListMcisId should be ListMcisID (golint)\nfunc ListMcisId(nsId string) ([]string, error) {\n     ^\nsrc/core/mcis/control.go:1133:6: func ListVmId should be ListVMID (golint)\nfunc ListVmId(nsId string, mcisId string) ([]string, error) {\n     ^\nsrc/core/mcis/control.go:1188:6: func ListVmGroupId should be ListVMGroupID (golint)\nfunc ListVmGroupId(nsId string, mcisId string) ([]string, error) {\n     ^\nsrc/core/mcis/control.go:1224:14: func parameter `nsId` should be `nsID` (golint)\nfunc DelMcis(nsId string, mcisId string, option string) error {\n             ^\nsrc/core/mcis/control.go:1340:6: func DelMcisVm should be DelMcisVM (golint)\nfunc DelMcisVm(nsId string, mcisId string, vmId string, option string) error {\n     ^\nsrc/core/mcis/control.go:1406:23: func parameter `nsId` should be `nsID` (golint)\nfunc GetRecommendList(nsId string, cpuSize string, memSize string, diskSize string) ([]TbVmPriority, error) {\n                      ^\nsrc/core/mcis/control.go:1411:3: struct field `Id` should be `ID` (golint)\n\t\tId             string\n\t\t^\nsrc/core/mcis/control.go:1461:23: func parameter `nsId` should be `nsID` (golint)\nfunc HandleMcisAction(nsId string, mcisId string, action string) (string, error) {\n                      ^\nsrc/core/mcis/control.go:1593:18: func parameter `nsId` should be `nsID` (golint)\nfunc GetMcisInfo(nsId string, mcisId string) (*TbMcisInfo, error) {\n                 ^\nsrc/core/mcis/control.go:1651:21: func parameter `nsId` should be `nsID` (golint)\nfunc CoreGetAllMcis(nsId string, option string) ([]TbMcisInfo, error) {\n                    ^\nsrc/core/mcis/control.go:1688:3: var `mcisId` should be `mcisID` (golint)\n\t\tmcisId := v\n\t\t^\nsrc/core/mcis/control.go:1747:21: func parameter `nsId` should be `nsID` (golint)\nfunc CoreDelAllMcis(nsId string, option string) (string, error) {\n                    ^\nsrc/core/mcis/control.go:1780:28: func parameter `nsId` should be `nsID` (golint)\nfunc CorePostMcisRecommend(nsId string, req *McisRecommendReq) ([]TbVmRecommendInfo, error) {\n                           ^\nsrc/core/mcis/control.go:1801:2: don't use underscores in Go names; var `Vm_recommend` should be `VMRecommend` (golint)\n\tVm_recommend := []TbVmRecommendInfo{}\n\t^\nsrc/core/mcis/control.go:1828:6: func CorePostCmdMcisVm should be CorePostCmdMcisVM (golint)\nfunc CorePostCmdMcisVm(nsId string, mcisId string, vmId string, req *McisCmdReq) (string, error) {\n     ^\nsrc/core/mcis/control.go:1854:2: var `vmIp` should be `vmIP` (golint)\n\tvmIp, sshPort := GetVmIp(nsId, mcisId, vmId)\n\t^\nsrc/core/mcis/control.go:1874:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (golint)\n\t} else {\n\t       ^\nsrc/core/mcis/control.go:1883:22: func parameter `nsId` should be `nsID` (golint)\nfunc CorePostCmdMcis(nsId string, mcisId string, req *McisCmdReq) ([]SshCmdResult, error) {\n                     ^\nsrc/core/mcis/control.go:1930:3: var `vmId` should be `vmID` (golint)\n\t\tvmId := v\n\t\t^\nsrc/core/mcis/control.go:1931:3: var `vmIp` should be `vmIP` (golint)\n\t\tvmIp, sshPort := GetVmIp(nsId, mcisId, vmId)\n\t\t^\nsrc/core/mcis/control.go:1968:6: func CorePostMcisVm should be CorePostMcisVM (golint)\nfunc CorePostMcisVm(nsId string, mcisId string, vmInfoData *TbVmInfo) (*TbVmInfo, error) {\n     ^\nsrc/core/mcis/control.go:2060:6: func CorePostMcisGroupVm should be CorePostMcisGroupVM (golint)\nfunc CorePostMcisGroupVm(nsId string, mcisId string, vmReq *TbVmReq) (*TbMcisInfo, error) {\n     ^\nsrc/core/mcis/control.go:2070:6: func CreateMcisGroupVm should be CreateMcisGroupVM (golint)\nfunc CreateMcisGroupVm(nsId string, mcisId string, vmRequest *TbVmReq) (*TbMcisInfo, error) {\n     ^\nsrc/core/mcis/control.go:2233:6: func CoreGetMcisVmAction should be CoreGetMcisVMAction (golint)\nfunc CoreGetMcisVmAction(nsId string, mcisId string, vmId string, action string) (string, error) {\n     ^\nsrc/core/mcis/control.go:2297:6: func CoreGetMcisVmStatus should be CoreGetMcisVMStatus (golint)\nfunc CoreGetMcisVmStatus(nsId string, mcisId string, vmId string) (*TbVmStatusInfo, error) {\n     ^\nsrc/core/mcis/control.go:2349:6: func CoreGetMcisVmInfo should be CoreGetMcisVMInfo (golint)\nfunc CoreGetMcisVmInfo(nsId string, mcisId string, vmId string) (*TbVmInfo, error) {\n     ^\nsrc/core/mcis/control.go:2411:17: func parameter `nsId` should be `nsID` (golint)\nfunc CreateMcis(nsId string, req *TbMcisReq) (*TbMcisInfo, error) {\n                ^\nsrc/core/mcis/control.go:2434:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := req.Name\n\t^\nsrc/core/mcis/control.go:2620:6: func AddVmToMcis should be AddVMToMcis (golint)\nfunc AddVmToMcis(wg *sync.WaitGroup, nsId string, mcisId string, vmInfoData *TbVmInfo) error {\n     ^\nsrc/core/mcis/control.go:2705:6: func CreateVm should be CreateVM (golint)\nfunc CreateVm(nsId string, mcisId string, vmInfoData *TbVmInfo) error {\n     ^\nsrc/core/mcis/control.go:2772:3: var `cspVmIdToRequest` should be `cspVMIDToRequest` (golint)\n\t\tcspVmIdToRequest := nsId + \"-\" + mcisId + \"-\" + vmInfoData.Name\n\t\t^\nsrc/core/mcis/control.go:2804:4: var `CspSgId` should be `CspSgID` (golint)\n\t\t\tCspSgId := v //common.GetCspResourceId(nsId, common.StrSecurityGroup, v)\n\t\t\t^\nsrc/core/mcis/control.go:2909:3: var `cspVmIdToRequest` should be `cspVMIDToRequest` (golint)\n\t\tcspVmIdToRequest := nsId + \"-\" + mcisId + \"-\" + vmInfoData.Name\n\t\t^\nsrc/core/mcis/control.go:2940:4: var `CspSgId` should be `CspSgID` (golint)\n\t\t\tCspSgId := v //common.GetCspResourceId(nsId, common.StrSecurityGroup, v)\n\t\t\t^\nsrc/core/mcis/control.go:3055:18: func parameter `nsId` should be `nsID` (golint)\nfunc ControlMcis(nsId string, mcisId string, action string) error {\n                 ^\nsrc/core/mcis/control.go:3087:29: func parameter `nsId` should be `nsID` (golint)\nfunc CheckAllowedTransition(nsId string, mcisId string, action string) error {\n                            ^\nsrc/core/mcis/control.go:3116:10: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t\t} else {\n\t\t       ^\nsrc/core/mcis/control.go:3123:23: func parameter `nsId` should be `nsID` (golint)\nfunc ControlMcisAsync(nsId string, mcisId string, action string) error {\n                      ^\nsrc/core/mcis/control.go:3219:6: type `ControlVmResult` should be `ControlVMResult` (golint)\ntype ControlVmResult struct {\n     ^\nsrc/core/mcis/control.go:3220:2: struct field `VmId` should be `VMID` (golint)\n\tVmId   string `json:\"vmId\"`\n\t^\nsrc/core/mcis/control.go:3224:6: type `ControlVmResultWrapper` should be `ControlVMResultWrapper` (golint)\ntype ControlVmResultWrapper struct {\n     ^\nsrc/core/mcis/control.go:3228:6: func ControlVmAsync should be ControlVMAsync (golint)\nfunc ControlVmAsync(wg *sync.WaitGroup, nsId string, mcisId string, vmId string, action string, results *ControlVmResultWrapper) error {\n     ^\nsrc/core/mcis/control.go:3251:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/core/mcis/control.go:3262:3: var `cspVmId` should be `cspVMID` (golint)\n\t\tcspVmId := temp.CspViewVmDetail.IId.NameId\n\t\t^\nsrc/core/mcis/control.go:3461:6: func ControlVm should be ControlVM (golint)\nfunc ControlVm(nsId string, mcisId string, vmId string, action string) error {\n     ^\nsrc/core/mcis/control.go:3464:3: struct field `CloudId` should be `CloudID` (golint)\n\t\tCloudId string `json:\"cloudId\"`\n\t\t^\nsrc/core/mcis/control.go:3465:3: struct field `CspVmId` should be `CspVMID` (golint)\n\t\tCspVmId string `json:\"cspVmId\"`\n\t\t^\nsrc/core/mcis/control.go:3497:2: var `cspVmId` should be `cspVMID` (golint)\n\tcspVmId := temp.CspViewVmDetail.IId.NameId\n\t^\nsrc/core/mcis/control.go:3590:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/core/mcis/control.go:3653:20: func parameter `nsId` should be `nsID` (golint)\nfunc GetMcisObject(nsId string, mcisId string) (TbMcisInfo, error) {\n                   ^\nsrc/core/mcis/control.go:3682:20: func parameter `nsId` should be `nsID` (golint)\nfunc GetMcisStatus(nsId string, mcisId string) (*McisStatusInfo, error) {\n                   ^\nsrc/core/mcis/control.go:3785:2: var `numVm` should be `numVM` (golint)\n\tnumVm := len(mcisStatus.Vm)\n\t^\nsrc/core/mcis/control.go:3833:23: func parameter `nsId` should be `nsID` (golint)\nfunc GetMcisStatusAll(nsId string) ([]McisStatusInfo, error) {\n                      ^\nsrc/core/mcis/control.go:3842:9: range var `mcisId` should be `mcisID` (golint)\n\tfor _, mcisId := range mcisList {\n\t       ^\nsrc/core/mcis/control.go:3856:6: func GetVmObject should be GetVMObject (golint)\nfunc GetVmObject(nsId string, mcisId string, vmId string) (TbVmInfo, error) {\n     ^\nsrc/core/mcis/control.go:3869:6: func GetVmStatusAsync should be GetVMStatusAsync (golint)\nfunc GetVmStatusAsync(wg *sync.WaitGroup, nsId string, mcisId string, vmId string, results *McisStatusInfo) error {\n     ^\nsrc/core/mcis/control.go:3883:6: func GetVmStatus should be GetVMStatus (golint)\nfunc GetVmStatus(nsId string, mcisId string, vmId string) (TbVmStatusInfo, error) {\n     ^\nsrc/core/mcis/control.go:3931:2: var `cspVmId` should be `cspVMID` (golint)\n\tcspVmId := temp.CspViewVmDetail.IId.NameId\n\t^\nsrc/core/mcis/control.go:4176:6: func UpdateVmPublicIp should be UpdateVMPublicIP (golint)\nfunc UpdateVmPublicIp(nsId string, mcisId string, vmInfoData TbVmInfo) error {\n     ^\nsrc/core/mcis/control.go:4191:6: func GetVmCurrentPublicIp should be GetVMCurrentPublicIP (golint)\nfunc GetVmCurrentPublicIp(nsId string, mcisId string, vmId string) (TbVmStatusInfo, error) {\n     ^\nsrc/core/mcis/control.go:4212:2: var `cspVmId` should be `cspVMID` (golint)\n\tcspVmId := temp.CspViewVmDetail.IId.NameId\n\t^\nsrc/core/mcis/control.go:4311:6: func GetVmSshKey should be GetVMSSHKey (golint)\nfunc GetVmSshKey(nsId string, mcisId string, vmId string) (string, string, string) {\n     ^\nsrc/core/mcis/control.go:4314:3: struct field `SshKeyId` should be `SSHKeyID` (golint)\n\t\tSshKeyId string `json:\"sshKeyId\"`\n\t\t^\nsrc/core/mcis/control.go:4342:6: func UpdateVmSshKey should be UpdateVMSSHKey (golint)\nfunc UpdateVmSshKey(nsId string, mcisId string, vmId string, verifiedUserName string) error {\n     ^\nsrc/core/mcis/control.go:4345:3: struct field `SshKeyId` should be `SSHKeyID` (golint)\n\t\tSshKeyId string `json:\"sshKeyId\"`\n\t\t^\nsrc/core/mcis/control.go:4355:2: var `tmpSshKeyInfo` should be `tmpSSHKeyInfo` (golint)\n\ttmpSshKeyInfo := mcir.TbSshKeyInfo{}\n\t^\nsrc/core/mcis/control.go:4369:6: func GetVmIp should be GetVMIP (golint)\nfunc GetVmIp(nsId string, mcisId string, vmId string) (string, string) {\n     ^\nsrc/core/mcis/control.go:4391:6: func GetVmSpecId should be GetVMSpecID (golint)\nfunc GetVmSpecId(nsId string, mcisId string, vmId string) string {\n     ^\nsrc/core/mcis/control.go:4394:3: struct field `SpecId` should be `SpecID` (golint)\n\t\tSpecId string `json:\"specId\"`\n\t\t^\nsrc/core/mcis/control.go:4409:6: func GetVmListByLabel should be GetVMListByLabel (golint)\nfunc GetVmListByLabel(nsId string, mcisId string, label string) ([]string, error) {\n     ^\nsrc/core/mcis/control.go:4442:6: func GetVmTemplate should be GetVMTemplate (golint)\nfunc GetVmTemplate(nsId string, mcisId string, algo string) (TbVmInfo, error) {\n     ^\nsrc/core/mcis/monitor.go:31:7: const `monMetricCpu` should be `monMetricCPU` (golint)\nconst monMetricCpu string = \"cpu\"\n      ^\nsrc/core/mcis/monitor.go:41:2: struct field `NsId` should be `NsID` (golint)\n\tNsId     string `json:\"nsId,omitempty\"`\n\t^\nsrc/core/mcis/monitor.go:42:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId   string `json:\"mcisId,omitempty\"`\n\t^\nsrc/core/mcis/monitor.go:43:2: struct field `VmId` should be `VMID` (golint)\n\tVmId     string `json:\"vmId,omitempty\"`\n\t^\nsrc/core/mcis/monitor.go:44:2: struct field `PublicIp` should be `PublicIP` (golint)\n\tPublicIp string `json:\"publicIp,omitempty\"`\n\t^\nsrc/core/mcis/monitor.go:47:2: struct field `SshKey` should be `SSHKey` (golint)\n\tSshKey   string `json:\"sshKey,omitempty\"`\n\t^\nsrc/core/mcis/monitor.go:48:2: don't use underscores in Go names; struct field Csp_type should be CspType (golint)\n\tCsp_type string `json:\"cspType,omitempty\"`\n\t^\nsrc/core/mcis/monitor.go:64:2: struct field `VmId` should be `VMID` (golint)\n\tVmId   string `json:\"vmId\"`\n\t^\nsrc/core/mcis/monitor.go:71:2: struct field `NsId` should be `NsID` (golint)\n\tNsId           string            `json:\"nsId\"`\n\t^\nsrc/core/mcis/monitor.go:72:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId         string            `json:\"mcisId\"`\n\t^\nsrc/core/mcis/monitor.go:223:32: func parameter `nsId` should be `nsID` (golint)\nfunc InstallMonitorAgentToMcis(nsId string, mcisId string, req *McisCmdReq) (AgentInstallContentWrapper, error) {\n                               ^\nsrc/core/mcis/monitor.go:304:24: func parameter `nsId` should be `nsID` (golint)\nfunc GetMonitoringData(nsId string, mcisId string, metric string) (MonResultSimpleResponse, error) {\n                       ^\nsrc/core/mcis/monitor.go:345:3: var `vmId` should be `vmID` (golint)\n\t\tvmId := v\n\t\t^\nsrc/core/mcis/monitor.go:346:3: var `vmIp` should be `vmIP` (golint)\n\t\tvmIp, _ := GetVmIp(nsId, mcisId, vmId)\n\t\t^\nsrc/core/mcis/orchestration.go:54:2: struct field `Vm` should be `VM` (golint)\n\tVm            TbVmInfo   `json:\"vm\"`\n\t^\nsrc/core/mcis/orchestration.go:67:6: type name will be used as mcis.McisPolicyInfo by other packages, and that stutters; consider calling this PolicyInfo (golint)\ntype McisPolicyInfo struct {\n     ^\nsrc/core/mcis/orchestration.go:69:2: struct field `Id` should be `ID` (golint)\n\tId     string   `json:\"Id\"`   //MCIS Id (generated ID by the Name)\n\t^\nsrc/core/mcis/orchestration.go:88:9: range var `nsId` should be `nsID` (golint)\n\tfor _, nsId := range nsList {\n\t       ^\nsrc/core/mcis/orchestration.go:324:8: var `removeTargetVm` should be `removeTargetVM` (golint)\n\t\t\t\t\t\t\tremoveTargetVm := vmList[len(vmList)-1]\n\t\t\t\t\t\t\t^\nsrc/core/mcis/orchestration.go:326:8: var `delVmErr` should be `delVMErr` (golint)\n\t\t\t\t\t\t\tdelVmErr := DelMcisVm(nsId, mcisPolicyTmp.Id, removeTargetVm, \"\")\n\t\t\t\t\t\t\t^\nsrc/core/mcis/orchestration.go:378:27: func parameter `nsId` should be `nsID` (golint)\nfunc UpdateMcisPolicyInfo(nsId string, mcisPolicyInfoData McisPolicyInfo) {\n                          ^\nsrc/core/mcis/orchestration.go:392:23: func parameter `nsId` should be `nsID` (golint)\nfunc CreateMcisPolicy(nsId string, mcisId string, u *McisPolicyInfo) (McisPolicyInfo, error) {\n                      ^\nsrc/core/mcis/orchestration.go:445:26: func parameter `nsId` should be `nsID` (golint)\nfunc GetMcisPolicyObject(nsId string, mcisId string) (McisPolicyInfo, error) {\n                         ^\nsrc/core/mcis/orchestration.go:480:29: func parameter `nsId` should be `nsID` (golint)\nfunc GetAllMcisPolicyObject(nsId string) ([]McisPolicyInfo, error) {\n                            ^\nsrc/core/mcis/orchestration.go:506:6: func ListMcisPolicyId should be ListMcisPolicyID (golint)\nfunc ListMcisPolicyId(nsId string) []string {\n     ^\nsrc/core/mcis/orchestration.go:527:20: func parameter `nsId` should be `nsID` (golint)\nfunc DelMcisPolicy(nsId string, mcisId string) error {\n                   ^\nsrc/core/mcis/orchestration.go:563:23: func parameter `nsId` should be `nsID` (golint)\nfunc DelAllMcisPolicy(nsId string) (string, error) {\n                      ^\nsrc/core/mcis/plan.go:59:6: func RecommendVm should be RecommendVM (golint)\nfunc RecommendVm(nsId string, plan DeploymentPlan) ([]mcir.TbSpecInfo, error) {\n     ^\nsrc/core/mcis/plan.go:179:6: func RecommendVmLocation should be RecommendVMLocation (golint)\nfunc RecommendVmLocation(nsId string, specList *[]mcir.TbSpecInfo, param *[]ParameterKeyVal) ([]mcir.TbSpecInfo, error) {\n     ^\nsrc/core/mcis/utility.go:63:16: func parameter `nsId` should be `nsID` (golint)\nfunc CheckMcis(nsId string, mcisId string) (bool, error) {\n               ^\nsrc/core/mcis/utility.go:67:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"CheckMcis failed; nsId given is null.\")\n\t\t                  ^\nsrc/core/mcis/utility.go:70:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"CheckMcis failed; mcisId given is null.\")\n\t\t                  ^\nsrc/core/mcis/utility.go:99:6: func CheckVm should be CheckVM (golint)\nfunc CheckVm(nsId string, mcisId string, vmId string) (bool, error) {\n     ^\nsrc/core/mcis/utility.go:103:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"CheckVm failed; nsId given is null.\")\n\t\t                  ^\nsrc/core/mcis/utility.go:106:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"CheckVm failed; mcisId given is null.\")\n\t\t                  ^\nsrc/core/mcis/utility.go:109:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"CheckVm failed; vmId given is null.\")\n\t\t                  ^\nsrc/core/mcis/utility.go:142:22: func parameter `nsId` should be `nsID` (golint)\nfunc CheckMcisPolicy(nsId string, mcisId string) (bool, error) {\n                     ^\nsrc/core/mcis/utility.go:146:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"CheckMcis failed; nsId given is null.\")\n\t\t                  ^\nsrc/core/mcis/utility.go:149:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"CheckMcis failed; mcisId given is null.\")\n\t\t                  ^\nsrc/core/mcis/utility.go:192:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (golint)\n\t} else {\n\t       ^\nsrc/core/mcis/utility.go:235:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"In TrimIP(), sshAccessPoint does not seem 8.8.8.8:22 form.\")\n\t\t                  ^\nsrc/core/mcis/utility.go:238:2: don't use underscores in Go names; var `port_string` should be `portString` (golint)\n\tport_string := splitted[1]\n\t^\nsrc/core/mcis/utility.go:241:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr := fmt.Errorf(\"In TrimIP(), strconv.Atoi returned an error.\")\n\t\t                  ^\nsrc/core/mcis/utility.go:246:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/core/mcis/utility.go:252:6: type `SpiderNameIdSystemId` should be `SpiderNameIDSystemID` (golint)\ntype SpiderNameIdSystemId struct {\n     ^\nsrc/core/mcis/utility.go:253:2: struct field `NameId` should be `NameID` (golint)\n\tNameId   string\n\t^\nsrc/core/mcis/utility.go:254:2: struct field `SystemId` should be `SystemID` (golint)\n\tSystemId string\n\t^\nsrc/core/mcis/utility.go:278:2: struct field `Id` should be `ID` (golint)\n\tId          string `json:\"id\"`\n\t^\nsrc/core/mcis/utility.go:279:2: struct field `CspNativeId` should be `CspNativeID` (golint)\n\tCspNativeId string `json:\"cspNativeId\"`\n\t^\nsrc/core/mcis/utility.go:283:2: struct field `Id` should be `ID` (golint)\n\tId          string `json:\"id\"`\n\t^\nsrc/core/mcis/utility.go:284:2: struct field `CspNativeId` should be `CspNativeID` (golint)\n\tCspNativeId string `json:\"cspNativeId\"`\n\t^\nsrc/core/mcis/utility.go:285:2: struct field `NsId` should be `NsID` (golint)\n\tNsId        string `json:\"nsId\"`\n\t^\nsrc/core/mcis/utility.go:286:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId      string `json:\"mcisId\"`\n\t^\nsrc/core/mcis/utility.go:320:11: range var `vmId` should be `vmID` (golint)\n\t\t\tfor _, vmId := range vmListInMcis {\n\t\t\t       ^\nsrc/core/mcis/utility.go:347:7: type `JsonTemplate` should be `JSONTemplate` (golint)\n\ttype JsonTemplate struct {\n\t     ^\nsrc/api/rest/server/common/config.go:35:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/api/rest/server/common/config.go:64:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/api/rest/server/common/namespace.go:40:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/common/namespace.go:168:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/api/rest/server/common/namespace.go:211:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\nsrc/api/rest/server/common/utility.go:51:11: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\t\treturn errors.New(fmt.Sprintf(\"[%s]%s\", err.Key, err.Error()))\n\t\t\t       ^\nsrc/api/rest/server/mcis/control.go:26:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:52:6: func RestTestListVmId should be RestTestListVMID (golint)\nfunc RestTestListVmId(c echo.Context) error { // for debug\n     ^\nsrc/api/rest/server/mcis/control.go:53:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:54:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:86:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:87:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:172:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:243:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:244:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:270:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:285:2: don't use underscores in Go names; struct field Vm_recommend should be VMRecommend (golint)\n\tVm_recommend   []mcis.TbVmRecommendInfo `json:\"vm_recommend\"`\n\t^\nsrc/api/rest/server/mcis/control.go:305:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:329:6: type `RestPostCmdMcisVmResponse` should be `RestPostCmdMcisVMResponse` (golint)\ntype RestPostCmdMcisVmResponse struct {\n     ^\nsrc/api/rest/server/mcis/control.go:347:6: func RestPostCmdMcisVm should be RestPostCmdMcisVM (golint)\nfunc RestPostCmdMcisVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/control.go:349:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:350:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:351:2: var `vmId` should be `vmID` (golint)\n\tvmId := c.Param(\"vmId\")\n\t^\nsrc/api/rest/server/mcis/control.go:369:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId string `json:\"mcisId\"`\n\t^\nsrc/api/rest/server/mcis/control.go:370:2: struct field `VmId` should be `VMID` (golint)\n\tVmId   string `json:\"vmId\"`\n\t^\nsrc/api/rest/server/mcis/control.go:371:2: struct field `VmIp` should be `VMIP` (golint)\n\tVmIp   string `json:\"vmIp\"`\n\t^\nsrc/api/rest/server/mcis/control.go:376:2: don't use underscores in Go names; struct field Result_array should be ResultArray (golint)\n\tResult_array []RestPostCmdMcisResponse `json:\"result_array\"`\n\t^\nsrc/api/rest/server/mcis/control.go:394:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:395:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:443:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:444:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:473:6: func RestPostMcisVm should be RestPostMcisVM (golint)\nfunc RestPostMcisVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/control.go:475:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:476:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:507:6: func RestPostMcisVmGroup should be RestPostMcisVMGroup (golint)\nfunc RestPostMcisVmGroup(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/control.go:509:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:510:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:545:6: func RestGetMcisVm should be RestGetMcisVM (golint)\nfunc RestGetMcisVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/control.go:548:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:549:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:550:2: var `vmId` should be `vmID` (golint)\n\tvmId := c.Param(\"vmId\")\n\t^\nsrc/api/rest/server/mcis/control.go:613:6: func RestPutMcisVm should be RestPutMcisVM (golint)\nfunc RestPutMcisVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/control.go:630:6: func RestDelMcisVm should be RestDelMcisVM (golint)\nfunc RestDelMcisVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/control.go:632:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:633:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:634:2: var `vmId` should be `vmID` (golint)\n\tvmId := c.Param(\"vmId\")\n\t^\nsrc/api/rest/server/mcis/control.go:669:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:670:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/control.go:714:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/control.go:715:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/monitor.go:26:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/monitor.go:27:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/monitor.go:58:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/monitor.go:59:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:27:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:28:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:59:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:60:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:96:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:145:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:146:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/orchestration.go:170:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/plan.go:23:6: func RestRecommendVm should be RestRecommendVM (golint)\nfunc RestRecommendVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/plan.go:25:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:13:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:14:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:18:7: type `JsonTemplate` should be `JSONTemplate` (golint)\n\ttype JsonTemplate struct {\n\t     ^\nsrc/api/rest/server/mcis/utility.go:34:6: func RestCheckVm should be RestCheckVM (golint)\nfunc RestCheckVm(c echo.Context) error {\n     ^\nsrc/api/rest/server/mcis/utility.go:36:2: var `nsId` should be `nsID` (golint)\n\tnsId := c.Param(\"nsId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:37:2: var `mcisId` should be `mcisID` (golint)\n\tmcisId := c.Param(\"mcisId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:38:2: var `vmId` should be `vmID` (golint)\n\tvmId := c.Param(\"vmId\")\n\t^\nsrc/api/rest/server/mcis/utility.go:42:7: type `JsonTemplate` should be `JSONTemplate` (golint)\n\ttype JsonTemplate struct {\n\t     ^\nsrc/api/rest/server/server.go:57:6: func ApiServer should be APIServer (golint)\nfunc ApiServer() {\n     ^\nsrc/api/rest/server/server.go:78:2: don't use ALL_CAPS in Go names; use CamelCase (golint)\n\tAPI_USERNAME := os.Getenv(\"API_USERNAME\")\n\t^\nsrc/api/rest/server/server.go:79:2: don't use ALL_CAPS in Go names; use CamelCase (golint)\n\tAPI_PASSWORD := os.Getenv(\"API_PASSWORD\")\n\t^\nsrc/api/grpc/server/mcir/image.go:101:23: method ListImageId should be ListImageID (golint)\nfunc (s *MCIRService) ListImageId(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListIdResponse, error) {\n                      ^\nsrc/api/grpc/server/mcir/mcir.go:8:6: type name will be used as mcir.MCIRService by other packages, and that stutters; consider calling this Service (golint)\ntype MCIRService struct {\n     ^\nsrc/api/grpc/server/mcir/securitygroup.go:70:23: method ListSecurityGroupId should be ListSecurityGroupID (golint)\nfunc (s *MCIRService) ListSecurityGroupId(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListIdResponse, error) {\n                      ^\nsrc/api/grpc/server/mcir/spec.go:101:23: method ListSpecId should be ListSpecID (golint)\nfunc (s *MCIRService) ListSpecId(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListIdResponse, error) {\n                      ^\nsrc/api/grpc/server/mcir/spec.go:106:2: var `resourceIdList` should be `resourceIDList` (golint)\n\tresourceIdList, err := mcir.ListResourceId(req.NsId, req.ResourceType)\n\t^\nsrc/api/grpc/server/mcir/sshkey.go:20:23: method CreateSshKey should be CreateSSHKey (golint)\nfunc (s *MCIRService) CreateSshKey(ctx context.Context, req *pb.TbSshKeyCreateRequest) (*pb.TbSshKeyInfoResponse, error) {\n                      ^\nsrc/api/grpc/server/mcir/sshkey.go:49:23: method ListSshKey should be ListSSHKey (golint)\nfunc (s *MCIRService) ListSshKey(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListTbSshKeyInfoResponse, error) {\n                      ^\nsrc/api/grpc/server/mcir/sshkey.go:71:23: method ListSshKeyId should be ListSSHKeyID (golint)\nfunc (s *MCIRService) ListSshKeyId(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListIdResponse, error) {\n                      ^\nsrc/api/grpc/server/mcir/sshkey.go:93:23: method GetSshKey should be GetSSHKey (golint)\nfunc (s *MCIRService) GetSshKey(ctx context.Context, req *pb.ResourceQryRequest) (*pb.TbSshKeyInfoResponse, error) {\n                      ^\nsrc/api/grpc/server/mcir/sshkey.go:115:23: method DeleteSshKey should be DeleteSSHKey (golint)\nfunc (s *MCIRService) DeleteSshKey(ctx context.Context, req *pb.ResourceQryRequest) (*pb.MessageResponse, error) {\n                      ^\nsrc/api/grpc/server/mcir/sshkey.go:130:23: method DeleteAllSshKey should be DeleteAllSSHKey (golint)\nfunc (s *MCIRService) DeleteAllSshKey(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.MessageResponse, error) {\n                      ^\nsrc/api/grpc/server/mcir/vnet.go:71:23: method ListVNetId should be ListVNetID (golint)\nfunc (s *MCIRService) ListVNetId(ctx context.Context, req *pb.ResourceAllQryRequest) (*pb.ListIdResponse, error) {\n                      ^\nsrc/api/grpc/request/mcir/image.go:99:23: method ListImageId should be ListImageID (golint)\nfunc (r *MCIRRequest) ListImageId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/mcir.go:14:6: type name will be used as mcir.MCIRRequest by other packages, and that stutters; consider calling this Request (golint)\ntype MCIRRequest struct {\n     ^\nsrc/api/grpc/request/mcir/securitygroup.go:72:23: method ListSecurityGroupId should be ListSecurityGroupID (golint)\nfunc (r *MCIRRequest) ListSecurityGroupId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/spec.go:99:23: method ListSpecId should be ListSpecID (golint)\nfunc (r *MCIRRequest) ListSpecId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:18:23: method CreateSshKey should be CreateSSHKey (golint)\nfunc (r *MCIRRequest) CreateSshKey() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:45:23: method ListSshKey should be ListSSHKey (golint)\nfunc (r *MCIRRequest) ListSshKey() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:72:23: method ListSshKeyId should be ListSSHKeyID (golint)\nfunc (r *MCIRRequest) ListSshKeyId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:99:23: method GetSshKey should be GetSSHKey (golint)\nfunc (r *MCIRRequest) GetSshKey() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:126:23: method DeleteSshKey should be DeleteSSHKey (golint)\nfunc (r *MCIRRequest) DeleteSshKey() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/sshkey.go:153:23: method DeleteAllSshKey should be DeleteAllSSHKey (golint)\nfunc (r *MCIRRequest) DeleteAllSshKey() (string, error) {\n                      ^\nsrc/api/grpc/request/mcir/vnet.go:72:23: method ListVNetId should be ListVNetID (golint)\nfunc (r *MCIRRequest) ListVNetId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcis/control.go:72:23: method ListMcisId should be ListMcisID (golint)\nfunc (r *MCISRequest) ListMcisId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcis/control.go:207:23: method ListMcisVmId should be ListMcisVMID (golint)\nfunc (r *MCISRequest) ListMcisVmId() (string, error) {\n                      ^\nsrc/api/grpc/request/mcis/control.go:504:23: method CmdMcisVm should be CmdMcisVM (golint)\nfunc (r *MCISRequest) CmdMcisVm() (string, error) {\n                      ^\nsrc/api/grpc/request/mcis/mcis.go:14:6: type name will be used as mcis.MCISRequest by other packages, and that stutters; consider calling this Request (golint)\ntype MCISRequest struct {\n     ^\nsrc/api/grpc/request/mcis/utility.go:45:23: method CheckVm should be CheckVM (golint)\nfunc (r *MCISRequest) CheckVm() (string, error) {\n                      ^\nsrc/api/grpc/server/mcis/control.go:72:23: method ListMcisId should be ListMcisID (golint)\nfunc (s *MCISService) ListMcisId(ctx context.Context, req *pb.TbMcisAllQryRequest) (*pb.ListIdResponse, error) {\n                      ^\nsrc/api/grpc/server/mcis/control.go:175:23: method ListMcisVmId should be ListMcisVMID (golint)\nfunc (s *MCISService) ListMcisVmId(ctx context.Context, req *pb.TbMcisQryRequest) (*pb.ListIdResponse, error) {\n                      ^\nsrc/api/grpc/server/mcis/control.go:426:23: method CmdMcisVm should be CmdMcisVM (golint)\nfunc (s *MCISService) CmdMcisVm(ctx context.Context, req *pb.McisCmdVmCreateRequest) (*pb.StringResponse, error) {\n                      ^\nsrc/api/grpc/server/mcis/mcis.go:8:6: type name will be used as mcis.MCISService by other packages, and that stutters; consider calling this Service (golint)\ntype MCISService struct {\n     ^\nsrc/api/grpc/server/mcis/utility.go:34:23: method CheckVm should be CheckVM (golint)\nfunc (s *MCISService) CheckVm(ctx context.Context, req *pb.TbVmQryRequest) (*pb.ExistsResponse, error) {\n                      ^\nsrc/api/grpc/request/common/utility.go:132:26: method InspectVmResources should be InspectVMResources (golint)\nfunc (r *UtilityRequest) InspectVmResources() (string, error) {\n                         ^\nsrc/api/grpc/server/common/utility.go:129:26: method InspectVmResources should be InspectVMResources (golint)\nfunc (s *UtilityService) InspectVmResources(ctx context.Context, req *pb.InspectQryRequest) (*pb.InspectVmInfoResponse, error) {\n                         ^\nsrc/api/grpc/request/mcirapi.go:41:2: struct field `NameId` should be `NameID` (golint)\n\tNameId   string `yaml:\"NameId\" json:\"NameId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:42:2: struct field `SystemId` should be `SystemID` (golint)\n\tSystemId string `yaml:\"SystemId\" json:\"SystemId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:47:2: struct field `NsId` should be `NsID` (golint)\n\tNsId string     `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:55:2: struct field `CspImageId` should be `CspImageID` (golint)\n\tCspImageId     string `yaml:\"cspImageId\" json:\"cspImageId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:61:2: struct field `NsId` should be `NsID` (golint)\n\tNsId string      `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:67:2: struct field `Id` should be `ID` (golint)\n\tId                   string     `yaml:\"id\" json:\"id\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:70:2: struct field `CspImageId` should be `CspImageID` (golint)\n\tCspImageId           string     `yaml:\"cspImageId\" json:\"cspImageId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:83:2: struct field `NsId` should be `NsID` (golint)\n\tNsId     string   `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:89:2: struct field `NsId` should be `NsID` (golint)\n\tNsId string             `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:97:2: struct field `VNetId` should be `VNetID` (golint)\n\tVNetId         string                    `yaml:\"vNetId\" json:\"vNetId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:113:2: struct field `NsId` should be `NsID` (golint)\n\tNsId string    `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:127:2: struct field `NsId` should be `NsID` (golint)\n\tNsId string     `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:133:2: struct field `Id` should be `ID` (golint)\n\tId                    string   `yaml:\"id\" json:\"id\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:137:2: don't use underscores in Go names; struct field Os_type should be OsType (golint)\n\tOs_type               string   `yaml:\"os_type\" json:\"os_type\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:138:2: don't use underscores in Go names; struct field Num_vCPU should be NumVCPU (golint)\n\tNum_vCPU              uint16   `yaml:\"num_vCPU\" json:\"num_vCPU\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:139:2: don't use underscores in Go names; struct field Num_core should be NumCore (golint)\n\tNum_core              uint16   `yaml:\"num_core\" json:\"num_core\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:140:2: don't use underscores in Go names; struct field Mem_GiB should be MemGiB (golint)\n\tMem_GiB               uint16   `yaml:\"mem_GiB\" json:\"mem_GiB\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:141:2: don't use underscores in Go names; struct field Storage_GiB should be StorageGiB (golint)\n\tStorage_GiB           uint32   `yaml:\"storage_GiB\" json:\"storage_GiB\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:143:2: don't use underscores in Go names; struct field Cost_per_hour should be CostPerHour (golint)\n\tCost_per_hour         float32  `yaml:\"cost_per_hour\" json:\"cost_per_hour\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:144:2: don't use underscores in Go names; struct field Num_storage should be NumStorage (golint)\n\tNum_storage           uint8    `yaml:\"num_storage\" json:\"num_storage\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:145:2: don't use underscores in Go names; struct field Max_num_storage should be MaxNumStorage (golint)\n\tMax_num_storage       uint8    `yaml:\"max_num_storage\" json:\"max_num_storage\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:146:2: don't use underscores in Go names; struct field Max_total_storage_TiB should be MaxTotalStorageTiB (golint)\n\tMax_total_storage_TiB uint16   `yaml:\"max_total_storage_TiB\" json:\"max_total_storage_TiB\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:147:2: don't use underscores in Go names; struct field Net_bw_Gbps should be NetBwGbps (golint)\n\tNet_bw_Gbps           uint16   `yaml:\"net_bw_Gbps\" json:\"net_bw_Gbps\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:148:2: don't use underscores in Go names; struct field Ebs_bw_Mbps should be EbsBwMbps (golint)\n\tEbs_bw_Mbps           uint32   `yaml:\"ebs_bw_Mbps\" json:\"ebs_bw_Mbps\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:149:2: don't use underscores in Go names; struct field Gpu_model should be GpuModel (golint)\n\tGpu_model             string   `yaml:\"gpu_model\" json:\"gpu_model\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:150:2: don't use underscores in Go names; struct field Num_gpu should be NumGpu (golint)\n\tNum_gpu               uint8    `yaml:\"num_gpu\" json:\"num_gpu\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:151:2: don't use underscores in Go names; struct field Gpumem_GiB should be GpumemGiB (golint)\n\tGpumem_GiB            uint16   `yaml:\"gpumem_GiB\" json:\"gpumem_GiB\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:152:2: don't use underscores in Go names; struct field Gpu_p2p should be GpuP2p (golint)\n\tGpu_p2p               string   `yaml:\"gpu_p2p\" json:\"gpu_p2p\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:155:2: don't use underscores in Go names; struct field EvaluationScore_01 should be EvaluationScore01 (golint)\n\tEvaluationScore_01    float32  `yaml:\"evaluationScore_01\" json:\"evaluationScore_01\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:156:2: don't use underscores in Go names; struct field EvaluationScore_02 should be EvaluationScore02 (golint)\n\tEvaluationScore_02    float32  `yaml:\"evaluationScore_02\" json:\"evaluationScore_02\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:157:2: don't use underscores in Go names; struct field EvaluationScore_03 should be EvaluationScore03 (golint)\n\tEvaluationScore_03    float32  `yaml:\"evaluationScore_03\" json:\"evaluationScore_03\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:158:2: don't use underscores in Go names; struct field EvaluationScore_04 should be EvaluationScore04 (golint)\n\tEvaluationScore_04    float32  `yaml:\"evaluationScore_04\" json:\"evaluationScore_04\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:159:2: don't use underscores in Go names; struct field EvaluationScore_05 should be EvaluationScore05 (golint)\n\tEvaluationScore_05    float32  `yaml:\"evaluationScore_05\" json:\"evaluationScore_05\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:160:2: don't use underscores in Go names; struct field EvaluationScore_06 should be EvaluationScore06 (golint)\n\tEvaluationScore_06    float32  `yaml:\"evaluationScore_06\" json:\"evaluationScore_06\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:161:2: don't use underscores in Go names; struct field EvaluationScore_07 should be EvaluationScore07 (golint)\n\tEvaluationScore_07    float32  `yaml:\"evaluationScore_07\" json:\"evaluationScore_07\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:162:2: don't use underscores in Go names; struct field EvaluationScore_08 should be EvaluationScore08 (golint)\n\tEvaluationScore_08    float32  `yaml:\"evaluationScore_08\" json:\"evaluationScore_08\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:163:2: don't use underscores in Go names; struct field EvaluationScore_09 should be EvaluationScore09 (golint)\n\tEvaluationScore_09    float32  `yaml:\"evaluationScore_09\" json:\"evaluationScore_09\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:164:2: don't use underscores in Go names; struct field EvaluationScore_10 should be EvaluationScore10 (golint)\n\tEvaluationScore_10    float32  `yaml:\"evaluationScore_10\" json:\"evaluationScore_10\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:170:6: type `TbSshKeyCreateRequest` should be `TbSSHKeyCreateRequest` (golint)\ntype TbSshKeyCreateRequest struct {\n     ^\nsrc/api/grpc/request/mcirapi.go:171:2: struct field `NsId` should be `NsID` (golint)\n\tNsId string      `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:176:6: type `TbSshKeyReq` should be `TbSSHKeyReq` (golint)\ntype TbSshKeyReq struct {\n     ^\nsrc/api/grpc/request/mcirapi.go:184:2: struct field `NsId` should be `NsID` (golint)\n\tNsId string    `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:200:2: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (golint)\n\tIPv4_CIDR    string     `yaml:\"IPv4_CIDR\" json:\"IPv4_CIDR\"`\n\t^\nsrc/api/grpc/request/mcirapi.go:517:19: method ListImageId should be ListImageID (golint)\nfunc (m *MCIRApi) ListImageId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:527:19: method ListImageIdByParam should be ListImageIDByParam (golint)\nfunc (m *MCIRApi) ListImageIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:706:64: method parameter `cspImageId` should be `cspImageID` (golint)\nfunc (m *MCIRApi) GetLookupImageByParam(connConfigName string, cspImageId string) (string, error) {\n                                                               ^\nsrc/api/grpc/request/mcirapi.go:775:19: method ListSecurityGroupId should be ListSecurityGroupID (golint)\nfunc (m *MCIRApi) ListSecurityGroupId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:785:19: method ListSecurityGroupIdByParam should be ListSecurityGroupIDByParam (golint)\nfunc (m *MCIRApi) ListSecurityGroupIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:958:19: method ListSpecId should be ListSpecID (golint)\nfunc (m *MCIRApi) ListSpecId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:968:19: method ListSpecIdByParam should be ListSpecIDByParam (golint)\nfunc (m *MCIRApi) ListSpecIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1173:19: method CreateSshKey should be CreateSSHKey (golint)\nfunc (m *MCIRApi) CreateSshKey(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1183:19: method CreateSshKeyByParam should be CreateSSHKeyByParam (golint)\nfunc (m *MCIRApi) CreateSshKeyByParam(req *TbSshKeyCreateRequest) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1202:19: method ListSshKey should be ListSSHKey (golint)\nfunc (m *MCIRApi) ListSshKey(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1212:19: method ListSshKeyByParam should be ListSSHKeyByParam (golint)\nfunc (m *MCIRApi) ListSshKeyByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1227:19: method ListSshKeyId should be ListSSHKeyID (golint)\nfunc (m *MCIRApi) ListSshKeyId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1237:19: method ListSshKeyIdByParam should be ListSSHKeyIDByParam (golint)\nfunc (m *MCIRApi) ListSshKeyIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1252:19: method GetSshKey should be GetSSHKey (golint)\nfunc (m *MCIRApi) GetSshKey(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1262:19: method GetSshKeyByParam should be GetSSHKeyByParam (golint)\nfunc (m *MCIRApi) GetSshKeyByParam(nameSpaceID string, resourceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1277:19: method DeleteSshKey should be DeleteSSHKey (golint)\nfunc (m *MCIRApi) DeleteSshKey(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1287:19: method DeleteSshKeyByParam should be DeleteSSHKeyByParam (golint)\nfunc (m *MCIRApi) DeleteSshKeyByParam(nameSpaceID string, resourceID string, force string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1302:19: method DeleteAllSshKey should be DeleteAllSSHKey (golint)\nfunc (m *MCIRApi) DeleteAllSshKey(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1312:19: method DeleteAllSshKeyByParam should be DeleteAllSSHKeyByParam (golint)\nfunc (m *MCIRApi) DeleteAllSshKeyByParam(nameSpaceID string, force string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1381:19: method ListVNetId should be ListVNetID (golint)\nfunc (m *MCIRApi) ListVNetId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcirapi.go:1391:19: method ListVNetIdByParam should be ListVNetIDByParam (golint)\nfunc (m *MCIRApi) ListVNetIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:35:2: struct field `NsId` should be `NsID` (golint)\n\tNsId string    `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:46:2: struct field `Vm` should be `VM` (golint)\n\tVm              []TbVmReq `yaml:\"vm\" json:\"vm\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:50:6: type `TbVmReq` should be `TbVMReq` (golint)\ntype TbVmReq struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:52:2: struct field `VmGroupSize` should be `VMGroupSize` (golint)\n\tVmGroupSize      string   `yaml:\"vmGroupSize\" json:\"vmGroupSize\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:56:2: struct field `SpecId` should be `SpecID` (golint)\n\tSpecId           string   `yaml:\"specId\" json:\"specId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:57:2: struct field `ImageId` should be `ImageID` (golint)\n\tImageId          string   `yaml:\"imageId\" json:\"imageId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:58:2: struct field `VNetId` should be `VNetID` (golint)\n\tVNetId           string   `yaml:\"vNetId\" json:\"vNetId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:59:2: struct field `SubnetId` should be `SubnetID` (golint)\n\tSubnetId         string   `yaml:\"subnetId\" json:\"subnetId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:61:2: struct field `SshKeyId` should be `SSHKeyID` (golint)\n\tSshKeyId         string   `yaml:\"sshKeyId\" json:\"sshKeyId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:62:2: struct field `VmUserAccount` should be `VMUserAccount` (golint)\n\tVmUserAccount    string   `yaml:\"vmUserAccount\" json:\"vmUserAccount\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:63:2: struct field `VmUserPassword` should be `VMUserPassword` (golint)\n\tVmUserPassword   string   `yaml:\"vmUserPassword\" json:\"vmUserPassword\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:67:6: type `TbVmCreateRequest` should be `TbVMCreateRequest` (golint)\ntype TbVmCreateRequest struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:68:2: struct field `NsId` should be `NsID` (golint)\n\tNsId   string   `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:69:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId string   `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:74:6: type `TbVmGroupCreateRequest` should be `TbVMGroupCreateRequest` (golint)\ntype TbVmGroupCreateRequest struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:75:2: struct field `NsId` should be `NsID` (golint)\n\tNsId   string  `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:76:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId string  `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:81:6: type `TbVmInfo` should be `TbVMInfo` (golint)\ntype TbVmInfo struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:82:2: struct field `Id` should be `ID` (golint)\n\tId               string      `yaml:\"id\" json:\"id\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:84:2: struct field `VmGroupId` should be `VMGroupID` (golint)\n\tVmGroupId        string      `yaml:\"vmGroupId\" json:\"vmGroupId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:103:2: struct field `SpecId` should be `SpecID` (golint)\n\tSpecId           string      `yaml:\"specId\" json:\"specId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:104:2: struct field `ImageId` should be `ImageID` (golint)\n\tImageId          string      `yaml:\"imageId\" json:\"imageId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:105:2: struct field `VNetId` should be `VNetID` (golint)\n\tVNetId           string      `yaml:\"vNetId\" json:\"vNetId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:106:2: struct field `SubnetId` should be `SubnetID` (golint)\n\tSubnetId         string      `yaml:\"subnetId\" json:\"subnetId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:108:2: struct field `SshKeyId` should be `SSHKeyID` (golint)\n\tSshKeyId         string      `yaml:\"sshKeyId\" json:\"sshKeyId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:109:2: struct field `VmUserAccount` should be `VMUserAccount` (golint)\n\tVmUserAccount    string      `yaml:\"vmUserAccount\" json:\"vmUserAccount\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:110:2: struct field `VmUserPassword` should be `VMUserPassword` (golint)\n\tVmUserPassword   string      `yaml:\"vmUserPassword\" json:\"vmUserPassword\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:143:2: struct field `VMUserId` should be `VMUserID` (golint)\n\tVMUserId     string `yaml:\"VMUserId\" json:\"VMUserId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:168:2: struct field `NsId` should be `NsID` (golint)\n\tNsId string           `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:174:2: struct field `VmReq` should be `VMReq` (golint)\n\tVmReq          []TbVmRecommendReq `yaml:\"vmReq\" json:\"vmReq\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:181:6: type `TbVmRecommendReq` should be `TbVMRecommendReq` (golint)\ntype TbVmRecommendReq struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:195:2: struct field `NsId` should be `NsID` (golint)\n\tNsId   string     `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:196:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId string     `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:202:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId   string `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:203:2: struct field `VmId` should be `VMID` (golint)\n\tVmId     string `yaml:\"vmId\" json:\"vmId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:204:2: struct field `Ip` should be `IP` (golint)\n\tIp       string `yaml:\"ip\" json:\"ip\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:206:2: struct field `SshKey` should be `SSHKey` (golint)\n\tSshKey   string `yaml:\"sshKey\" json:\"sshKey\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:211:6: type `McisCmdVmCreateRequest` should be `McisCmdVMCreateRequest` (golint)\ntype McisCmdVmCreateRequest struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:212:2: struct field `NsId` should be `NsID` (golint)\n\tNsId   string     `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:213:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId string     `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:214:2: struct field `VmId` should be `VMID` (golint)\n\tVmId   string     `yaml:\"vmId\" json:\"vmId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:220:2: struct field `NsId` should be `NsID` (golint)\n\tNsId   string         `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:221:2: struct field `McisId` should be `McisID` (golint)\n\tMcisId string         `yaml:\"mcisId\" json:\"mcisId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:237:2: struct field `Vm` should be `VM` (golint)\n\tVm            TbVmInfo   `yaml:\"vm\" json:\"vm\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:252:2: struct field `Id` should be `ID` (golint)\n\tId     string   `yaml:\"Id\" json:\"Id\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:260:6: type `McisRecommendVmCreateRequest` should be `McisRecommendVMCreateRequest` (golint)\ntype McisRecommendVmCreateRequest struct {\n     ^\nsrc/api/grpc/request/mcisapi.go:261:2: struct field `NsId` should be `NsID` (golint)\n\tNsId string         `yaml:\"nsId\" json:\"nsId\"`\n\t^\nsrc/api/grpc/request/mcisapi.go:591:19: method ListMcisId should be ListMcisID (golint)\nfunc (m *MCISApi) ListMcisId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:601:19: method ListMcisIdByParam should be ListMcisIDByParam (golint)\nfunc (m *MCISApi) ListMcisIdByParam(nameSpaceID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:716:19: method ListMcisVmId should be ListMcisVMID (golint)\nfunc (m *MCISApi) ListMcisVmId(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:726:19: method ListMcisVmIdByParam should be ListMcisVMIDByParam (golint)\nfunc (m *MCISApi) ListMcisVmIdByParam(nameSpaceID string, mcisID string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:1036:19: method CmdMcisVm should be CmdMcisVM (golint)\nfunc (m *MCISApi) CmdMcisVm(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:1046:19: method CmdMcisVmByParam should be CmdMcisVMByParam (golint)\nfunc (m *MCISApi) CmdMcisVmByParam(req *McisCmdVmCreateRequest) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:1223:19: method CheckVm should be CheckVM (golint)\nfunc (m *MCISApi) CheckVm(doc string) (string, error) {\n                  ^\nsrc/api/grpc/request/mcisapi.go:1233:19: method CheckVmByParam should be CheckVMByParam (golint)\nfunc (m *MCISApi) CheckVmByParam(nameSpaceID string, mcisID string, vmID string) (string, error) {\n                  ^\nsrc/api/grpc/request/tbutilapi.go:23:6: type `UtilityApi` should be `UtilityAPI` (golint)\ntype UtilityApi struct {\n     ^\nsrc/api/grpc/request/tbutilapi.go:385:39: method parameter `configId` should be `configID` (golint)\nfunc (u *UtilityApi) GetConfigByParam(configId string) (string, error) {\n                                      ^\nsrc/api/grpc/request/tbutilapi.go:410:40: method parameter `configId` should be `configID` (golint)\nfunc (u *UtilityApi) InitConfigByParam(configId string) (string, error) {\n                                       ^\nsrc/api/grpc/request/tbutilapi.go:459:22: method InspectVmResources should be InspectVMResources (golint)\nfunc (u *UtilityApi) InspectVmResources(doc string) (string, error) {\n                     ^\nsrc/api/grpc/request/tbutilapi.go:469:22: method InspectVmResourcesByParam should be InspectVMResourcesByParam (golint)\nfunc (u *UtilityApi) InspectVmResourcesByParam(connectionName string) (string, error) {\n                     ^\nsrc/api/grpc/cbadm/proc/keypair.go:20:6: func SaveSshKey should be SaveSSHKey (golint)\nfunc SaveSshKey(mcir *tb_api.MCIRApi, nameSpaceID string, resourceID string, sshSaveFileName string) (string, error) {\n     ^\nsrc/api/grpc/cbadm/proc/mcis.go:15:2: struct field `Id` should be `ID` (golint)\n\tId   string   `yaml:\"id\" json:\"id\"`\n\t^\nsrc/api/grpc/cbadm/proc/mcis.go:17:2: struct field `Vm` should be `VM` (golint)\n\tVm   []string `yaml:\"vm\" json:\"vm\"`\n\t^\nsrc/api/grpc/request/test/test_api.go:537:2: var `reqTbSshKey` should be `reqTbSSHKey` (golint)\n\treqTbSshKey := &tb_api.TbSshKeyCreateRequest{\n\t^\nsrc/api/grpc/cbadm/cmd/image.go:72:6: func NewImageCreateWithIdCmd should be NewImageCreateWithIDCmd (golint)\nfunc NewImageCreateWithIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/image.go:74:2: var `createWithIdCmd` should be `createWithIDCmd` (golint)\n\tcreateWithIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/image.go:123:6: func NewImageListIdCmd should be NewImageListIDCmd (golint)\nfunc NewImageListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/image.go:125:2: var `listIdCmd` should be `listIDCmd` (golint)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/keypair.go:92:6: func NewKeypairListIdCmd should be NewKeypairListIDCmd (golint)\nfunc NewKeypairListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/keypair.go:94:2: var `listIdCmd` should be `listIDCmd` (golint)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/mcis.go:129:6: func NewMcisListIdCmd should be NewMcisListIDCmd (golint)\nfunc NewMcisListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:131:2: var `listIdCmd` should be `listIDCmd` (golint)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/mcis.go:411:6: func NewMcisVmAddCmd should be NewMcisVMAddCmd (golint)\nfunc NewMcisVmAddCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:438:6: func NewMcisVmGroupCmd should be NewMcisVMGroupCmd (golint)\nfunc NewMcisVmGroupCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:465:6: func NewMcisVmListCmd should be NewMcisVMListCmd (golint)\nfunc NewMcisVmListCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:495:6: func NewMcisVmListIdCmd should be NewMcisVMListIDCmd (golint)\nfunc NewMcisVmListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:497:2: var `vmListIdCmd` should be `vmListIDCmd` (golint)\n\tvmListIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/mcis.go:525:6: func NewMcisVmGetCmd should be NewMcisVMGetCmd (golint)\nfunc NewMcisVmGetCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:561:6: func NewMcisVmDeleteCmd should be NewMcisVMDeleteCmd (golint)\nfunc NewMcisVmDeleteCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:597:6: func NewMcisVmStatusCmd should be NewMcisVMStatusCmd (golint)\nfunc NewMcisVmStatusCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:633:6: func NewMcisVmSuspendCmd should be NewMcisVMSuspendCmd (golint)\nfunc NewMcisVmSuspendCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:669:6: func NewMcisVmResumeCmd should be NewMcisVMResumeCmd (golint)\nfunc NewMcisVmResumeCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:705:6: func NewMcisVmRebootCmd should be NewMcisVMRebootCmd (golint)\nfunc NewMcisVmRebootCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:741:6: func NewMcisVmTerminateCmd should be NewMcisVMTerminateCmd (golint)\nfunc NewMcisVmTerminateCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:804:6: func NewMcisRecommendVmCmd should be NewMcisRecommendVMCmd (golint)\nfunc NewMcisRecommendVmCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:806:2: var `recommendVmCmd` should be `recommendVMCmd` (golint)\n\trecommendVmCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/mcis.go:858:6: func NewCmdMcisVmCmd should be NewCmdMcisVMCmd (golint)\nfunc NewCmdMcisVmCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:912:6: func NewAccessVmCmd should be NewAccessVMCmd (golint)\nfunc NewAccessVmCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/mcis.go:914:2: var `accessVmCmd` should be `accessVMCmd` (golint)\n\taccessVmCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/namespace.go:84:6: func NewNameSpaceListIdCmd should be NewNameSpaceListIDCmd (golint)\nfunc NewNameSpaceListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/namespace.go:86:2: var `listIdCmd` should be `listIDCmd` (golint)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/network.go:92:6: func NewNetworkListIdCmd should be NewNetworkListIDCmd (golint)\nfunc NewNetworkListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/network.go:94:2: var `listIdCmd` should be `listIDCmd` (golint)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/root.go:40:2: var `cspImageId` should be `cspImageID` (golint)\n\tcspImageId   string\n\t^\nsrc/api/grpc/cbadm/cmd/root.go:45:2: var `configId` should be `configID` (golint)\n\tconfigId string\n\t^\nsrc/api/grpc/cbadm/cmd/securitygroup.go:92:6: func NewSecurityListIdCmd should be NewSecurityListIDCmd (golint)\nfunc NewSecurityListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/securitygroup.go:94:2: var `listIdCmd` should be `listIDCmd` (golint)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/spec.go:75:6: func NewSpecWithIdCreateCmd should be NewSpecWithIDCreateCmd (golint)\nfunc NewSpecWithIdCreateCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/spec.go:77:2: var `createWithIdCmd` should be `createWithIDCmd` (golint)\n\tcreateWithIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/spec.go:126:6: func NewSpecListIdCmd should be NewSpecListIDCmd (golint)\nfunc NewSpecListIdCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/spec.go:128:2: var `listIdCmd` should be `listIDCmd` (golint)\n\tlistIdCmd := &cobra.Command{\n\t^\nsrc/api/grpc/cbadm/cmd/tbutil.go:155:6: func NewVmResourcesInspectCmd should be NewVMResourcesInspectCmd (golint)\nfunc NewVmResourcesInspectCmd() *cobra.Command {\n     ^\nsrc/api/grpc/cbadm/cmd/tbutil.go:157:2: var `inspectVmCmd` should be `inspectVMCmd` (golint)\n\tinspectVmCmd := &cobra.Command{\n\t^\n"},"ineffassign":{"run":1,"cnt":20,"details":"src/api/grpc/common/cbconnection.go:40:3: ineffectual assignment to tracer (ineffassign)\n\t\ttracer opentracing.Tracer = nil\n\t\t^\nsrc/api/grpc/common/cbserver.go:49:3: ineffectual assignment to tracer (ineffassign)\n\t\ttracer      opentracing.Tracer             = nil\n\t\t^\nsrc/api/grpc/request/test/test_api.go:163:2: ineffectual assignment to result (ineffassign)\n\tresult, err := ns.CreateNS(doc)\n\t^\nsrc/core/mcis/control.go:708:2: ineffectual assignment to option (ineffassign)\n\toption := \"localhost\"\n\t^\nsrc/core/mcis/control.go:719:12: ineffectual assignment to err (ineffassign)\n\t\tcontent, err = BenchmarkAction(nsId, mcisId, v, option)\n\t\t         ^\nsrc/core/mcis/control.go:758:8: ineffectual assignment to err (ineffassign)\n\tfile, err := os.OpenFile(\"benchmarking.csv\", os.O_CREATE|os.O_WRONLY, 0777)\n\t      ^\nsrc/core/mcis/control.go:761:2: ineffectual assignment to strsTmp (ineffassign)\n\tstrsTmp := []string{}\n\t^\nsrc/core/mcis/control.go:779:9: ineffectual assignment to err (ineffassign)\n\tfile2, err := os.OpenFile(\"rttmap.csv\", os.O_CREATE|os.O_WRONLY, 0777)\n\t       ^\nsrc/core/mcis/control.go:865:2: ineffectual assignment to option (ineffassign)\n\toption := \"localhost\"\n\t^\nsrc/core/mcis/control.go:2912:3: ineffectual assignment to err (ineffassign)\n\t\terr = fmt.Errorf(\"\")\n\t\t^\nsrc/core/mcis/control.go:3391:14: ineffectual assignment to err (ineffassign)\n\t\t\t\t\tresult, err = ccm.TerminateVMByParam(temp.ConnectionName, cspVmId, \"false\")\n\t\t\t\t\t        ^\nsrc/core/mcis/control.go:3401:14: ineffectual assignment to err (ineffassign)\n\t\t\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"reboot\")\n\t\t\t\t\t        ^\nsrc/core/mcis/control.go:3411:14: ineffectual assignment to err (ineffassign)\n\t\t\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"suspend\")\n\t\t\t\t\t        ^\nsrc/core/mcis/control.go:3421:14: ineffectual assignment to err (ineffassign)\n\t\t\t\t\tresult, err = ccm.ControlVMByParam(temp.ConnectionName, cspVmId, \"resume\")\n\t\t\t\t\t        ^\nsrc/core/mcis/control.go:3565:8: ineffectual assignment to err (ineffassign)\n\t\tres, err := client.Do(req)\n\t\t     ^\nsrc/core/mcis/control.go:3568:9: ineffectual assignment to err (ineffassign)\n\t\tbody, err := ioutil.ReadAll(res.Body)\n\t\t      ^\nsrc/core/mcis/control.go:4258:9: ineffectual assignment to err (ineffassign)\n\t\tbody, err := ioutil.ReadAll(res.Body)\n\t\t      ^\nsrc/core/mcis/plan.go:150:19: ineffectual assignment to err (ineffassign)\n\t\t\tprioritySpecs, err = RecommendVmLocation(nsId, &filteredSpecs, &v.Parameter)\n\t\t\t               ^\nsrc/core/mcis/sshrun.go:100:10: ineffectual assignment to err (ineffassign)\n\tsshOut, err := session.StdoutPipe()\n\t        ^\nsrc/core/common/utility.go:586:2: ineffectual assignment to j (ineffassign)\n\tj, err = json.MarshalIndent(dest, \"\", \"  \")\n\t^\n"},"misspell":{"run":1,"cnt":4,"details":"src/core/mcis/control.go:113:43: `flavour` is a misspelling of `flavor` (misspell)\n\tVMSpecName   string //  instance type or flavour, etc... ex) t2.micro or f1.micro\n\t                                         ^\nsrc/core/mcis/control.go:219:5: `Montoring` is a misspelling of `Monitoring` (misspell)\n\t// Montoring agent status\n\t   ^\nsrc/core/mcis/control.go:292:5: `Montoring` is a misspelling of `Monitoring` (misspell)\n\t// Montoring agent status\n\t   ^\nsrc/core/mcis/control.go:4578:53: `flavour` is a misspelling of `flavor` (misspell)\n\tVMSpecId         string   // AWS, instance type or flavour, etc... ex) t2.micro or f1.micro\n\t                                                   ^\n"}},"test":{"unit":{"run":0,"check":0,"details":"","allCnt":0,"failCnt":0},"coverage":{"run":0,"check":0,"details":"","total":"-"}},"gobuild":{"run":1,"check":0,"details":"./cb-artifact-gobuild-1.16/build.log\n\nGolang 1.16 Build Success !!!\n\ngo: downloading github.com/mattn/go-sqlite3 v2.0.3+incompatible go: downloading xorm.io/xorm v1.1.2 go: downloading google.golang.org/grpc v1.26.0 go: downloading github.com/labstack/echo/v4 v4.3.0 go: downloading github.com/swaggo/echo-swagger v1.1.0 go: downloading github.com/cloud-barista/cb-spider v0.4.5 go: downloading github.com/cloud-barista/cb-store v0.4.1 go: downloading github.com/go-resty/resty/v2 v2.6.0 go: downloading github.com/google/uuid v1.3.0 go: downloading github.com/sirupsen/logrus v1.8.1 go: downloading gopkg.in/yaml.v2 v2.4.0 go: downloading github.com/go-sql-driver/mysql v1.6.0 go: downloading github.com/tidwall/gjson v1.8.0 go: downloading github.com/tidwall/sjson v1.1.7 go: downloading github.com/bramvdbogaerde/go-scp v1.0.0 go: downloading golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97 go: downloading xorm.io/builder v0.3.8 go: downloading github.com/grpc-ecosystem/go-grpc-middleware v1.3.0 go: downloading github.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 go: downloading github.com/opentracing/opentracing-go v1.2.0 go: downloading github.com/prometheus/client_golang v1.11.0 go: downloading github.com/spf13/viper v1.8.1 go: downloading github.com/cloud-barista/cb-log v0.4.0 go: downloading github.com/golang/protobuf v1.5.2 go: downloading github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751 go: downloading github.com/swaggo/swag v1.7.0 go: downloading github.com/beego/beego/v2 v2.0.1 go: downloading github.com/labstack/gommon v0.3.0 go: downloading golang.org/x/net v0.0.0-20210716203947-853a461950ff go: downloading github.com/dgrijalva/jwt-go v3.2.0+incompatible go: downloading github.com/valyala/fasttemplate v1.2.1 go: downloading golang.org/x/time v0.0.0-20210611083556-38a9dc6acbc6 go: downloading github.com/swaggo/files v0.0.0-20190704085106-630677cd5c14 go: downloading gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b go: downloading golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c go: downloading google.golang.org/genproto v0.0.0-20210719143636-1d5a45f8e492 go: downloading github.com/tidwall/match v1.0.3 go: downloading github.com/tidwall/pretty v1.2.0 go: downloading github.com/syndtr/goleveldb v1.0.0 go: downloading github.com/golang-jwt/jwt/v4 v4.0.0 go: downloading github.com/uber/jaeger-client-go v2.29.1+incompatible go: downloading github.com/prometheus/client_model v0.2.0 go: downloading github.com/prometheus/common v0.29.0 go: downloading github.com/beorn7/perks v1.0.1 go: downloading github.com/cespare/xxhash/v2 v2.1.1 go: downloading github.com/prometheus/procfs v0.6.0 go: downloading github.com/fsnotify/fsnotify v1.4.9 go: downloading github.com/hashicorp/hcl v1.0.0 go: downloading github.com/magiconair/properties v1.8.5 go: downloading github.com/mitchellh/mapstructure v1.4.1 go: downloading github.com/pelletier/go-toml v1.9.3 go: downloading github.com/spf13/afero v1.6.0 go: downloading github.com/spf13/cast v1.3.1 go: downloading github.com/spf13/jwalterweatherman v1.1.0 go: downloading github.com/spf13/pflag v1.0.5 go: downloading github.com/subosito/gotenv v1.2.0 go: downloading gopkg.in/ini.v1 v1.62.0 go: downloading github.com/gogo/protobuf v1.3.2 go: downloading github.com/snowzach/rotatefilehook v0.0.0-20180327172521-2f64f265f58c go: downloading google.golang.org/protobuf v1.27.1 go: downloading github.com/KyleBanks/depth v1.2.1 go: downloading github.com/go-openapi/spec v0.20.3 go: downloading golang.org/x/tools v0.1.5 go: downloading github.com/mattn/go-colorable v0.1.8 go: downloading github.com/mattn/go-isatty v0.0.13 go: downloading github.com/valyala/bytebufferpool v1.0.0 go: downloading github.com/etcd-io/etcd v3.3.25+incompatible go: downloading github.com/xujiajun/nutsdb v0.6.0 go: downloading github.com/uber/jaeger-lib v2.4.1+incompatible go: downloading go.uber.org/atomic v1.9.0 go: downloading github.com/pkg/errors v0.9.1 go: downloading github.com/matttproud/golang_protobuf_extensions v1.0.1 go: downloading golang.org/x/text v0.3.6 go: downloading gopkg.in/natefinch/lumberjack.v2 v2.0.0 go: downloading github.com/go-openapi/jsonpointer v0.19.5 go: downloading github.com/go-openapi/jsonreference v0.19.6 go: downloading github.com/go-openapi/swag v0.19.15 go: downloading github.com/shiena/ansicolor v0.0.0-20200904210342-c7312218db18 go: downloading github.com/bwmarrin/snowflake v0.3.0 go: downloading github.com/xujiajun/mmap-go v1.0.1 go: downloading github.com/xujiajun/utils v0.0.0-20190123093513-8bf096c4f53b go: downloading github.com/golang/snappy v0.0.3 go: downloading github.com/coreos/etcd v3.3.25+incompatible go: downloading github.com/coreos/pkg v0.0.0-20180928190104-399ea9e2e55f go: downloading go.uber.org/zap v1.18.1 go: downloading github.com/PuerkitoBio/purell v1.1.1 go: downloading github.com/mailru/easyjson v0.7.7 go: downloading github.com/coreos/go-semver v0.3.0 go: downloading github.com/coreos/go-systemd/v22 v22.0.0 go: downloading github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578 go: downloading go.uber.org/multierr v1.7.0 go: downloading github.com/josharian/intern v1.0.0\n\n"},"deploy":{"dockerBuild":{"run":1,"check":0,"details":"Sending build context to Docker daemon  5.775MB\r\r\nStep 1/32 : FROM golang:1.16-alpine AS builder\n1.16-alpine: Pulling from library/golang\n29291e31a76a: Pulling fs layer\ne4bc8fc554c3: Pulling fs layer\n803daa35ea47: Pulling fs layer\nde40ce539e25: Pulling fs layer\nb1d2e2be38c8: Pulling fs layer\nde40ce539e25: Waiting\nb1d2e2be38c8: Waiting\n803daa35ea47: Download complete\n29291e31a76a: Verifying Checksum\n29291e31a76a: Download complete\ne4bc8fc554c3: Download complete\n29291e31a76a: Pull complete\nb1d2e2be38c8: Verifying Checksum\nb1d2e2be38c8: Download complete\ne4bc8fc554c3: Pull complete\n803daa35ea47: Pull complete\nde40ce539e25: Verifying Checksum\nde40ce539e25: Download complete\nde40ce539e25: Pull complete\nb1d2e2be38c8: Pull complete\nDigest: sha256:125b5fbad8200b161d62147f7a38525c97319acf5b44f07e0413199ea749e782\nStatus: Downloaded newer image for golang:1.16-alpine\n ---> cfae2977b751\nStep 2/32 : RUN apk add --no-cache sqlite-libs sqlite-dev\n ---> Running in aca0b4054c63\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.14/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.14/community/x86_64/APKINDEX.tar.gz\n(1/3) Installing pkgconf (1.7.4-r0)\n(2/3) Installing sqlite-libs (3.35.5-r0)\n(3/3) Installing sqlite-dev (3.35.5-r0)\nExecuting busybox-1.33.1-r3.trigger\nOK: 8 MiB in 18 packages\nRemoving intermediate container aca0b4054c63\n ---> 3266a23a7441\nStep 3/32 : RUN apk add --no-cache build-base\n ---> Running in 76d53598b9b7\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.14/main/x86_64/APKINDEX.tar.gz\nfetch https://dl-cdn.alpinelinux.org/alpine/v3.14/community/x86_64/APKINDEX.tar.gz\n(1/20) Installing libgcc (10.3.1_git20210424-r2)\n(2/20) Installing libstdc++ (10.3.1_git20210424-r2)\n(3/20) Installing binutils (2.35.2-r2)\n(4/20) Installing libmagic (5.40-r1)\n(5/20) Installing file (5.40-r1)\n(6/20) Installing libgomp (10.3.1_git20210424-r2)\n(7/20) Installing libatomic (10.3.1_git20210424-r2)\n(8/20) Installing libgphobos (10.3.1_git20210424-r2)\n(9/20) Installing gmp (6.2.1-r0)\n(10/20) Installing isl22 (0.22-r0)\n(11/20) Installing mpfr4 (4.1.0-r0)\n(12/20) Installing mpc1 (1.2.1-r0)\n(13/20) Installing gcc (10.3.1_git20210424-r2)\n(14/20) Installing musl-dev (1.2.2-r3)\n(15/20) Installing libc-dev (0.7.2-r3)\n(16/20) Installing g++ (10.3.1_git20210424-r2)\n(17/20) Installing make (4.3-r0)\n(18/20) Installing fortify-headers (1.1-r1)\n(19/20) Installing patch (2.7.6-r7)\n(20/20) Installing build-base (0.5-r2)\nExecuting busybox-1.33.1-r3.trigger\nOK: 198 MiB in 38 packages\nRemoving intermediate container 76d53598b9b7\n ---> 9171cb2dbefa\nStep 4/32 : ADD . /go/src/github.com/cloud-barista/poc-cicd-tumblebug\n ---> a704cbe757f0\nStep 5/32 : WORKDIR /go/src/github.com/cloud-barista/poc-cicd-tumblebug\n ---> Running in 4434c4721432\nRemoving intermediate container 4434c4721432\n ---> 6bef5aadb740\nStep 6/32 : WORKDIR src\n ---> Running in 9d36733efcbf\nRemoving intermediate container 9d36733efcbf\n ---> cb1311e99a04\nStep 7/32 : RUN go build -mod=mod -ldflags '-w -extldflags \"-static\"' -tags cb-tumblebug -o cb-tumblebug -v\n ---> Running in ee653aa5c5ec\n\u001b[91mgo: downloading github.com/mattn/go-sqlite3 v2.0.3+incompatible\n\u001b[0m\u001b[91mgo: downloading xorm.io/xorm v1.1.2\n\u001b[0m\u001b[91mgo: downloading google.golang.org/grpc v1.26.0\n\u001b[0m\u001b[91mgo: downloading github.com/labstack/echo/v4 v4.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/swaggo/echo-swagger v1.1.0\n\u001b[0m\u001b[91mgo: downloading github.com/cloud-barista/cb-spider v0.4.5\n\u001b[0m\u001b[91mgo: downloading github.com/cloud-barista/cb-store v0.4.1\n\u001b[0m\u001b[91mgo: downloading github.com/go-resty/resty/v2 v2.6.0\n\u001b[0m\u001b[91mgo: downloading github.com/google/uuid v1.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/sirupsen/logrus v1.8.1\n\u001b[0m\u001b[91mgo: downloading gopkg.in/yaml.v2 v2.4.0\n\u001b[0m\u001b[91mgo: downloading github.com/bramvdbogaerde/go-scp v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/tidwall/gjson v1.8.0\n\u001b[0m\u001b[91mgo: downloading golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97\n\u001b[0m\u001b[91mgo: downloading github.com/go-sql-driver/mysql v1.6.0\n\u001b[0m\u001b[91mgo: downloading github.com/tidwall/sjson v1.1.7\n\u001b[0m\u001b[91mgo: downloading xorm.io/builder v0.3.8\n\u001b[0m\u001b[91mgo: downloading github.com/grpc-ecosystem/go-grpc-middleware v1.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/grpc-ecosystem/go-grpc-prometheus v1.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/opentracing/opentracing-go v1.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/client_golang v1.11.0\n\u001b[0m\u001b[91mgo: downloading github.com/spf13/viper v1.8.1\n\u001b[0m\u001b[91mgo: downloading github.com/cloud-barista/cb-log v0.4.0\n\u001b[0m\u001b[91mgo: downloading github.com/golang/protobuf v1.5.2\n\u001b[0m\u001b[91mgo: downloading github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751\n\u001b[0m\u001b[91mgo: downloading github.com/swaggo/swag v1.7.0\n\u001b[0m\u001b[91mgo: downloading github.com/beego/beego/v2 v2.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/dgrijalva/jwt-go v3.2.0+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/labstack/gommon v0.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/valyala/fasttemplate v1.2.1\n\u001b[0m\u001b[91mgo: downloading golang.org/x/time v0.0.0-20210611083556-38a9dc6acbc6\n\u001b[0m\u001b[91mgo: downloading golang.org/x/net v0.0.0-20210716203947-853a461950ff\n\u001b[0m\u001b[91mgo: downloading github.com/swaggo/files v0.0.0-20190704085106-630677cd5c14\n\u001b[0m\u001b[91mgo: downloading gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b\n\u001b[0m\u001b[91mgo: downloading golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c\n\u001b[0m\u001b[91mgo: downloading google.golang.org/genproto v0.0.0-20210719143636-1d5a45f8e492\n\u001b[0m\u001b[91mgo: downloading github.com/tidwall/match v1.0.3\n\u001b[0m\u001b[91mgo: downloading github.com/tidwall/pretty v1.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/syndtr/goleveldb v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/golang-jwt/jwt/v4 v4.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/uber/jaeger-client-go v2.29.1+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/client_model v0.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/common v0.29.0\n\u001b[0m\u001b[91mgo: downloading github.com/beorn7/perks v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/cespare/xxhash/v2 v2.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/procfs v0.6.0\n\u001b[0m\u001b[91mgo: downloading github.com/snowzach/rotatefilehook v0.0.0-20180327172521-2f64f265f58c\n\u001b[0m\u001b[91mgo: downloading github.com/gogo/protobuf v1.3.2\n\u001b[0m\u001b[91mgo: downloading github.com/fsnotify/fsnotify v1.4.9\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/hcl v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/magiconair/properties v1.8.5\n\u001b[0m\u001b[91mgo: downloading github.com/mitchellh/mapstructure v1.4.1\n\u001b[0m\u001b[91mgo: downloading github.com/pelletier/go-toml v1.9.3\n\u001b[0m\u001b[91mgo: downloading github.com/spf13/afero v1.6.0\n\u001b[0m\u001b[91mgo: downloading github.com/spf13/cast v1.3.1\n\u001b[0m\u001b[91mgo: downloading github.com/spf13/jwalterweatherman v1.1.0\n\u001b[0m\u001b[91mgo: downloading github.com/spf13/pflag v1.0.5\n\u001b[0m\u001b[91mgo: downloading github.com/subosito/gotenv v1.2.0\n\u001b[0m\u001b[91mgo: downloading gopkg.in/ini.v1 v1.62.0\n\u001b[0m\u001b[91mgo: downloading google.golang.org/protobuf v1.27.1\n\u001b[0m\u001b[91mgo: downloading github.com/KyleBanks/depth v1.2.1\n\u001b[0m\u001b[91mgo: downloading github.com/go-openapi/spec v0.20.3\n\u001b[0m\u001b[91mgo: downloading golang.org/x/tools v0.1.5\n\u001b[0m\u001b[91mgo: downloading github.com/mattn/go-colorable v0.1.8\n\u001b[0m\u001b[91mgo: downloading github.com/mattn/go-isatty v0.0.13\n\u001b[0m\u001b[91mgo: downloading github.com/valyala/bytebufferpool v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/etcd-io/etcd v3.3.25+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/xujiajun/nutsdb v0.6.0\n\u001b[0m\u001b[91mgo: downloading github.com/uber/jaeger-lib v2.4.1+incompatible\n\u001b[0m\u001b[91mgo: downloading go.uber.org/atomic v1.9.0\n\u001b[0m\u001b[91mgo: downloading github.com/pkg/errors v0.9.1\n\u001b[0m\u001b[91mgo: downloading github.com/matttproud/golang_protobuf_extensions v1.0.1\n\u001b[0m\u001b[91mgo: downloading gopkg.in/natefinch/lumberjack.v2 v2.0.0\n\u001b[0m\u001b[91mgo: downloading golang.org/x/text v0.3.6\n\u001b[0m\u001b[91mgo: downloading github.com/go-openapi/jsonpointer v0.19.5\n\u001b[0m\u001b[91mgo: downloading github.com/go-openapi/jsonreference v0.19.6\n\u001b[0m\u001b[91mgo: downloading github.com/go-openapi/swag v0.19.15\n\u001b[0m\u001b[91mgo: downloading github.com/shiena/ansicolor v0.0.0-20200904210342-c7312218db18\n\u001b[0m\u001b[91mgo: downloading github.com/bwmarrin/snowflake v0.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/xujiajun/mmap-go v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/xujiajun/utils v0.0.0-20190123093513-8bf096c4f53b\n\u001b[0m\u001b[91mgo: downloading github.com/golang/snappy v0.0.3\n\u001b[0m\u001b[91mgo: downloading github.com/coreos/etcd v3.3.25+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/coreos/pkg v0.0.0-20180928190104-399ea9e2e55f\n\u001b[0m\u001b[91mgo: downloading go.uber.org/zap v1.18.1\n\u001b[0m\u001b[91mgo: downloading github.com/PuerkitoBio/purell v1.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/mailru/easyjson v0.7.7\n\u001b[0m\u001b[91mgo: downloading github.com/coreos/go-systemd/v22 v22.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/coreos/go-semver v0.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578\n\u001b[0m\u001b[91mgo: downloading go.uber.org/multierr v1.7.0\n\u001b[0m\u001b[91mgo: downloading github.com/josharian/intern v1.0.0\n\u001b[0m\u001b[91mgolang.org/x/sys/internal/unsafeheader\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/strconv\n\u001b[0m\u001b[91mgolang.org/x/sys/unix\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/token\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/ast\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/scanner\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/parser\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/json/token\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/json/scanner\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/json/parser\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/printer\n\u001b[0m\u001b[91mgithub.com/fsnotify/fsnotify\n\u001b[0m\u001b[91mgithub.com/mitchellh/mapstructure\n\u001b[0m\u001b[91mgithub.com/magiconair/properties\n\u001b[0m\u001b[91mgithub.com/pelletier/go-toml\n\u001b[0m\u001b[91mgithub.com/spf13/afero/mem\n\u001b[0m\u001b[91mgolang.org/x/text/transform\n\u001b[0m\u001b[91mgolang.org/x/text/unicode/norm\n\u001b[0m\u001b[91mgithub.com/spf13/afero\n\u001b[0m\u001b[91mgithub.com/spf13/cast\n\u001b[0m\u001b[91mgithub.com/spf13/jwalterweatherman\n\u001b[0m\u001b[91mgithub.com/spf13/pflag\n\u001b[0m\u001b[91mgithub.com/subosito/gotenv\n\u001b[0m\u001b[91mgopkg.in/ini.v1\n\u001b[0m\u001b[91mgopkg.in/yaml.v2\n\u001b[0m\u001b[91mgithub.com/sirupsen/logrus\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-log/formatter\n\u001b[0m\u001b[91mgopkg.in/natefinch/lumberjack.v2\n\u001b[0m\u001b[91mgithub.com/snowzach/rotatefilehook\n\u001b[0m\u001b[91mgopkg.in/yaml.v3\n\u001b[0m\u001b[91mgithub.com/spf13/viper\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/config\n\u001b[0m\u001b[91mgolang.org/x/net/internal/timeseries\n\u001b[0m\u001b[91mgolang.org/x/net/trace\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/backoff\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/grpclog\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-log\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/connectivity\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/detrand\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/logger\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/errors\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/encoding/protowire\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/pragma\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/flags\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/set\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/reflect/protoreflect\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/version\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/credentials/internal\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/metadata\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/attributes\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/serviceconfig\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/grpcrand\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/codes\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/encoding\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/backoff\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/balancerload\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/buffer\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/envconfig\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/grpcsync\n\u001b[0m\u001b[91mgolang.org/x/text/unicode/bidi\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/encoding/messageset\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/strs\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/encoding/text\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/genid\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/order\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/reflect/protoregistry\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/runtime/protoiface\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/encoding/defval\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/descfmt\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/proto\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/descopts\n\u001b[0m\u001b[91mgolang.org/x/text/secure/bidirule\n\u001b[0m\u001b[91mgolang.org/x/net/idna\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/encoding/prototext\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/filedesc\n\u001b[0m\u001b[91mgolang.org/x/net/http/httpguts\n\u001b[0m\u001b[91mgolang.org/x/net/http2/hpack\n\u001b[0m\u001b[91mgolang.org/x/net/http2\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/encoding/tag\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/impl\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/syscall\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/keepalive\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/stats\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/tap\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/naming\n\u001b[0m\u001b[91mgithub.com/golang-jwt/jwt/v4\n\u001b[0m\u001b[91mgithub.com/opentracing/opentracing-go/log\n\u001b[0m\u001b[91mgithub.com/opentracing/opentracing-go\n\u001b[0m\u001b[91mgithub.com/opentracing/opentracing-go/ext\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/baggage\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/reporterstats\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/spanlog\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/throttler\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/log\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/filetype\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/runtime/protoimpl\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/types/descriptorpb\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/types/known/anypb\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/ptypes/any\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/types/known/durationpb\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/reflect/protodesc\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/ptypes/duration\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/types/known/timestamppb\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/ptypes/timestamp\n\u001b[0m\u001b[91mgoogle.golang.org/genproto/googleapis/rpc/status\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift-gen/jaeger\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/proto\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift-gen/sampling\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift-gen/zipkincore\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/credentials\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/encoding/proto\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/resolver\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/ptypes\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/balancer\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/balancer/base\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/binarylog/grpc_binarylog_v1\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/balancer/roundrobin\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/status\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/channelz\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/binarylog\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/resolver/dns\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/resolver/passthrough\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/peer\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift-gen/agent\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/transport\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/utils\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-lib/metrics\n\u001b[0m\u001b[91mgo.uber.org/atomic\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go\n\u001b[0m\u001b[91mgoogle.golang.org/grpc\n\u001b[0m\u001b[91mgithub.com/pkg/errors\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift-gen/baggage\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/baggage/remote\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/throttler/remote\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/rpcmetrics\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/transport\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/config\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/interceptors/accesslog\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/interceptors/authjwt\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/interceptors/jaegertracer\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-middleware\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-middleware/recovery\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-middleware/util/metautils\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-middleware/tags\n\u001b[0m\u001b[91mgithub.com/beorn7/perks/quantile\n\u001b[0m\u001b[91mgithub.com/cespare/xxhash/v2\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-middleware/tracing/opentracing\n\u001b[0m\u001b[91mgithub.com/prometheus/client_model/go\n\u001b[0m\u001b[91mgithub.com/matttproud/golang_protobuf_extensions/pbutil\n\u001b[0m\u001b[91mgithub.com/prometheus/common/internal/bitbucket.org/ww/goautoneg\n\u001b[0m\u001b[91mgithub.com/prometheus/common/model\n\u001b[0m\u001b[91mgithub.com/prometheus/client_golang/prometheus/internal\n\u001b[0m\u001b[91mgithub.com/prometheus/procfs/internal/fs\n\u001b[0m\u001b[91mgithub.com/prometheus/procfs/internal/util\n\u001b[0m\u001b[91mgithub.com/prometheus/procfs\n\u001b[0m\u001b[91mgithub.com/prometheus/common/expfmt\n\u001b[0m\u001b[91mgolang.org/x/net/context\n\u001b[0m\u001b[91mgithub.com/gogo/protobuf/proto\n\u001b[0m\u001b[91mgithub.com/prometheus/client_golang/prometheus\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-prometheus\n\u001b[0m\u001b[91mgithub.com/prometheus/client_golang/prometheus/promhttp\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/common\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-spider/api-runtime/grpc-runtime/config\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-spider/api-runtime/grpc-runtime/logger\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-spider/api-runtime/grpc-runtime/interceptors/accesslog\n\u001b[0m\u001b[91mgithub.com/dgrijalva/jwt-go\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-spider/api-runtime/grpc-runtime/interceptors/authjwt\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-spider/api-runtime/grpc-runtime/interceptors/jaegertracer\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-spider/api-runtime/grpc-runtime/common\n\u001b[0m\u001b[91mgithub.com/gogo/protobuf/protoc-gen-gogo/descriptor\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store/config\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store/interfaces\n\u001b[0m\u001b[91mgo.uber.org/multierr\n\u001b[0m\u001b[91mgo.uber.org/zap/buffer\n\u001b[0m\u001b[91mgo.uber.org/zap/internal/bufferpool\n\u001b[0m\u001b[91mgo.uber.org/zap/internal/color\n\u001b[0m\u001b[91mgo.uber.org/zap/internal/exit\n\u001b[0m\u001b[91mgo.uber.org/zap/zapcore\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/protobuf/gogoproto\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/protobuf/cbtumblebug\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-spider/api-runtime/grpc-runtime/stub/gogoproto\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-spider/api-runtime/grpc-runtime/stub/cbspider\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-spider/interface/api/request\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-spider/interface/api\n\u001b[0m\u001b[91mgithub.com/gogo/protobuf/gogoproto\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/auth/authpb\n\u001b[0m\u001b[91mgo.uber.org/zap\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3/balancer/connectivity\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3/balancer/picker\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/resolver/dns\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/resolver/passthrough\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3/balancer\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3/balancer/resolver/endpoint\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/etcdserver/api/v3rpc/rpctypes\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3/credentials\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/mvcc/mvccpb\n\u001b[0m\u001b[91mgoogle.golang.org/genproto/googleapis/api/annotations\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/etcdserver/etcdserverpb\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/pkg/systemd\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/raft/raftpb\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/raft\n\u001b[0m\u001b[91mgithub.com/coreos/go-systemd/journal\n\u001b[0m\u001b[91mgithub.com/coreos/pkg/capnslog\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/pkg/logutil\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/pkg/types\n\u001b[0m\u001b[91mgithub.com/coreos/go-semver/semver\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/version\n\u001b[0m\u001b[91mgithub.com/google/uuid\n\u001b[0m\u001b[91mgithub.com/bwmarrin/snowflake\n\u001b[0m\u001b[91mgithub.com/xujiajun/mmap-go\n\u001b[0m\u001b[91mgithub.com/xujiajun/nutsdb/ds/list\n\u001b[0m\u001b[91mgithub.com/xujiajun/nutsdb/ds/set\n\u001b[0m\u001b[91mgithub.com/xujiajun/nutsdb/ds/zset\n\u001b[0m\u001b[91mgithub.com/xujiajun/utils/filesystem\n\u001b[0m\u001b[91mgithub.com/xujiajun/utils/strconv2\n\u001b[0m\u001b[91mgithub.com/xujiajun/nutsdb\n\u001b[0m\u001b[91mgithub.com/etcd-io/etcd/clientv3\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store/store-drivers/nutsdb-driver\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store/utils\n\u001b[0m\u001b[91mgolang.org/x/net/publicsuffix\n\u001b[0m\u001b[91mgithub.com/go-resty/resty/v2\n\u001b[0m\u001b[91mgithub.com/mattn/go-isatty\n\u001b[0m\u001b[91mgithub.com/mattn/go-colorable\n\u001b[0m\u001b[91mgithub.com/labstack/gommon/color\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store/store-drivers/etcd-driver\n\u001b[0m\u001b[91mgithub.com/valyala/bytebufferpool\n\u001b[0m\u001b[91mgithub.com/valyala/fasttemplate\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store\n\u001b[0m\u001b[91mgolang.org/x/crypto/acme\n\u001b[0m\u001b[91mgithub.com/labstack/gommon/log\n\u001b[0m\u001b[91mgolang.org/x/net/http2/h2c\n\u001b[0m\u001b[91mxorm.io/builder\n\u001b[0m\u001b[91mgolang.org/x/crypto/acme/autocert\n\u001b[0m\u001b[91mgithub.com/labstack/echo/v4\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb/util\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb/cache\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb/comparer\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb/storage\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb/errors\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb/filter\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb/iterator\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb/journal\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb/opt\n\u001b[0m\u001b[91mgithub.com/golang/snappy\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb/memdb\n\u001b[0m\u001b[91mxorm.io/xorm/internal/utils\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb/table\n\u001b[0m\u001b[91mxorm.io/xorm/schemas\n\u001b[0m\u001b[91mxorm.io/xorm/contexts\n\u001b[0m\u001b[91mxorm.io/xorm/convert\n\u001b[0m\u001b[91mxorm.io/xorm/log\n\u001b[0m\u001b[91mgithub.com/syndtr/goleveldb/leveldb\n\u001b[0m\u001b[91mxorm.io/xorm/names\n\u001b[0m\u001b[91mxorm.io/xorm/core\n\u001b[0m\u001b[91mxorm.io/xorm/dialects\n\u001b[0m\u001b[91mxorm.io/xorm/internal/json\n\u001b[0m\u001b[91mgithub.com/go-sql-driver/mysql\n\u001b[0m\u001b[91mxorm.io/xorm/caches\n\u001b[0m\u001b[91mxorm.io/xorm/tags\n\u001b[0m\u001b[91mxorm.io/xorm/internal/statements\n\u001b[0m\u001b[91mgithub.com/tidwall/match\n\u001b[0m\u001b[91mgithub.com/tidwall/pretty\n\u001b[0m\u001b[91mxorm.io/xorm\n\u001b[0m\u001b[91mgithub.com/tidwall/gjson\n\u001b[0m\u001b[91mgithub.com/tidwall/sjson\n\u001b[0m\u001b[91mgolang.org/x/crypto/internal/subtle\n\u001b[0m\u001b[91mgolang.org/x/crypto/chacha20\n\u001b[0m\u001b[91mgolang.org/x/crypto/curve25519/internal/field\n\u001b[0m\u001b[91mgolang.org/x/crypto/curve25519\n\u001b[0m\u001b[91mgolang.org/x/crypto/ed25519\n\u001b[0m\u001b[91mgolang.org/x/crypto/poly1305\n\u001b[0m\u001b[91mgolang.org/x/crypto/blowfish\n\u001b[0m\u001b[91mgolang.org/x/crypto/ssh/internal/bcrypt_pbkdf\n\u001b[0m\u001b[91mgolang.org/x/crypto/ssh\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/core/common\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/core/mcir\n\u001b[0m\u001b[91mgithub.com/bramvdbogaerde/go-scp\n\u001b[0m\u001b[91mgolang.org/x/crypto/ssh/agent\n\u001b[0m\u001b[91mgithub.com/bramvdbogaerde/go-scp/auth\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/server/mcir\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/core/mcis\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/protoc-gen-go/descriptor\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/reflection/grpc_reflection_v1alpha\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/reflection\n\u001b[0m\u001b[91mgithub.com/alecthomas/template/parse\n\u001b[0m\u001b[91mgithub.com/alecthomas/template\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/server/common\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/rest/server/mcis\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/server/mcis\n\u001b[0m\u001b[91mgithub.com/KyleBanks/depth\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/grpc/server\n\u001b[0m\u001b[91mgithub.com/josharian/intern\n\u001b[0m\u001b[91mgithub.com/mailru/easyjson/jlexer\n\u001b[0m\u001b[91mgithub.com/mailru/easyjson/buffer\n\u001b[0m\u001b[91mgithub.com/mailru/easyjson/jwriter\n\u001b[0m\u001b[91mgithub.com/PuerkitoBio/urlesc\n\u001b[0m\u001b[91mgithub.com/go-openapi/swag\n\u001b[0m\u001b[91mgolang.org/x/text/width\n\u001b[0m\u001b[91mgithub.com/PuerkitoBio/purell\n\u001b[0m\u001b[91mgolang.org/x/tools/internal/typeparams\n\u001b[0m\u001b[91mgolang.org/x/tools/go/ast/astutil\n\u001b[0m\u001b[91mgithub.com/go-openapi/jsonpointer\n\u001b[0m\u001b[91mgithub.com/go-openapi/jsonreference\n\u001b[0m\u001b[91mgithub.com/go-openapi/spec\n\u001b[0m\u001b[91mgolang.org/x/tools/go/buildutil\n\u001b[0m\u001b[91mgolang.org/x/sys/execabs\n\u001b[0m\u001b[91mgolang.org/x/tools/go/internal/cgo\n\u001b[0m\u001b[91mgolang.org/x/tools/go/loader\n\u001b[0m\u001b[91mgithub.com/shiena/ansicolor\n\u001b[0m\u001b[91mgithub.com/beego/beego/v2/core/logs\n\u001b[0m\u001b[91mgithub.com/swaggo/swag\n\u001b[0m\u001b[91mgithub.com/beego/beego/v2/core/validation\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/rest/server/common\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/rest/server/mcir\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/rest/docs\n\u001b[0m\u001b[91mgithub.com/labstack/gommon/bytes\n\u001b[0m\u001b[91mgithub.com/labstack/gommon/random\n\u001b[0m\u001b[91mgolang.org/x/time/rate\n\u001b[0m\u001b[91mgolang.org/x/net/webdav/internal/xml\n\u001b[0m\u001b[91mgithub.com/labstack/echo/v4/middleware\n\u001b[0m\u001b[91mgolang.org/x/net/webdav\n\u001b[0m\u001b[91mgithub.com/mattn/go-sqlite3\n\u001b[0m\u001b[91mgithub.com/swaggo/files\n\u001b[0m\u001b[91mgithub.com/swaggo/echo-swagger\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src/api/rest/server\n\u001b[0m\u001b[91m# github.com/mattn/go-sqlite3\nsqlite3-binding.c: In function 'sqlite3SelectNew':\nsqlite3-binding.c:128049:10: warning: function may return address of local variable [-Wreturn-local-addr]\n128049 |   return pNew;\n       |          ^~~~\nsqlite3-binding.c:128009:10: note: declared here\n128009 |   Select standin;\n       |          ^~~~~~~\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-tumblebug/src\n\u001b[0mRemoving intermediate container ee653aa5c5ec\n ---> 67413f552a3d\nStep 8/32 : FROM ubuntu:latest as prod\nlatest: Pulling from library/ubuntu\nDigest: sha256:82becede498899ec668628e7cb0ad87b6e1c371cb8a1e597d83a47fac21d6af3\nStatus: Downloaded newer image for ubuntu:latest\n ---> 1318b700e415\nStep 9/32 : RUN rm /bin/sh && ln -s /bin/bash /bin/sh\n ---> Running in d0d21caa3815\nRemoving intermediate container d0d21caa3815\n ---> 895c7331758a\nStep 10/32 : WORKDIR /app/src\n ---> Running in 286e22543780\nRemoving intermediate container 286e22543780\n ---> 5cf18b86ce99\nStep 11/32 : COPY --from=builder /go/src/github.com/cloud-barista/poc-cicd-tumblebug/assets/ /app/assets/\n ---> 8cb24819b9e2\nStep 12/32 : COPY --from=builder /go/src/github.com/cloud-barista/poc-cicd-tumblebug/conf/ /app/conf/\n ---> 91f364a53068\nStep 13/32 : COPY --from=builder /go/src/github.com/cloud-barista/poc-cicd-tumblebug/src/cb-tumblebug /app/src/\n ---> b68422a55112\nStep 14/32 : ENV CBTUMBLEBUG_ROOT /app\n ---> Running in bf7d35d5c529\nRemoving intermediate container bf7d35d5c529\n ---> 711dd22d2cc1\nStep 15/32 : ENV CBSTORE_ROOT /app\n ---> Running in b91b2df893b0\nRemoving intermediate container b91b2df893b0\n ---> 43b32046bbe8\nStep 16/32 : ENV CBLOG_ROOT /app\n ---> Running in 46d88621a45e\nRemoving intermediate container 46d88621a45e\n ---> f7e417686249\nStep 17/32 : ENV SPIDER_CALL_METHOD REST\n ---> Running in c171830090bc\nRemoving intermediate container c171830090bc\n ---> 1d3587a28213\nStep 18/32 : ENV SPIDER_REST_URL http://cb-spider:1024/spider\n ---> Running in 1ee2222ada22\nRemoving intermediate container 1ee2222ada22\n ---> f0998bc20dda\nStep 19/32 : ENV DRAGONFLY_REST_URL http://cb-dragonfly:9090/dragonfly\n ---> Running in eb64449589c0\nRemoving intermediate container eb64449589c0\n ---> 9c23e5c0c7d1\nStep 20/32 : ENV DB_URL localhost:3306\n ---> Running in 5bce56b6700b\nRemoving intermediate container 5bce56b6700b\n ---> 0c9a29dd15c5\nStep 21/32 : ENV DB_DATABASE cb_tumblebug\n ---> Running in 9b27bfaf2427\nRemoving intermediate container 9b27bfaf2427\n ---> c226ec7a976f\nStep 22/32 : ENV DB_USER cb_tumblebug\n ---> Running in e0378217bd22\nRemoving intermediate container e0378217bd22\n ---> 3166e678c29b\nStep 23/32 : ENV DB_PASSWORD cb_tumblebug\n ---> Running in 4bc5b9cef194\nRemoving intermediate container 4bc5b9cef194\n ---> b8dd1c802785\nStep 24/32 : ENV API_USERNAME default\n ---> Running in fd8b8964aa8c\nRemoving intermediate container fd8b8964aa8c\n ---> 0df1cde9ccff\nStep 25/32 : ENV API_PASSWORD default\n ---> Running in 311c8b6ca8ff\nRemoving intermediate container 311c8b6ca8ff\n ---> 8c3e5304fd06\nStep 26/32 : ENV AUTOCONTROL_DURATION_MS 10000\n ---> Running in 91ba3e4b7be6\nRemoving intermediate container 91ba3e4b7be6\n ---> 9ba8a03eef08\nStep 27/32 : ENV SELF_ENDPOINT localhost:1323\n ---> Running in 72e8bbb9f3ac\nRemoving intermediate container 72e8bbb9f3ac\n ---> 9ec0d565efd6\nStep 28/32 : ENV GOLANG_PROTOBUF_REGISTRATION_CONFLICT ignore\n ---> Running in 6fddc7aa999e\nRemoving intermediate container 6fddc7aa999e\n ---> ff4f63618146\nStep 29/32 : ENV API_DOC_PATH /app/src/api/rest/docs/swagger.json\n ---> Running in ec0645a18f64\nRemoving intermediate container ec0645a18f64\n ---> 314455fe24bf\nStep 30/32 : ENTRYPOINT [ \"/app/src/cb-tumblebug\" ]\n ---> Running in a65611e7f292\nRemoving intermediate container a65611e7f292\n ---> 32341e2bad1f\nStep 31/32 : EXPOSE 1323\n ---> Running in eb74f25fa18f\nRemoving intermediate container eb74f25fa18f\n ---> c324f796ad51\nStep 32/32 : EXPOSE 50252\n ---> Running in 52c2101e38d5\nRemoving intermediate container 52c2101e38d5\n ---> 4fc13abe1212\nSuccessfully built 4fc13abe1212\n"},"publish":{"run":0,"check":0,"details":""}},"selfhost":{"run":0,"check":0,"details":""}}