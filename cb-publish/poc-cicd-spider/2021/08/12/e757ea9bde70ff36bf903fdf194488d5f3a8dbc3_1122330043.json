{"version":"1.0","title":"CB-SPIDER CI/CD Dashboard","lint":{"deadcode":{"run":1,"cnt":42,"details":"cloud-control-manager/cloud-driver/call-log/gen4test/gen_calllog.go:67:7: NCPVPC not declared by package calllog (typecheck)\n\tcall.NCPVPC,\n\t     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/t.go:10:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:333:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:47:34: PublicIPHandler not declared by package resources (typecheck)\n\thandler := ResourceHandler.(irs.PublicIPHandler)\n\t                                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:102:20: PublicIPReqInfo not declared by package resources (typecheck)\n\t\t\t\treqInfo := irs.PublicIPReqInfo{Name: \"mcloud-barista-eip-test\"}\n\t\t\t\t               ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:259:3: unknown field `Id` in struct literal (typecheck)\n\t\tId:   \"ami-047f7b46bd6dd5d84\",\n\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:260:3: unknown field `Name` in struct literal (typecheck)\n\t\tName: \"Test OS Image\",\n\t\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:20:5: `cblogger` redeclared in this block (typecheck)\nvar cblogger *logrus.Logger\n    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:16:5: other declaration of cblogger (typecheck)\nvar cblogger *logrus.Logger\n    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:181:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:605:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:185:6: `Config` redeclared in this block (typecheck)\ntype Config struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:650:6: other declaration of Config (typecheck)\ntype Config struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:212:6: `readConfigFile` redeclared in this block (typecheck)\nfunc readConfigFile() Config {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:684:6: other declaration of readConfigFile (typecheck)\nfunc readConfigFile() Config {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:713:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/Test_Vm.go:210:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/key.go:18:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/parallel-test.go:23:5: `count` redeclared in this block (typecheck)\nvar count = 100\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:19:5: other declaration of count (typecheck)\nvar count = 10\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:24:5: `iidRWLock` redeclared in this block (typecheck)\nvar iidRWLock = new(iidm.IIDRWLOCK)\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:20:5: other declaration of iidRWLock (typecheck)\nvar iidRWLock = new(iidm.IIDRWLOCK)\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:27:5: `cName` redeclared in this block (typecheck)\nvar cName = \"aws-seoul-config\"\t\t// Connection Name\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:21:5: other declaration of cName (typecheck)\nvar cName = \"aws-seoul-config\"\t\t// Connection Name\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:28:5: `rName` redeclared in this block (typecheck)\nvar rName = \"VM\"\t\t\t// Resource Type\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:22:5: other declaration of rName (typecheck)\nvar rName = \"VM\"\t\t\t// Resource Type\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:31:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/list-loop.go:24:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/parallel-test.go:111:6: `list` redeclared in this block (typecheck)\nfunc list() {\n     ^\ncloud-control-manager/iid-manager/test/list-loop.go:36:6: other declaration of list (typecheck)\nfunc list() {\n     ^\ncloud-control-manager/iid-manager/test/simple-test.go:18:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshcopy-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshcopy-keypath-test.go:14:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshrun-keypath-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshrun-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-regions.go:27:5: `cblog` redeclared in this block (typecheck)\nvar cblog *logrus.Logger\n    ^\nutils/import-drv-region-info/import-drivers.go:22:5: other declaration of cblog (typecheck)\nvar cblog *logrus.Logger\n    ^\nutils/import-drv-region-info/import-regions.go:33:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-drivers.go:30:6: other declaration of main (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-drivers.go:44:17: undeclared name: `Cblogger` (typecheck)\n                Cblogger.Error(\"$CBSPIDER_ROOT is not set!!\")\n                ^\ncloud-control-manager/cloud-driver/call-log/formatter/formatter.go:83:6: `shortFilePathName` is unused (deadcode)\nfunc shortFilePathName(filePath string) string {\n     ^\ncloud-control-manager/cloud-driver/drivers/mock-plugin/MockDriver-lib.go:74:5: `CloudDriver` is unused (deadcode)\nvar CloudDriver MockDriver\n    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:18:2: `defaultSubnetName` is unused (deadcode)\n\tdefaultSubnetName = \"Default Network\"\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit-plugin/ClouditDriver-lib.go:62:5: `CloudDriver` is unused (deadcode)\nvar CloudDriver ClouditDriver\n    ^\ncloud-control-manager/cloud-driver/drivers/openstack-plugin/OpenStackDriver-lib.go:172:5: `CloudDriver` is unused (deadcode)\nvar CloudDriver OpenStackDriver\n    ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:310:5: `CloudDriver` is unused (deadcode)\nvar CloudDriver AzureDriver\n    ^\ncloud-control-manager/cloud-driver/drivers/alibaba-plugin/AlibabaDriver-lib.go:157:5: `CloudDriver` is unused (deadcode)\nvar CloudDriver AlibabaDriver\n    ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:413:6: `makePublicKeyFromPrivateKey` is unused (deadcode)\nfunc makePublicKeyFromPrivateKey(pem string) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:145:6: `handleVMSpec` is unused (deadcode)\nfunc handleVMSpec() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:330:6: `handleSecurity` is unused (deadcode)\nfunc handleSecurity() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:482:6: `handleKeyPair` is unused (deadcode)\nfunc handleKeyPair() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:585:6: `handleVPC` is unused (deadcode)\nfunc handleVPC() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:720:6: `handleImage` is unused (deadcode)\nfunc handleImage() {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent-plugin/TencentDriver-lib.go:172:5: `CloudDriver` is unused (deadcode)\nvar CloudDriver TencentDriver\n    ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:33:6: `handleVMSpec` is unused (deadcode)\nfunc handleVMSpec() {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:129:6: `handleSecurity` is unused (deadcode)\nfunc handleSecurity() {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:289:6: `handleKeyPair` is unused (deadcode)\nfunc handleKeyPair() {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:513:6: `handleImage` is unused (deadcode)\nfunc handleImage() {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:597:6: `handleVM` is unused (deadcode)\nfunc handleVM() {\n     ^\ncloud-control-manager/cloud-driver/drivers/docker-plugin/DockerDriver-lib.go:81:5: `CloudDriver` is unused (deadcode)\nvar CloudDriver DockerDriver\n    ^\ncloud-control-manager/cloud-driver/drivers/aws-plugin/AwsDriver-lib.go:129:5: `CloudDriver` is unused (deadcode)\nvar CloudDriver AwsDriver\n    ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:39:6: `handleSecurity` is unused (deadcode)\nfunc handleSecurity() {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:200:6: `handleSecurityOld` is unused (deadcode)\nfunc handleSecurityOld() {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:379:6: `handleKeyPair` is unused (deadcode)\nfunc handleKeyPair() {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:547:6: `handleVPC` is unused (deadcode)\nfunc handleVPC() {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:852:6: `testErr` is unused (deadcode)\nfunc testErr() error {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:859:6: `handleVM` is unused (deadcode)\nfunc handleVM() {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:1018:6: `handleVMSpec` is unused (deadcode)\nfunc handleVMSpec() {\n     ^\napi-runtime/meerkat-runtime/common/runcommand.go:28:9: `clear` is unused (deadcode)\n        clear string = \"$clear\" // $clear cmdresult\n        ^\napi-runtime/meerkat-runtime/common/runcommand.go:29:9: `list` is unused (deadcode)\n        list string = \"$list\"   // $list vm\n        ^\ncloud-control-manager/cloud-driver/drivers/gcp-plugin/GCPDriver-lib.go:125:5: `CloudDriver` is unused (deadcode)\nvar CloudDriver GCPDriver\n    ^\napi-runtime/meerkat-runtime/momkat/MomKat.go:367:6: `getChildKatServerList` is unused (deadcode)\nfunc getChildKatServerList() []kv.KeyValue {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:34:6: `handleSecurityOld` is unused (deadcode)\nfunc handleSecurityOld() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:295:6: `handleImage` is unused (deadcode)\nfunc handleImage() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:387:6: `handleVPC` is unused (deadcode)\nfunc handleVPC() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:556:6: `handleKeyPairOld` is unused (deadcode)\nfunc handleKeyPairOld() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:637:6: `handleKeyPair` is unused (deadcode)\nfunc handleKeyPair() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:720:6: `handleVMSpec` is unused (deadcode)\nfunc handleVMSpec() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:814:6: `handleVM` is unused (deadcode)\nfunc handleVM() {\n     ^\napi-runtime/common-runtime/CCMCommon.go:29:2: `rsImage` is unused (deadcode)\n\trsImage string = \"image\"\n\t^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:81:6: `subnetList` is unused (deadcode)\nfunc subnetList(connConfig string, vpcName string) []string {\n     ^\napi-runtime/rest-runtime/CBSpiderRuntime.go:374:6: `apiInfo` is unused (deadcode)\nfunc apiInfo(c echo.Context) error {\n     ^\n"},"errcheck":{"run":1,"cnt":164,"details":"cloud-control-manager/cloud-driver/call-log/gen4test/gen_calllog.go:67:7: NCPVPC not declared by package calllog (typecheck)\n\tcall.NCPVPC,\n\t     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/t.go:10:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:333:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:47:34: PublicIPHandler not declared by package resources (typecheck)\n\thandler := ResourceHandler.(irs.PublicIPHandler)\n\t                                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:102:20: PublicIPReqInfo not declared by package resources (typecheck)\n\t\t\t\treqInfo := irs.PublicIPReqInfo{Name: \"mcloud-barista-eip-test\"}\n\t\t\t\t               ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:259:3: unknown field `Id` in struct literal (typecheck)\n\t\tId:   \"ami-047f7b46bd6dd5d84\",\n\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:260:3: unknown field `Name` in struct literal (typecheck)\n\t\tName: \"Test OS Image\",\n\t\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:20:5: `cblogger` redeclared in this block (typecheck)\nvar cblogger *logrus.Logger\n    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:16:5: other declaration of cblogger (typecheck)\nvar cblogger *logrus.Logger\n    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:181:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:605:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:185:6: `Config` redeclared in this block (typecheck)\ntype Config struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:650:6: other declaration of Config (typecheck)\ntype Config struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:212:6: `readConfigFile` redeclared in this block (typecheck)\nfunc readConfigFile() Config {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:684:6: other declaration of readConfigFile (typecheck)\nfunc readConfigFile() Config {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:713:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/Test_Vm.go:210:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/key.go:18:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/parallel-test.go:23:5: `count` redeclared in this block (typecheck)\nvar count = 100\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:19:5: other declaration of count (typecheck)\nvar count = 10\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:24:5: `iidRWLock` redeclared in this block (typecheck)\nvar iidRWLock = new(iidm.IIDRWLOCK)\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:20:5: other declaration of iidRWLock (typecheck)\nvar iidRWLock = new(iidm.IIDRWLOCK)\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:27:5: `cName` redeclared in this block (typecheck)\nvar cName = \"aws-seoul-config\"\t\t// Connection Name\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:21:5: other declaration of cName (typecheck)\nvar cName = \"aws-seoul-config\"\t\t// Connection Name\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:28:5: `rName` redeclared in this block (typecheck)\nvar rName = \"VM\"\t\t\t// Resource Type\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:22:5: other declaration of rName (typecheck)\nvar rName = \"VM\"\t\t\t// Resource Type\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:31:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/list-loop.go:24:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/parallel-test.go:111:6: `list` redeclared in this block (typecheck)\nfunc list() {\n     ^\ncloud-control-manager/iid-manager/test/list-loop.go:36:6: other declaration of list (typecheck)\nfunc list() {\n     ^\ncloud-control-manager/iid-manager/test/simple-test.go:18:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshcopy-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshcopy-keypath-test.go:14:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshrun-keypath-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshrun-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-regions.go:27:5: `cblog` redeclared in this block (typecheck)\nvar cblog *logrus.Logger\n    ^\nutils/import-drv-region-info/import-drivers.go:22:5: other declaration of cblog (typecheck)\nvar cblog *logrus.Logger\n    ^\nutils/import-drv-region-info/import-regions.go:33:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-drivers.go:30:6: other declaration of main (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-drivers.go:44:17: undeclared name: `Cblogger` (typecheck)\n                Cblogger.Error(\"$CBSPIDER_ROOT is not set!!\")\n                ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/RestClient.go:232:25: Error return value of `options.RawBody.Seek` is not checked (errcheck)\n\t\t\t\toptions.RawBody.Seek(0, 0)\n\t\t\t\t                    ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:178:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(jsonBytes, &i)\n\t              ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:172:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(jsonBytes, &i)\n\t              ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/ImageHandler.go:57:14: Error return value of `buf.ReadFrom` is not checked (errcheck)\n\tbuf.ReadFrom(out)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:329:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(jsonBytes, &i)\n\t              ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:846:35: Error return value of `VPCHandler.DetachInternetGateway` is not checked (errcheck)\n\t\tVPCHandler.DetachInternetGateway(vpcId, *curIgw.InternetGatewayId)\n\t\t                                ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:848:23: Error return value of `VPCHandler.DeleteIGW` is not checked (errcheck)\n\t\tVPCHandler.DeleteIGW(*curIgw.InternetGatewayId)\n\t\t                    ^\napi-runtime/meerkat-runtime/table-handler/TableHandler.go:253:34: Error return value of `` is not checked (errcheck)\n        json.NewEncoder(f).Encode(token)\n                                 ^\napi-runtime/meerkat-runtime/momkat/MomKat.go:137:16: Error return value of `th.WriteRange` is not checked (errcheck)\n\t\tth.WriteRange(srv, &th.CellRange{Sheet:common.CommandSheetName, X:common.CommandIDX, Y:common.CommandTableY,\n\t\t             ^\napi-runtime/meerkat-runtime/momkat/MomKat.go:146:17: Error return value of `th.WriteRange2` is not checked (errcheck)\n\t\tth.WriteRange2(srv, &th.CellRange2{Sheet:common.CommandSheetName, X:common.CommandIDX, Y:common.CommandTableY,\n\t\t              ^\napi-runtime/meerkat-runtime/momkat/MomKat.go:199:25: Error return value of `common.ClearCheckBit` is not checked (errcheck)\n\t\t\t\tcommon.ClearCheckBit(statusInfo.RowNumber)\n\t\t\t\t                    ^\ncloud-info-manager/credential-info-manager/test/test.go:84:20: Error return value of `cim.GetCredential` is not checked (errcheck)\n\t\tcim.GetCredential(keyValue.CredentialName)\n\t\t                 ^\ncloud-info-manager/driver-info-manager/test/test.go:49:21: Error return value of `dim.GetCloudDriver` is not checked (errcheck)\n\t\tdim.GetCloudDriver(keyValue.DriverName)\n\t\t                  ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/conf/Test_Config.go:120:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(data, &config)\n\t              ^\ncloud-info-manager/connection-config-info-manager/test/test.go:53:26: Error return value of `cim.GetConnectionConfig` is not checked (errcheck)\n\t\tcim.GetConnectionConfig(keyValue.ConfigName)\n\t\t                       ^\napi-runtime/common-runtime/CCMCommon.go:1266:11: Error return value is not checked (errcheck)\n\tsetNameId(connectionName, &info, &reqInfo)\n\t         ^\ncloud-info-manager/region-info-manager/test/test.go:64:16: Error return value of `cim.GetRegion` is not checked (errcheck)\n\t\tcim.GetRegion(keyValue.RegionName)\n\t\t             ^\ninterface/api/ccm.go:391:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:398:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:420:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:423:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:445:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:448:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:470:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:473:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:495:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:498:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:520:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:523:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:545:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:548:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:570:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:573:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:595:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:602:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:624:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:627:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:649:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:652:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:674:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:677:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:699:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:702:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:724:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:727:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:749:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:756:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:778:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:781:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:803:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:806:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:828:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:835:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:857:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:860:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:882:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:885:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:907:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:910:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:932:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:935:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:957:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:960:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:982:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:989:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1011:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1014:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1036:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1039:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1061:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1064:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1086:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1089:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1111:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1114:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1136:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1143:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1165:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1168:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1190:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1193:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1215:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1218:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1240:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1243:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1265:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1268:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1290:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1293:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1315:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1318:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1340:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1343:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/ccm.go:1365:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(\"json\")\n\t             ^\ninterface/api/ccm.go:1372:15: Error return value of `ccm.SetInType` is not checked (errcheck)\n\tccm.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:332:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:339:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:370:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:373:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:395:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:398:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:420:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:427:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:458:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:461:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:483:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:486:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:508:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:515:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:546:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:549:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:571:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:574:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:596:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:603:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:634:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:637:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\ninterface/api/cim.go:659:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(\"json\")\n\t             ^\ninterface/api/cim.go:662:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(holdType)\n\t             ^\napi-runtime/meerkat-runtime/MeerkatRuntime.go:77:28: Error return value of `common.ClearCheckBit` is not checked (errcheck)\n\tdefer common.ClearCheckBit(strY)\n\t                          ^\napi-runtime/meerkat-runtime/MeerkatRuntime.go:98:23: Error return value of `common.ClearCheckBit` is not checked (errcheck)\n\t\tcommon.ClearCheckBit(strY)\n\t\t                    ^\napi-runtime/meerkat-runtime/MeerkatRuntime.go:123:20: Error return value of `common.SetCheckBit` is not checked (errcheck)\n\tcommon.SetCheckBit(strY)\n\t                  ^\ninterface/cli/cbadm/proc/connectinfos.go:77:16: Error return value of `cim.SetOutType` is not checked (errcheck)\n\tcim.SetOutType(\"json\")\n\t              ^\ninterface/cli/cbadm/proc/connectinfos.go:78:22: Error return value of `cim.SetOutType` is not checked (errcheck)\n\tdefer cim.SetOutType(holdType)\n\t                    ^\ninterface/cli/cbadm/proc/connectinfos.go:164:16: Error return value of `cim.SetOutType` is not checked (errcheck)\n\tcim.SetOutType(\"json\")\n\t              ^\ninterface/cli/cbadm/proc/connectinfos.go:165:22: Error return value of `cim.SetOutType` is not checked (errcheck)\n\tdefer cim.SetOutType(holdType)\n\t                    ^\ninterface/cli/spider/cmd/gclient.go:111:16: Error return value of `cim.SetInType` is not checked (errcheck)\n\t\tcim.SetInType(inType)\n\t\t             ^\ninterface/cli/spider/cmd/gclient.go:112:17: Error return value of `cim.SetOutType` is not checked (errcheck)\n\t\tcim.SetOutType(outType)\n\t\t              ^\ninterface/cli/spider/cmd/gclient.go:114:16: Error return value of `ccm.SetInType` is not checked (errcheck)\n\t\tccm.SetInType(inType)\n\t\t             ^\ninterface/cli/spider/cmd/gclient.go:115:17: Error return value of `ccm.SetOutType` is not checked (errcheck)\n\t\tccm.SetOutType(outType)\n\t\t              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:182:31: Error return value of `json.Unmarshal` is not checked (errcheck)\n                json.Unmarshal(resBody, &info)\n                              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:300:31: Error return value of `json.Unmarshal` is not checked (errcheck)\n                json.Unmarshal(resBody, &info)\n                              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:418:31: Error return value of `json.Unmarshal` is not checked (errcheck)\n                json.Unmarshal(resBody, &info)\n                              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:536:31: Error return value of `json.Unmarshal` is not checked (errcheck)\n                json.Unmarshal(resBody, &info)\n                              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:299:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(resBody, &info)\n\t              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:544:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(resBody, &info)\n\t              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:788:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(resBody, &info)\n\t              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:932:18: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\t\tjson.Unmarshal(resBody, &secInfo)\n\t\t\t              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:1135:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(resBody, &info)\n\t              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:1402:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(resBody, &info)\n\t              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:1548:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(resBody, &info)\n\t              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:209:17: Error return value of `json.Unmarshal` is not checked (errcheck)\n\t\tjson.Unmarshal(resBody, &info)\n\t\t              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:465:31: Error return value of `json.Unmarshal` is not checked (errcheck)\n                json.Unmarshal(resBody, &info)\n                              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:746:31: Error return value of `json.Unmarshal` is not checked (errcheck)\n                json.Unmarshal(resBody, &info)\n                              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:914:23: Error return value of `json.Unmarshal` is not checked (errcheck)\n        json.Unmarshal(resBody, &configInfo)\n                      ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:927:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(resBody, &regionInfo)\n\t              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1231:31: Error return value of `json.Unmarshal` is not checked (errcheck)\n                json.Unmarshal(resBody, &info)\n                              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1251:31: Error return value of `json.Unmarshal` is not checked (errcheck)\n                json.Unmarshal(resBody, &driverInfo)\n                              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1263:31: Error return value of `json.Unmarshal` is not checked (errcheck)\n                json.Unmarshal(resBody, &credentialInfo)\n                              ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1275:31: Error return value of `json.Unmarshal` is not checked (errcheck)\n                json.Unmarshal(resBody, &regionInfo)\n                              ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:45:16: Error return value of `json.Unmarshal` is not checked (errcheck)\n\tjson.Unmarshal(resBody, &info)\n\t              ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:58:23: Error return value of `json.Unmarshal` is not checked (errcheck)\n        json.Unmarshal(resBody, &info)\n                      ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:76:23: Error return value of `json.Unmarshal` is not checked (errcheck)\n        json.Unmarshal(resBody, &info)\n                      ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:87:23: Error return value of `json.Unmarshal` is not checked (errcheck)\n        json.Unmarshal(resBody, &info)\n                      ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:105:23: Error return value of `json.Unmarshal` is not checked (errcheck)\n        json.Unmarshal(resBody, &info)\n                      ^\ntest/interface-test/cli-scenario/cobra_call.go:31:20: Error return value of `spiderCmd.Execute` is not checked (errcheck)\n\t\tspiderCmd.Execute()\n\t\t                 ^\ntest/interface-test/cli-scenario/setup.go:46:18: Error return value of `cbstore.InitData` is not checked (errcheck)\n\tcbstore.InitData()\n\t                ^\ntest/interface-test/cli-scenario/setup.go:95:18: Error return value of `cbstore.InitData` is not checked (errcheck)\n\tcbstore.InitData()\n\t                ^\ninterface/cli/cbadm/cmd/gclient.go:85:15: Error return value of `cim.SetInType` is not checked (errcheck)\n\tcim.SetInType(inType)\n\t             ^\ninterface/cli/cbadm/cmd/gclient.go:86:16: Error return value of `cim.SetOutType` is not checked (errcheck)\n\tcim.SetOutType(outType)\n\t              ^\ntest/interface-test/go-scenario/setup.go:54:18: Error return value of `cbstore.InitData` is not checked (errcheck)\n\tcbstore.InitData()\n\t                ^\ntest/interface-test/go-scenario/setup.go:138:18: Error return value of `cbstore.InitData` is not checked (errcheck)\n\tcbstore.InitData()\n\t                ^\ntest/interface-test/rest-scenario/setup.go:42:18: Error return value of `cbstore.InitData` is not checked (errcheck)\n\tcbstore.InitData()\n\t                ^\ntest/interface-test/rest-scenario/setup.go:51:18: Error return value of `cbstore.InitData` is not checked (errcheck)\n\tcbstore.InitData()\n\t                ^\n"},"staticcheck":{"run":1,"cnt":60,"details":"cloud-control-manager/cloud-driver/call-log/gen4test/gen_calllog.go:67:7: NCPVPC not declared by package calllog (typecheck)\n\tcall.NCPVPC,\n\t     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/t.go:10:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:333:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:47:34: PublicIPHandler not declared by package resources (typecheck)\n\thandler := ResourceHandler.(irs.PublicIPHandler)\n\t                                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:102:20: PublicIPReqInfo not declared by package resources (typecheck)\n\t\t\t\treqInfo := irs.PublicIPReqInfo{Name: \"mcloud-barista-eip-test\"}\n\t\t\t\t               ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:259:3: unknown field `Id` in struct literal (typecheck)\n\t\tId:   \"ami-047f7b46bd6dd5d84\",\n\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:260:3: unknown field `Name` in struct literal (typecheck)\n\t\tName: \"Test OS Image\",\n\t\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:20:5: `cblogger` redeclared in this block (typecheck)\nvar cblogger *logrus.Logger\n    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:16:5: other declaration of cblogger (typecheck)\nvar cblogger *logrus.Logger\n    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:181:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:605:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:185:6: `Config` redeclared in this block (typecheck)\ntype Config struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:650:6: other declaration of Config (typecheck)\ntype Config struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:212:6: `readConfigFile` redeclared in this block (typecheck)\nfunc readConfigFile() Config {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:684:6: other declaration of readConfigFile (typecheck)\nfunc readConfigFile() Config {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:713:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/Test_Vm.go:210:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/key.go:18:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/parallel-test.go:23:5: `count` redeclared in this block (typecheck)\nvar count = 100\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:19:5: other declaration of count (typecheck)\nvar count = 10\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:24:5: `iidRWLock` redeclared in this block (typecheck)\nvar iidRWLock = new(iidm.IIDRWLOCK)\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:20:5: other declaration of iidRWLock (typecheck)\nvar iidRWLock = new(iidm.IIDRWLOCK)\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:27:5: `cName` redeclared in this block (typecheck)\nvar cName = \"aws-seoul-config\"\t\t// Connection Name\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:21:5: other declaration of cName (typecheck)\nvar cName = \"aws-seoul-config\"\t\t// Connection Name\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:28:5: `rName` redeclared in this block (typecheck)\nvar rName = \"VM\"\t\t\t// Resource Type\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:22:5: other declaration of rName (typecheck)\nvar rName = \"VM\"\t\t\t// Resource Type\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:31:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/list-loop.go:24:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/parallel-test.go:111:6: `list` redeclared in this block (typecheck)\nfunc list() {\n     ^\ncloud-control-manager/iid-manager/test/list-loop.go:36:6: other declaration of list (typecheck)\nfunc list() {\n     ^\ncloud-control-manager/iid-manager/test/simple-test.go:18:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshcopy-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshcopy-keypath-test.go:14:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshrun-keypath-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshrun-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-regions.go:27:5: `cblog` redeclared in this block (typecheck)\nvar cblog *logrus.Logger\n    ^\nutils/import-drv-region-info/import-drivers.go:22:5: other declaration of cblog (typecheck)\nvar cblog *logrus.Logger\n    ^\nutils/import-drv-region-info/import-regions.go:33:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-drivers.go:30:6: other declaration of main (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-drivers.go:44:17: undeclared name: `Cblogger` (typecheck)\n                Cblogger.Error(\"$CBSPIDER_ROOT is not set!!\")\n                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/KeyPairHandler.go:87:108: SA4001: *&x will be simplified to x. It will not copy x. (staticcheck)\n\t\t\tcblogger.Infof(\"[%s] KeyPair는 Local에서 관리하는 대상이 아니기 때문에 Skip합니다.\", *&pair.KeyPairName)\n\t\t\t                                                                                                        ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:123:10: SA9003: empty branch (staticcheck)\n\t\t} else {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:134:10: SA9003: empty branch (staticcheck)\n\t\t} else {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:190:10: SA9003: empty branch (staticcheck)\n\t\t} else {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:201:10: SA9003: empty branch (staticcheck)\n\t\t} else {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/CommonClouditFunc.go:180:4: SA9003: empty branch (staticcheck)\n\t\t\tif err.Error() != \"EOF\" {\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:54:12: SA9003: empty branch (staticcheck)\n\t\t\t\t} else {\n\t\t\t\t       ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:30:2: SA9004: only the first constant in this group has an explicit type (staticcheck)\n\tProvisioningStateCode string = \"ProvisioningState/succeeded\"\n\t^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:847:23: SA5009: Printf format %s reads arg #22, but call has only 21 args (staticcheck)\n\tstrTR := fmt.Sprintf(`\n\t                     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:719:3: SA4004: the surrounding loop is unconditionally terminated (staticcheck)\n\t\treturn vmStatus, errStatus\n\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/GCPDriver.go:114:24: SA1019: o2.NoContext is deprecated: Use context.Background() or context.TODO() instead. (staticcheck)\n\tclient := conf.Client(o2.NoContext)\n\t                      ^\ncloud-control-manager/cloud-driver/drivers/gcp/GCPDriver.go:116:19: SA1019: compute.New is deprecated: please use NewService instead. To provide a custom HTTP client, use option.WithHTTPClient. If you are using google.golang.org/api/googleapis/transport.APIKey, use option.WithAPIKey with NewService instead. (staticcheck)\n\tvmClient, err := compute.New(client)\n\t                 ^\napi-runtime/grpc-runtime/interceptors/jaegertracer/jaegertracer.go:33:25: SA1019: cfg.New is deprecated: use NewTracer() function (staticcheck)\n\ttracer, closer, err := cfg.New(jcConf.ServiceName, config.Logger(jaeger.NullLogger))\n\t                       ^\napi-runtime/grpc-runtime/common/cbserver.go:114:21: SA1019: prometheus.NewProcessCollector is deprecated: Use collectors.NewProcessCollector instead. (staticcheck)\n\t\t\treg.MustRegister(prometheus.NewProcessCollector(prometheus.ProcessCollectorOpts{}))\n\t\t\t                 ^\napi-runtime/grpc-runtime/common/cbserver.go:115:21: SA1019: prometheus.NewGoCollector is deprecated: Use collectors.NewGoCollector instead. (staticcheck)\n\t\t\treg.MustRegister(prometheus.NewGoCollector())\n\t\t\t                 ^\napi-runtime/meerkat-runtime/table-handler/TableHandler.go:55:21: SA1019: sheets.New is deprecated: please use NewService instead. To provide a custom HTTP client, use option.WithHTTPClient. If you are using google.golang.org/api/googleapis/transport.APIKey, use option.WithAPIKey with NewService instead. (staticcheck)\n        srv, err := sheets.New(client)\n                    ^\ncloud-control-manager/cloud-driver/drivers/alibaba-plugin/AlibabaDriver-lib.go:99:17: SA1019: credentials.BaseCredential is deprecated: Use AccessKeyCredential in this package instead. (staticcheck)\n\tcredential := &credentials.BaseCredential{\n\t               ^\ncloud-control-manager/cloud-driver/drivers/alibaba-plugin/AlibabaDriver-lib.go:142:17: SA1019: credentials.BaseCredential is deprecated: Use AccessKeyCredential in this package instead. (staticcheck)\n\tcredential := &credentials.BaseCredential{\n\t               ^\ncloud-control-manager/cloud-driver/drivers/gcp-plugin/GCPDriver-lib.go:116:24: SA1019: o2.NoContext is deprecated: Use context.Background() or context.TODO() instead. (staticcheck)\n\tclient := conf.Client(o2.NoContext)\n\t                      ^\ncloud-control-manager/cloud-driver/drivers/gcp-plugin/GCPDriver-lib.go:118:19: SA1019: compute.New is deprecated: please use NewService instead. To provide a custom HTTP client, use option.WithHTTPClient. If you are using google.golang.org/api/googleapis/transport.APIKey, use option.WithAPIKey with NewService instead. (staticcheck)\n\tvmClient, err := compute.New(client)\n\t                 ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/ImageHandler.go:90:2: SA4006: this value of `err` is never used (staticcheck)\n\timage, err := imageHandler.Client.Get(imageHandler.Ctx, imageHandler.Region.ResourceGroup, imageReqInfo.IId.NameId, \"\")\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/KeyPairHandler.go:170:2: SA4006: this value of `err` is never used (staticcheck)\n\thashString, err := CreateHashString(keyPairHandler.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:50:2: SA4006: this value of `err` is never used (staticcheck)\n\tvm, err := vmHandler.Client.Get(vmHandler.Ctx, vmHandler.Region.ResourceGroup, vmReqInfo.IId.NameId, compute.InstanceViewTypesInstanceView)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:654:2: SA4006: this value of `err` is never used (staticcheck)\n\tsubnet, err := vmHandler.SubnetClient.Get(vmHandler.Ctx, vmHandler.Region.ResourceGroup, vmReqInfo.VpcIID.NameId, vmReqInfo.SubnetIID.NameId, \"\")\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:69:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, VMClient, err := getVMClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:73:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, imageClient, err := getImageClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:77:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, publicIPClient, err := getPublicIPClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:81:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, sgClient, err := getSecurityGroupClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:85:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, vNicClient, err := getVNicClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:89:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, SubnetClient, err := getSubnetClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:93:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, VNetClient, err := getVNetworkClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:97:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, IPConfigClient, err := getIPConfigClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:101:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, VMImageClient, err := getVMImageClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:105:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, DiskClient, err := getDiskClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:144:2: SA4006: this value of `err` is never used (staticcheck)\n\trg, err := resourceClient.Get(ctx, region.ResourceGroup)\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/KeyPairHandler.go:171:2: SA4006: this value of `err` is never used (staticcheck)\n\thashString, err := CreateHashString(keyPairHandler.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:226:2: SA4006: this value of `err` is never used (staticcheck)\n\t_, err = RunCommand(vmInfo.PublicIP, SSHDefaultPort, VMDefaultUser, VMDefaultPassword, fmt.Sprintf(\"mkdir -p /home/%s/.ssh\", loginUserId))\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:232:2: SA4006: this value of `err` is never used (staticcheck)\n\t_, err = RunCommand(vmInfo.PublicIP, SSHDefaultPort, VMDefaultUser, VMDefaultPassword, fmt.Sprintf(\"echo \\\"%s\\\" > /home/%s/.ssh/authorized_keys\", publicKey, loginUserId))\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:160:5: SA4006: this value of `err` is never used (staticcheck)\n\t\t\t\tres, err = req.PageToken(nextPageToken).Do()\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:459:5: SA4006: this value of `err` is never used (staticcheck)\n\t\t\t\tres, err = req.PageToken(nextPageToken).Do()\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:580:5: SA4006: this value of `err` is never used (staticcheck)\n\t\t\t\tres, err = req.PageToken(nextPageToken).Do()\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:410:2: SA4006: this value of `region` is never used (staticcheck)\n\tregion := vVPCHandler.Region.Region\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:129:2: SA4006: this value of `err` is never used (staticcheck)\n\tflavorList, err := flavors.ExtractFlavors(pages)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:213:4: SA4006: this value of `err` is never used (staticcheck)\n\t\t\tserverResult, err = servers.Get(vmHandler.Client, server.ID).Extract()\n\t\t\t^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:54:2: SA4006: this value of `err` is never used (staticcheck)\n\ttmpcncInfo, err := getInfo(configName)\n\t^\ncloud-control-manager/vm-ssh/sshrun.go:93:2: SA4006: this value of `err` is never used (staticcheck)\n\tsshOut, err := session.StdoutPipe()\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:161:2: SA4006: this value of `reqRegion` is never used (staticcheck)\n\treqRegion := config.Ali.Region\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:1034:2: SA4006: this value of `reqRegion` is never used (staticcheck)\n\treqRegion := config.Aws.Region\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:65:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, VMClient, err := getVMClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:69:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, imageClient, err := getImageClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:73:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, publicIPClient, err := getPublicIPClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:77:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, sgClient, err := getSecurityGroupClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:81:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, vNicClient, err := getVNicClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:85:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, SubnetClient, err := getSubnetClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:89:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, VNetClient, err := getVNetworkClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:93:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, IPConfigClient, err := getIPConfigClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:97:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, VMImageClient, err := getVMImageClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:101:2: SA4006: this value of `Ctx` is never used (staticcheck)\n\tCtx, DiskClient, err := getDiskClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:140:2: SA4006: this value of `err` is never used (staticcheck)\n\trg, err := resourceClient.Get(ctx, region.ResourceGroup)\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/test/image_test.go:87:2: SA4006: this value of `infoList` is never used (staticcheck)\n\tinfoList, err := imageHandler.ListImage()\n\t^\n"},"revive":{"run":1,"cnt":788,"details":"cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet/Request.go:27:2: var-naming: struct field TenantId should be TenantID (revive)\n\tTenantId    string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet/Request.go:73:41: var-naming: func parameter subnetId should be subnetID (revive)\nfunc Get(restClient *client.RestClient, subnetId string, requestOpts *client.RequestOpts) (*SubnetInfo, error) {\n                                        ^\napi-runtime/grpc-runtime/service/os.go:27:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) ListCloudOS(ctx context.Context, req *pb.Empty) (*pb.ListCloudOSInfoResponse, error) {\n                                 ^\napi-runtime/grpc-runtime/service/keypair.go:29:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) CreateKey(ctx context.Context, req *pb.KeyPairCreateRequest) (*pb.KeyPairInfoResponse, error) {\n                               ^\napi-runtime/grpc-runtime/service/region.go:28:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) CreateRegion(ctx context.Context, req *pb.RegionInfoRequest) (*pb.RegionInfoResponse, error) {\n                                  ^\napi-runtime/grpc-runtime/service/connection.go:28:45: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) CreateConnectionConfig(ctx context.Context, req *pb.ConnectionConfigInfoRequest) (*pb.ConnectionConfigInfoResponse, error) {\n                                            ^\napi-runtime/grpc-runtime/service/credential.go:28:39: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) CreateCredential(ctx context.Context, req *pb.CredentialInfoRequest) (*pb.CredentialInfoResponse, error) {\n                                      ^\napi-runtime/grpc-runtime/service/security.go:31:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) CreateSecurity(ctx context.Context, req *pb.SecurityCreateRequest) (*pb.SecurityInfoResponse, error) {\n                                    ^\napi-runtime/grpc-runtime/service/driver.go:28:40: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) CreateCloudDriver(ctx context.Context, req *pb.CloudDriverInfoRequest) (*pb.CloudDriverInfoResponse, error) {\n                                       ^\napi-runtime/grpc-runtime/service/ssh.go:29:29: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *SSHService) SSHRun(ctx context.Context, req *pb.SSHRunRequest) (*pb.StringResponse, error) {\n                            ^\napi-runtime/grpc-runtime/service/image.go:29:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) CreateImage(ctx context.Context, req *pb.ImageCreateRequest) (*pb.ImageInfoResponse, error) {\n                                 ^\napi-runtime/grpc-runtime/service/vm.go:30:30: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) StartVM(ctx context.Context, req *pb.VMCreateRequest) (*pb.VMInfoResponse, error) {\n                             ^\napi-runtime/grpc-runtime/service/vpc.go:30:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) CreateVPC(ctx context.Context, req *pb.VPCCreateRequest) (*pb.VPCInfoResponse, error) {\n                               ^\napi-runtime/grpc-runtime/service/region.go:57:33: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) ListRegion(ctx context.Context, req *pb.Empty) (*pb.ListRegionInfoResponse, error) {\n                                ^\napi-runtime/grpc-runtime/service/keypair.go:57:30: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListKey(ctx context.Context, req *pb.KeyPairAllQryRequest) (*pb.ListKeyPairInfoResponse, error) {\n                             ^\napi-runtime/grpc-runtime/service/credential.go:57:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) ListCredential(ctx context.Context, req *pb.Empty) (*pb.ListCredentialInfoResponse, error) {\n                                    ^\napi-runtime/grpc-runtime/service/connection.go:57:43: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) ListConnectionConfig(ctx context.Context, req *pb.Empty) (*pb.ListConnectionConfigInfoResponse, error) {\n                                          ^\napi-runtime/grpc-runtime/service/driver.go:57:38: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) ListCloudDriver(ctx context.Context, req *pb.Empty) (*pb.ListCloudDriverInfoResponse, error) {\n                                     ^\napi-runtime/grpc-runtime/service/security.go:71:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListSecurity(ctx context.Context, req *pb.SecurityAllQryRequest) (*pb.ListSecurityInfoResponse, error) {\n                                  ^\napi-runtime/grpc-runtime/service/image.go:57:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListImage(ctx context.Context, req *pb.ImageAllQryRequest) (*pb.ListImageInfoResponse, error) {\n                               ^\napi-runtime/grpc-runtime/service/vpc.go:76:30: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListVPC(ctx context.Context, req *pb.VPCAllQryRequest) (*pb.ListVPCInfoResponse, error) {\n                             ^\napi-runtime/grpc-runtime/service/vm.go:77:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ControlVM(ctx context.Context, req *pb.VMActionRequest) (*pb.StatusResponse, error) {\n                               ^\napi-runtime/grpc-runtime/service/keypair.go:80:29: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) GetKey(ctx context.Context, req *pb.KeyPairQryRequest) (*pb.KeyPairInfoResponse, error) {\n                            ^\napi-runtime/grpc-runtime/service/security.go:94:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) GetSecurity(ctx context.Context, req *pb.SecurityQryRequest) (*pb.SecurityInfoResponse, error) {\n                                 ^\napi-runtime/grpc-runtime/service/vpc.go:99:29: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) GetVPC(ctx context.Context, req *pb.VPCQryRequest) (*pb.VPCInfoResponse, error) {\n                            ^\napi-runtime/grpc-runtime/service/image.go:80:31: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) GetImage(ctx context.Context, req *pb.ImageQryRequest) (*pb.ImageInfoResponse, error) {\n                              ^\napi-runtime/grpc-runtime/service/keypair.go:103:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) DeleteKey(ctx context.Context, req *pb.KeyPairQryRequest) (*pb.BooleanResponse, error) {\n                               ^\napi-runtime/grpc-runtime/service/vm.go:93:29: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListVM(ctx context.Context, req *pb.VMAllQryRequest) (*pb.ListVMInfoResponse, error) {\n                            ^\napi-runtime/grpc-runtime/service/connection.go:79:42: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) GetConnectionConfig(ctx context.Context, req *pb.ConnectionConfigQryRequest) (*pb.ConnectionConfigInfoResponse, error) {\n                                         ^\napi-runtime/grpc-runtime/service/region.go:79:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) GetRegion(ctx context.Context, req *pb.RegionQryRequest) (*pb.RegionInfoResponse, error) {\n                               ^\napi-runtime/grpc-runtime/service/security.go:117:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) DeleteSecurity(ctx context.Context, req *pb.SecurityQryRequest) (*pb.BooleanResponse, error) {\n                                    ^\napi-runtime/grpc-runtime/service/credential.go:79:36: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) GetCredential(ctx context.Context, req *pb.CredentialQryRequest) (*pb.CredentialInfoResponse, error) {\n                                   ^\napi-runtime/grpc-runtime/service/vpc.go:122:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) DeleteVPC(ctx context.Context, req *pb.VPCQryRequest) (*pb.BooleanResponse, error) {\n                               ^\napi-runtime/grpc-runtime/service/driver.go:79:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) GetCloudDriver(ctx context.Context, req *pb.CloudDriverQryRequest) (*pb.CloudDriverInfoResponse, error) {\n                                    ^\napi-runtime/grpc-runtime/service/keypair.go:119:33: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListAllKey(ctx context.Context, req *pb.KeyPairAllQryRequest) (*pb.AllResourceInfoResponse, error) {\n                                ^\napi-runtime/grpc-runtime/service/image.go:103:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) DeleteImage(ctx context.Context, req *pb.ImageQryRequest) (*pb.BooleanResponse, error) {\n                                 ^\napi-runtime/grpc-runtime/service/connection.go:101:45: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) DeleteConnectionConfig(ctx context.Context, req *pb.ConnectionConfigQryRequest) (*pb.BooleanResponse, error) {\n                                            ^\napi-runtime/grpc-runtime/service/vm.go:116:28: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) GetVM(ctx context.Context, req *pb.VMQryRequest) (*pb.VMInfoResponse, error) {\n                           ^\napi-runtime/grpc-runtime/service/security.go:133:38: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListAllSecurity(ctx context.Context, req *pb.SecurityAllQryRequest) (*pb.AllResourceInfoResponse, error) {\n                                     ^\napi-runtime/grpc-runtime/service/region.go:101:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) DeleteRegion(ctx context.Context, req *pb.RegionQryRequest) (*pb.BooleanResponse, error) {\n                                  ^\napi-runtime/grpc-runtime/service/vpc.go:138:33: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListAllVPC(ctx context.Context, req *pb.VPCAllQryRequest) (*pb.AllResourceInfoResponse, error) {\n                                ^\napi-runtime/grpc-runtime/service/credential.go:101:39: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) DeleteCredential(ctx context.Context, req *pb.CredentialQryRequest) (*pb.BooleanResponse, error) {\n                                      ^\napi-runtime/grpc-runtime/service/keypair.go:141:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) DeleteCSPKey(ctx context.Context, req *pb.CSPKeyPairQryRequest) (*pb.BooleanResponse, error) {\n                                  ^\napi-runtime/grpc-runtime/service/driver.go:101:40: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CIMService) DeleteCloudDriver(ctx context.Context, req *pb.CloudDriverQryRequest) (*pb.BooleanResponse, error) {\n                                       ^\napi-runtime/grpc-runtime/service/security.go:155:40: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) DeleteCSPSecurity(ctx context.Context, req *pb.CSPSecurityQryRequest) (*pb.BooleanResponse, error) {\n                                       ^\napi-runtime/grpc-runtime/service/vm.go:139:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListVMStatus(ctx context.Context, req *pb.VMAllQryRequest) (*pb.ListVMStatusInfoResponse, error) {\n                                  ^\napi-runtime/grpc-runtime/service/vpc.go:160:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) DeleteCSPVPC(ctx context.Context, req *pb.CSPVPCQryRequest) (*pb.BooleanResponse, error) {\n                                  ^\napi-runtime/grpc-runtime/service/vmspec.go:28:33: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListVMSpec(ctx context.Context, req *pb.VMSpecAllQryRequest) (*pb.ListVMSpecInfoResponse, error) {\n                                ^\napi-runtime/grpc-runtime/service/vpc.go:176:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) AddSubnet(ctx context.Context, req *pb.SubnetAddRequest) (*pb.VPCInfoResponse, error) {\n                               ^\napi-runtime/grpc-runtime/service/vm.go:162:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) GetVMStatus(ctx context.Context, req *pb.VMQryRequest) (*pb.StatusResponse, error) {\n                                 ^\napi-runtime/grpc-runtime/service/vpc.go:202:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) RemoveSubnet(ctx context.Context, req *pb.SubnetQryRequest) (*pb.BooleanResponse, error) {\n                                  ^\napi-runtime/grpc-runtime/service/vmspec.go:51:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) GetVMSpec(ctx context.Context, req *pb.VMSpecQryRequest) (*pb.VMSpecInfoResponse, error) {\n                               ^\napi-runtime/grpc-runtime/service/vpc.go:218:38: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) RemoveCSPSubnet(ctx context.Context, req *pb.CSPSubnetQryRequest) (*pb.BooleanResponse, error) {\n                                     ^\napi-runtime/grpc-runtime/service/vm.go:178:34: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) TerminateVM(ctx context.Context, req *pb.VMQryRequest) (*pb.StatusResponse, error) {\n                                 ^\napi-runtime/grpc-runtime/service/vmspec.go:74:36: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListOrgVMSpec(ctx context.Context, req *pb.VMSpecAllQryRequest) (*pb.StringResponse, error) {\n                                   ^\napi-runtime/grpc-runtime/service/vmspec.go:91:35: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) GetOrgVMSpec(ctx context.Context, req *pb.VMSpecQryRequest) (*pb.StringResponse, error) {\n                                  ^\napi-runtime/grpc-runtime/service/vm.go:194:32: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) ListAllVM(ctx context.Context, req *pb.VMAllQryRequest) (*pb.AllResourceInfoResponse, error) {\n                               ^\napi-runtime/grpc-runtime/service/vm.go:216:37: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *CCMService) TerminateCSPVM(ctx context.Context, req *pb.CSPVMQryRequest) (*pb.StatusResponse, error) {\n                                    ^\ncloud-control-manager/cloud-driver/drivers/tencent-plugin/TencentDriver-lib.go:58:6: var-naming: func getVmClient should be getVMClient (revive)\nfunc getVmClient(connectionInfo idrv.ConnectionInfo) (*cvm.Client, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent-plugin/TencentDriver-lib.go:64:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := connectionInfo.RegionInfo.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent-plugin/TencentDriver-lib.go:95:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := connectionInfo.RegionInfo.Zone\n\t^\ncloud-control-manager/iid-manager/test/parallel-test.go:127:1: redefines-builtin-id: redefinition of the built-in function delete (revive)\nfunc delete(id string) {\n\tnameID := \"powerkim_vm_\" + id\t// NameID\n\tfmt.Printf(\" === DeleteIID %s\\n\", nameID)\n\n\tiId := rsid.IID{nameID, \"\"}\n        result, err3 := iidRWLock.DeleteIID(cName, rName, iId)\n        if err3 != nil {\n                config.Cblogger.Error(err3)\n        }\n\n\t//config.Cblogger.Infof(\" === DeleteIID %s : %#v\\n\", nameID, result)\n\tfmt.Printf(\" === DeleteIID %s : %#v\\n\", nameID, result)\n}\ncloud-control-manager/iid-manager/test/simple-test.go:28:9: var-naming: var iId should be iID (revive)\n        iId := rsid.IID{nameID1, \"\"}\n        ^\ncloud-control-manager/iid-manager/test/simple-test.go:30:9: var-naming: don't use underscores in Go names; var bool_ret should be boolRet (revive)\n        bool_ret, err := iidRWLock.IsExistIID(cName, rName, iId)\n        ^\ncloud-control-manager/iid-manager/test/parallel-test.go:91:2: var-naming: var iId should be iID (revive)\n\tiId := rsid.IID{nameID, \"\"}\n\t^\ncloud-control-manager/iid-manager/test/parallel-test.go:102:9: var-naming: var iId should be iID (revive)\n        iId := rsid.IID{nameID, \"i-0bc7123b7e5cbf79d\"}\n        ^\ncloud-control-manager/iid-manager/test/parallel-test.go:131:2: var-naming: var iId should be iID (revive)\n\tiId := rsid.IID{nameID, \"\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/resources/ImageHandler.go:104:37: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\treturn irs.ImageInfo{}, fmt.Errorf(\"%s image does not exist!!\", imageIID.NameId)\n\t                                   ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/KeyPairHandler.go:18:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t_ \"github.com/sirupsen/logrus\"\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/resources/SecurityHandler.go:119:40: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\treturn irs.SecurityInfo{}, fmt.Errorf(\"%s SecurityGroup does not exist!!\", iid.NameId)\n\t                                      ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMSpecHandler.go:89:38: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\treturn irs.VMSpecInfo{}, fmt.Errorf(\"%s VMSpec does not exist!!\", Name)\n\t                                    ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/KeyPairHandler.go:84:39: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\treturn irs.KeyPairInfo{}, fmt.Errorf(\"%s keypair does not exist!!\", iid.NameId)\n\t                                     ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VPCHandler.go:18:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t_ \"github.com/sirupsen/logrus\"\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMSpecHandler.go:92:55: unused-parameter: parameter 'Region' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vmSpecHandler *MockVMSpecHandler) ListOrgVMSpec(Region string) (string, error) { // return string: json format\n                                                      ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMHandler.go:67:44: var-declaration: should drop = nil from declaration of var validatedSubnetInfo; it is the zero value (revive)\n\tvar validatedSubnetInfo *irs.SubnetInfo = nil\n\t                                          ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMHandler.go:167:46: var-declaration: should drop = nil from declaration of var validatedStatusInfo; it is the zero value (revive)\n\tvar validatedStatusInfo *irs.VMStatusInfo = nil\n\t                                            ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VPCHandler.go:93:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\treturn irs.VPCInfo{}, fmt.Errorf(\"%s VPCGroup does not exist!!\", iid.NameId)\n\t                                 ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMSpecHandler.go:98:54: unused-parameter: parameter 'Region' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vmSpecHandler *MockVMSpecHandler) GetOrgVMSpec(Region string, Name string) (string, error) { // return string: json format\n                                                     ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VPCHandler.go:135:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\treturn irs.VPCInfo{}, fmt.Errorf(\"%s VPCGroup does not exist!!\", iid.NameId)\n\t                                 ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMHandler.go:197:46: var-declaration: should drop = nil from declaration of var validatedStatusInfo; it is the zero value (revive)\n\tvar validatedStatusInfo *irs.VMStatusInfo = nil\n\t                                            ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMHandler.go:226:46: var-declaration: should drop = nil from declaration of var validatedStatusInfo; it is the zero value (revive)\n\tvar validatedStatusInfo *irs.VMStatusInfo = nil\n\t                                            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:394:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\t//return irs.SecurityInfo{}, errors.New(\"[\" + securityNameId + \"] 정보를 찾을 수 없습니다.\")\n\t\treturn irs.SecurityInfo{}, errors.New(\"InvalidSecurityGroup.NotFound: The security group '\" + securityIID.SystemId + \"' does not exist\")\n\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:50:2: var-naming: var vpcId should be vpcID (revive)\n\tvpcId := securityReqInfo.VpcIID.SystemId\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:443:6: var-naming: func ExtractIpPermissionCommon should be ExtractIPPermissionCommon (revive)\nfunc ExtractIpPermissionCommon(ip *ec2.IpPermission, securityRuleInfo *irs.SecurityRuleInfo) {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:458:6: var-naming: func ExtractIpPermissions should be ExtractIPPermissions (revive)\nfunc ExtractIpPermissions(ipPermissions []*ec2.IpPermission, direction string) []irs.SecurityRuleInfo {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/ImageHandler.go:264:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn irs.ImageInfo{}, errors.New(\"조회된 Image 정보가 없습니다.\")\n\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:489:10: var-naming: range var userIdGroup should be userIDGroup (revive)\n\t\tfor _, userIdGroup := range ip.UserIdGroupPairs {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:101:26: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn nil, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:262:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn \"\", errors.New(\"VPC에 할당된 라우팅 테이블 ID를 찾을 수 없습니다.\")\n\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:123:10: empty-block: this block is empty, you can remove it (revive)\n\t\t} else {\n\t\t\t//ipPermission.SetFromPort(0)\n\t\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/ImageHandler.go:265:38: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.ImageInfo{}, errors.New(\"조회된 Image 정보가 없습니다.\")\n\t\t                                   ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:1027:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn irs.SubnetInfo{}, errors.New(\"InvalidSubnet.NotFound: The CBVnetwork '\" + reqSubnetId + \"' does not exist\")\n\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:172:26: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn nil, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:134:10: empty-block: this block is empty, you can remove it (revive)\n\t\t} else {\n\t\t\t//ipPermission.SetToPort(0)\n\t\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:33:7: var-naming: const CBDefaultVmUserName should be CBDefaultVMUserName (revive)\nconst CBDefaultVmUserName string = \"cb-user\" // default VM User Name\n      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:339:25: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn \"\", errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:39:36: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.VPCInfo{}, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:35:7: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nconst CUSTOM_ERR_CODE_TOOMANY string = \"600\"  //awserr.New(\"600\", \"n개 이상의 xxxx 정보가 존재합니다.\", nil)\n      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:190:10: empty-block: this block is empty, you can remove it (revive)\n\t\t} else {\n\t\t\t//ipPermission.SetFromPort(0)\n\t\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:263:25: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn \"\", errors.New(\"VPC에 할당된 라우팅 테이블 ID를 찾을 수 없습니다.\")\n\t\t                      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:17:6: var-naming: type AwsVmSpecHandler should be AwsVMSpecHandler (revive)\ntype AwsVmSpecHandler struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:201:10: empty-block: this block is empty, you can remove it (revive)\n\t\t} else {\n\t\t\t//ipPermission.SetToPort(0)\n\t\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:36:7: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nconst CUSTOM_ERR_CODE_NOTFOUND string = \"404\" //awserr.New(\"404\", \"XXX 정보가 존재하지 않습니다.\", nil)\n      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:42:2: var-naming: var vCpuInfo should be vCPUInfo (revive)\n\tvCpuInfo := irs.VCpuInfo{}\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:274:39: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.SubnetInfo{}, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                                    ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:40:2: var-naming: struct field VpcId should be VpcID (revive)\n\tVpcId     string\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:609:29: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\t\treturn false, errors.New(\"Subnet 삭제 실패로 VPC를 삭제하지 못 했습니다.\") //삭제 실패 이유를 모르는 경우\n\t\t\t                         ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:104:6: var-naming: var mapVmSpecIds should be mapVMSpecIds (revive)\n\tvar mapVmSpecIds map[string]string\n\t    ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:751:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn errors.New(\"VPC에 할당된 라우팅 테이블 정보를 찾을 수 없습니다.\")\n\t\t                  ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:46:2: var-naming: struct field SubnetId should be SubnetID (revive)\n\tSubnetId   string\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:35:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := VPCHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:168:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:169:49: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (VPCHandler *AwsVPCHandler) CreateRouteIGW(vpcId string, igwId string) error {\n                                                ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:221:34: var-naming: func parameter Id should be ID (revive)\nfunc SetNameTag(Client *ec2.EC2, Id string, value string) bool {\n                                 ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:175:2: var-naming: var mapVmSpecIds should be mapVMSpecIds (revive)\n\tmapVmSpecIds, errListVMSpecAZ := vmSpecHandler.ListVMSpecAZ(zoneId)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:171:2: var-naming: var routeTableId should be routeTableID (revive)\n\trouteTableId, errRoute := VPCHandler.GetDefaultRouteTable(vpcId)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:251:6: var-naming: func ConvertJsonStringNoEscape should be ConvertJSONStringNoEscape (revive)\nfunc ConvertJsonStringNoEscape(v interface{}) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:228:55: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (VPCHandler *AwsVPCHandler) GetDefaultRouteTable(vpcId string) (string, error) {\n                                                      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:335:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:259:3: var-naming: var routeTableId should be routeTableID (revive)\n\t\trouteTableId := *result.RouteTables[0].RouteTableId\n\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:257:2: var-naming: var errJson should be errJSON (revive)\n\terrJson := encoder.Encode(v)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:267:47: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (VPCHandler *AwsVPCHandler) CreateSubnet(vpcId string, reqSubnetInfo irs.SubnetInfo) (irs.SubnetInfo, error) {\n                                              ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:342:2: var-naming: var mapVmSpecIds should be mapVMSpecIds (revive)\n\tmapVmSpecIds, errListVMSpecAZ := vmSpecHandler.ListVMSpecAZ(zoneId)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:270:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := VPCHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:276:6: var-naming: func ConvertJsonString should be ConvertJSONString (revive)\nfunc ConvertJsonString(v interface{}) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:354:54: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (VPCHandler *AwsVPCHandler) AssociateRouteTable(vpcId string, subnetId string) error {\n                                                     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:426:14: var-naming: var errJson should be errJSON (revive)\n\tjsonString, errJson := ConvertJsonString(resp)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:277:13: var-naming: var errJson should be errJSON (revive)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:355:2: var-naming: var routeTableId should be routeTableID (revive)\n\trouteTableId, errRoute := VPCHandler.GetDefaultRouteTable(vpcId)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:452:14: var-naming: var errJson should be errJSON (revive)\n\tjsonString, errJson := ConvertJsonString(resp)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:727:49: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (VPCHandler *AwsVPCHandler) DeleteRouteIGW(vpcId string) error {\n                                                ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:322:13: var-naming: var errJson should be errJSON (revive)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:729:2: var-naming: var routeTableId should be routeTableID (revive)\n\trouteTableId := \"\"\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:500:14: var-naming: var errJson should be errJSON (revive)\n\tjsonString, errJson := ConvertJsonString(resp.InstanceTypes[0])\n\t            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:812:47: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (VPCHandler *AwsVPCHandler) DeleteAllIGW(vpcId string) error {\n                                              ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:855:56: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (VPCHandler *AwsVPCHandler) DetachInternetGateway(vpcId string, igwId string) error {\n                                                       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:884:44: var-naming: method parameter igwId should be igwID (revive)\nfunc (VPCHandler *AwsVPCHandler) DeleteIGW(igwId string) error {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:910:45: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (VPCHandler *AwsVPCHandler) ListSubnet(vpcId string) ([]irs.SubnetInfo, error) {\n                                            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:979:44: var-naming: method parameter reqSubnetId should be reqSubnetID (revive)\nfunc (VPCHandler *AwsVPCHandler) GetSubnet(reqSubnetId string) (irs.SubnetInfo, error) {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:345:27: empty-block: this block is empty, you can remove it (revive)\n\tif errSubnetRoute != nil {\n\t} else {\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:375:10: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t\t} else {\n\t\t\t//fmt.Println(\"Success\", result.StartingInstances)\n\t\t\tcblogger.Info(\"Success\", result.StartingInstances)\n\t\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:437:10: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t\t} else {\n\t\t\tcblogger.Info(\"Success\", result.StoppingInstances)\n\t\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:507:10: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t\t} else {\n\t\t\tcblogger.Info(\"Success\", result)\n\t\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:556:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\tcblogger.Info(\"Success\")\n\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:219:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.VMInfo{}, errors.New(\"AWS로부터 전달 받은 VM 정보가 없습니다.\")\n\t\t                                ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:939:44: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\treturn irs.VMStatus(\"Failed\"), errors.New(\"상태 정보를 찾을 수 없습니다.\")\n\t                                          ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:225:2: var-naming: var newVmId should be newVMID (revive)\n\tnewVmId := *runResult.Instances[0].InstanceId\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:286:2: var-naming: var newVmInfo should be newVMInfo (revive)\n\tnewVmInfo, _ := vmHandler.GetVM(irs.IID{SystemId: newVmId})\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:768:6: var-naming: func ExtractVmName should be ExtractVMName (revive)\nfunc ExtractVmName(Tags []*ec2.Tag) string {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:984:2: var-naming: var tmpVmName should be tmpVMName (revive)\n\ttmpVmName := \"\"\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:1016:50: var-naming: method parameter allocationId should be allocationID (revive)\nfunc (vmHandler *AwsVMHandler) AssociatePublicIP(allocationId string, instanceId string) (bool, error) {\n                                                 ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:1049:55: var-naming: method parameter vNicId should be vNicID (revive)\nfunc (vmHandler *AwsVMHandler) AttachNetworkInterface(vNicId string, instanceId string) (bool, error) {\n                                                      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/KeyPairHandler.go:274:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn irs.KeyPairInfo{}, errors.New(\"정보를 찾을 수 없습니다.\")\n\t}\ncloud-control-manager/cloud-driver/drivers/aws/resources/KeyPairHandler.go:275:40: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.KeyPairInfo{}, errors.New(\"정보를 찾을 수 없습니다.\")\n\t\t                                     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/KeyPairHandler.go:22:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t_ \"github.com/davecgh/go-spew/spew\"\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:143:2: var-naming: var securityId should be securityID (revive)\n\tsecurityId := \"sg-6wedru4yb4m6qqfvd3sj\"\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:144:2: var-naming: var vpcId should be vpcID (revive)\n\tvpcId := \"vpc-6wei16ufuimfcct41o0xh\"\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:301:2: var-naming: var keyPairId should be keyPairID (revive)\n\tkeyPairId := \"\"\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:389:2: var-naming: var reqSubnetId should be reqSubnetID (revive)\n\treqSubnetId := irs.IID{SystemId: \"vsw-6we4h4n4wp9xdtakrno15\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:414:2: var-naming: var reqVpcId should be reqVpcID (revive)\n\treqVpcId := irs.IID{SystemId: \"vpc-2u04wg6k\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:606:2: var-naming: var VmID should be VMID (revive)\n\tVmID := irs.IID{SystemId: \"ins-rqoo65fo\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/CommonHandler.go:37:2: var-naming: struct field VpcId should be VpcID (revive)\n\tVpcId     string\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/CommonHandler.go:43:2: var-naming: struct field SubnetId should be SubnetID (revive)\n\tSubnetId   string\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:131:9: var-naming: range var projectId should be projectID (revive)\n\tfor _, projectId := range arrImageProjectList {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:241:10: var-naming: var errVmInfo should be errVMInfo (revive)\n\tvmInfo, errVmInfo := vmHandler.GetVM(irs.IID{NameId: vmName, SystemId: vmName})\n\t        ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMSpecHandler.go:15:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t_ \"errors\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:118:2: var-naming: var vpcNetworkUrl should be vpcNetworkURL (revive)\n\tvpcNetworkUrl := \"https://www.googleapis.com/compute/v1/projects/\" + projectID + \"/global/networks/\" + vpcReqInfo.IId.NameId\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:502:4: var-naming: var vmId should be vmID (revive)\n\t\t\tvmId := s.Name\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:177:2: var-naming: struct field ImageUrl should be ImageURL (revive)\n\tImageUrl string //for CB(VM Start)\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:182:2: var-naming: don't use underscores in Go names; var before_time should be beforeTime (revive)\n\tbefore_time := time.Now()\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:182:2: var-naming: struct field ProjectId should be ProjectID (revive)\n\tProjectId string //for image api call\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:687:6: var-naming: var iIdBox should be iIDBox (revive)\n\tvar iIdBox IIDBox\n\t    ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:184:2: var-naming: struct field Id should be ID (revive)\n\tId string\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:183:2: var-naming: don't use underscores in Go names; var max_time should be maxTime (revive)\n\tmax_time := 300 //최대 300초간 체크\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:228:2: var-naming: var projectId should be projectID (revive)\n\tprojectId := \"\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:689:3: var-naming: var iId should be iID (revive)\n\t\tiId := irs.IID{\n\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:273:38: var-naming: method GetImageByUrl should be GetImageByURL (revive)\nfunc (imageHandler *GCPImageHandler) GetImageByUrl(imageIID irs.IID) (irs.ImageInfo, error) {\n                                     ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:200:5: var-naming: don't use underscores in Go names; var after_time should be afterTime (revive)\n\t\t\t\tafter_time := time.Now()\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:313:2: var-naming: var projectId should be projectID (revive)\n\tprojectId := gcpImageInfo.ProjectId\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:735:2: var-naming: var arrVmSpec should be arrVMSpec (revive)\n\tarrVmSpec := strings.Split(server.MachineType, \"/\")\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:314:2: var-naming: var imageId should be imageID (revive)\n\timageId := gcpImageInfo.Id\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:222:5: var-naming: don't use underscores in Go names; var after_time should be afterTime (revive)\n\t\t\t\tafter_time := time.Now()\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:376:9: var-naming: range var projectId should be projectID (revive)\n\tfor _, projectId := range arrImageProjectList {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:790:2: var-naming: var iId should be iID (revive)\n\tiId := irs.IID{\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:504:9: var-naming: range var projectId should be projectID (revive)\n\tfor _, projectId := range arrImageProjectList {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:243:2: var-naming: don't use underscores in Go names; var before_time should be beforeTime (revive)\n\tbefore_time := time.Now()\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:17:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t_ \"errors\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:244:2: var-naming: don't use underscores in Go names; var max_time should be maxTime (revive)\n\tmax_time := 300 //최대 300초간 체크\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:260:5: var-naming: don't use underscores in Go names; var after_time should be afterTime (revive)\n\t\t\t\tafter_time := time.Now()\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:282:5: var-naming: don't use underscores in Go names; var after_time should be afterTime (revive)\n\t\t\t\tafter_time := time.Now()\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:312:53: var-naming: method parameter resourceId should be resourceID (revive)\nfunc (vVPCHandler *GCPVPCHandler) WaitUntilComplete(resourceId string, isGlobalAction bool) error {\n                                                    ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:321:2: var-naming: don't use underscores in Go names; var before_time should be beforeTime (revive)\n\tbefore_time := time.Now()\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:322:2: var-naming: don't use underscores in Go names; var max_time should be maxTime (revive)\n\tmax_time := 300 //최대 300초간 체크\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:347:3: var-naming: don't use underscores in Go names; var after_time should be afterTime (revive)\n\t\tafter_time := time.Now()\n\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:389:3: var-naming: var iId should be iID (revive)\n\t\tiId := irs.IID{\n\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:412:2: var-naming: var systemId should be systemID (revive)\n\tsystemId := vpcIID.SystemId\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:610:48: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (vVPCHandler *GCPVPCHandler) CreateSubnet(vpcId string, reqSubnetInfo irs.SubnetInfo) (irs.SubnetInfo, error) {\n                                               ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:617:2: var-naming: var vpcNetworkUrl should be vpcNetworkURL (revive)\n\tvpcNetworkUrl := \"https://www.googleapis.com/compute/v1/projects/\" + projectID + \"/global/networks/\" + vpcId\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMSpecHandler.go:125:54: unused-parameter: parameter 'Region' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vmSpecHandler *GCPVMSpecHandler) ListOrgVMSpec(Region string) (string, error) {\n                                                     ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMSpecHandler.go:156:53: unused-parameter: parameter 'Region' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vmSpecHandler *GCPVMSpecHandler) GetOrgVMSpec(Region string, Name string) (string, error) {\n                                                    ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:62:37: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\treturn irs.ImageInfo{}, errors.New(\"Feature not implemented.\")\n\t                                   ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:243:38: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.ImageInfo{}, errors.New(\"ProjectId information not found in URL.\")\n\t\t                                   ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:61:50: unused-parameter: parameter 'imageReqInfo' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (imageHandler *GCPImageHandler) CreateImage(imageReqInfo irs.ImageReqInfo) (irs.ImageInfo, error) {\n                                                 ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:43:36: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.VPCInfo{}, errors.New(\"Invalid Request - VPC NameId is required.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:48:36: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.VPCInfo{}, errors.New(\"Invalid Request - Subnet information is required.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:595:1: receiver-naming: receiver name VPCHandler should be consistent with previous receiver name vVPCHandler for GCPVPCHandler (revive)\nfunc (VPCHandler *GCPVPCHandler) AddSubnet(vpcIID irs.IID, subnetInfo irs.SubnetInfo) (irs.VPCInfo, error) {\n\tcblogger.Infof(\"[%s] Subnet 추가 - CIDR : %s\", subnetInfo.IId.NameId, subnetInfo.IPv4_CIDR)\n\t//resSubnet, errSubnet := VPCHandler.CreateSubnet(vpcIID.SystemId, subnetInfo)\n\t_, errSubnet := VPCHandler.CreateSubnet(vpcIID.SystemId, subnetInfo)\n\tif errSubnet != nil {\n\t\tcblogger.Error(errSubnet)\n\t\treturn irs.VPCInfo{}, errSubnet\n\t}\n\t//cblogger.Debug(resSubnet)\n\n\treturn VPCHandler.GetVPC(vpcIID)\n\t//return irs.VPCInfo{}, nil\n}\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/SecurityHandler.go:93:71: var-naming: method parameter securityGroupId should be securityGroupID (revive)\nfunc (securityHandler *AlibabaSecurityHandler) AuthorizeSecurityRules(securityGroupId string, vpcId string, securityRuleInfos *[]irs.SecurityRuleInfo) (*[]irs.SecurityRuleInfo, error) {\n                                                                      ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/SecurityHandler.go:281:72: var-naming: method parameter securityGroupId should be securityGroupID (revive)\nfunc (securityHandler *AlibabaSecurityHandler) ExtractSecurityRuleInfo(securityGroupId string) ([]irs.SecurityRuleInfo, error) {\n                                                                       ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/SecurityHandler.go:80:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\tcblogger.Info(\"Successfully set security group AuthorizeSecurityRules\")\n\t}\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:33:2: var-naming: const CBDefaultVmUserName should be CBDefaultVMUserName (revive)\n\tCBDefaultVmUserName = \"cb-user\"\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:63:2: var-naming: struct field VpcId should be VpcID (revive)\n\tVpcId     string\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:69:2: var-naming: struct field SubnetId should be SubnetID (revive)\n\tSubnetId   string\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:90:37: var-naming: func parameter resourceId should be resourceID (revive)\nfunc SetNameTag(Client *ecs.Client, resourceId string, resourceType string, value string) bool {\n                                    ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:125:6: var-naming: func ConvertJsonString should be ConvertJSONString (revive)\nfunc ConvertJsonString(v interface{}) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:126:13: var-naming: var errJson should be errJSON (revive)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:171:13: var-naming: var errJson should be errJSON (revive)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:118:9: var-naming: range var sgId should be sgID (revive)\n\tfor _, sgId := range vmReqInfo.SecurityGroupIIDs {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:197:2: var-naming: var newVmIID should be newVMIID (revive)\n\tnewVmIID := irs.IID{SystemId: response.InstanceIdSets.InstanceIdSet[0]}\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:210:10: var-naming: var errVmInfo should be errVMInfo (revive)\n\tvmInfo, errVmInfo := vmHandler.GetVM(newVmIID)\n\t        ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:653:11: var-naming: var errVmInfo should be errVMInfo (revive)\n\t\tvmInfo, errVmInfo := vmHandler.GetVM(irs.IID{SystemId: curInstance.InstanceId})\n\t\t        ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:823:3: var-naming: var curVmStatusInfo should be curVMStatusInfo (revive)\n\t\tcurVmStatusInfo := irs.VMStatusInfo{IId: irs.IID{SystemId: vm.InstanceId}, VmStatus: vmStatus}\n\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VPCHandler.go:108:51: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (VPCHandler *AlibabaVPCHandler) CreateSubnet(vpcId string, reqSubnetInfo irs.SubnetInfo) (irs.SubnetInfo, error) {\n                                                  ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VPCHandler.go:229:49: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (VPCHandler *AlibabaVPCHandler) WaitForRun(vpcId string) error {\n                                                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VPCHandler.go:437:48: var-naming: method parameter reqSubnetId should be reqSubnetID (revive)\nfunc (VPCHandler *AlibabaVPCHandler) GetSubnet(reqSubnetId string) (irs.SubnetInfo, error) {\n                                               ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VPCHandler.go:262:23: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\t\t\treturn errors.New(\"Unknown VPC Status value.\")\n\t\t\t\t                  ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:191:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.VMInfo{}, errors.New(\"No errors have occurred, but no VMs have been created.\")\n\t\t                                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:722:44: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\treturn irs.VMStatus(\"Failed\"), errors.New(\"No status information found.\")\n\t                                          ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMSpecHandler.go:17:6: var-naming: type AlibabaVmSpecHandler should be AlibabaVMSpecHandler (revive)\ntype AlibabaVmSpecHandler struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VPCHandler.go:476:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn irs.SubnetInfo{}, errors.New(\"InvalidVSwitch.NotFound: The '\" + reqSubnetId + \"' does not exist\")\n\t}\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VPCHandler.go:261:11: superfluous-else: if block ends with a break statement, so drop this else and outdent its block (revive)\n\t\t\t} else {\n\t\t\t\treturn errors.New(\"Unknown VPC Status value.\")\n\t\t\t}\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMSpecHandler.go:33:2: var-naming: var vCpuInfo should be vCPUInfo (revive)\n\tvCpuInfo := irs.VCpuInfo{\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMSpecHandler.go:218:14: var-naming: var errJson should be errJSON (revive)\n\tjsonString, errJson := ConvertJsonString(resp.InstanceTypes)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMSpecHandler.go:266:6: var-naming: var errJson should be errJSON (revive)\n\tvar errJson error\n\t    ^\ncloud-control-manager/cloud-driver/drivers/alibaba/connect/AlibabaCloudConnection.go:43:2: var-naming: struct field VmSpecClient should be VMSpecClient (revive)\n\tVmSpecClient *ecs.Client\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:19:2: var-naming: struct field VmId should be VMID (revive)\n\tVmId       string                             `json:\"vmId\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:25:6: var-naming: type VmNicInfo should be VMNicInfo (revive)\ntype VmNicInfo struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:26:2: var-naming: struct field TenantId should be TenantID (revive)\n\tTenantId        string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:27:2: var-naming: struct field VmId should be VMID (revive)\n\tVmId            string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:31:2: var-naming: struct field Ip should be IP (revive)\n\tIp              string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:35:2: var-naming: struct field VmName should be VMName (revive)\n\tVmName          string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:37:2: var-naming: struct field AdaptiveIp should be AdaptiveIP (revive)\n\tAdaptiveIp      string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:41:2: var-naming: struct field CpuNum should be CPUNum (revive)\n\tCpuNum          string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:50:2: var-naming: struct field Id should be ID (revive)\n\tId         string `json:\"secgroup_id\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:52:2: var-naming: struct field TenantId should be TenantID (revive)\n\tTenantId   string `json:\"tenant_id\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:58:42: var-naming: func parameter serverId should be serverID (revive)\nfunc List(restClient *client.RestClient, serverId string, requestOpts *client.RequestOpts) (*[]VmNicInfo, error) {\n                                         ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:74:41: var-naming: func parameter serverId should be serverID (revive)\nfunc Get(restClient *client.RestClient, serverId string, macAddr string, requestOpts *client.RequestOpts) (*VmNicInfo, error) {\n                                        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:90:44: var-naming: func parameter serverId should be serverID (revive)\nfunc Create(restClient *client.RestClient, serverId string, requestOpts *client.RequestOpts) (*VmNicInfo, error) {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:106:44: var-naming: func parameter serverId should be serverID (revive)\nfunc Delete(restClient *client.RestClient, serverId string, macAddr string, requestOpts *client.RequestOpts) error {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:117:41: var-naming: func parameter serverId should be serverID (revive)\nfunc Put(restClient *client.RestClient, serverId string, requestOpts *client.RequestOpts, nicMac string) {\n                                        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:101:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)\n\t} else {\n\t\treturn &nicInfo, nil\n\t}\ncloud-control-manager/cloud-driver/drivers/alibaba/AlibabaDriver.go:14:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t\"C\"\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/connect/AwsCloudConnection.go:39:2: var-naming: struct field VmSpecClient should be VMSpecClient (revive)\n\tVmSpecClient   *ec2.EC2\n\t^\nutils/import-drv-region-info/import-regions.go:163:5: var-naming: struct field RegionId should be RegionID (revive)\n\t\t\t\tRegionId string       `json:\"RegionId\"`\n\t\t\t\t^\nutils/import-drv-region-info/import-regions.go:70:11: superfluous-else: if block ends with a continue statement, so drop this else and outdent its block (revive)\n\t\t\t} else {\n\t\t\t\tcblog.Error(err)\n\t\t\t\tcontinue\n\t\t\t}\ninterface/api/test/test_api.go:21:19: var-declaration: should omit type string from declaration of var identityEndpoint; it will be inferred from the right-hand side (revive)\n\tidentityEndpoint string = \"http://192.168.201.208:5000/v3\"\n\t                 ^\ninterface/api/test/test_api.go:22:19: var-declaration: should omit type string from declaration of var username; it will be inferred from the right-hand side (revive)\n\tusername         string = \"demo\"\n\t                 ^\ninterface/api/test/test_api.go:23:19: var-declaration: should omit type string from declaration of var password; it will be inferred from the right-hand side (revive)\n\tpassword         string = \"openstack\"\n\t                 ^\ninterface/api/test/test_api.go:24:19: var-declaration: should omit type string from declaration of var domainName; it will be inferred from the right-hand side (revive)\n\tdomainName       string = \"Default\"\n\t                 ^\ninterface/api/test/test_api.go:25:19: var-declaration: should omit type string from declaration of var projectID; it will be inferred from the right-hand side (revive)\n\tprojectID        string = \"b31474c562184bcbaf3496e08f5a6a4c\"\n\t                 ^\ninterface/api/test/test_api.go:26:19: var-declaration: should omit type string from declaration of var imageName; it will be inferred from the right-hand side (revive)\n\timageName        string = \"cirros-0.5.1\"\n\t                 ^\ninterface/api/test/test_api.go:27:19: var-declaration: should omit type string from declaration of var specName; it will be inferred from the right-hand side (revive)\n\tspecName         string = \"m1.tiny\"\n\t                 ^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:38:2: var-naming: var imageId should be imageID (revive)\n\timageId := \"Canonical:UbuntuServer:18.04-LTS:18.04.201804262\"\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:396:2: var-naming: var vpcId should be vpcID (revive)\n\tvpcId := irs.IID{NameId: \"CB-VNet\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:537:6: var-naming: func testVmSpecHandler should be testVMSpecHandler (revive)\nfunc testVmSpecHandler(config Config) {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:717:3: var-naming: struct field ClientId should be ClientID (revive)\n\t\tClientId       string `yaml:\"client_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:719:3: var-naming: struct field TenantId should be TenantID (revive)\n\t\tTenantId       string `yaml:\"tenant_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:742:3: var-naming: struct field ServerId should be ServerID (revive)\n\t\tServerId string `yaml:\"server_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:23:23: unused-parameter: parameter 'config' seems to be unused, consider removing or renaming it as _ (revive)\nfunc testImageHandler(config Config) {\n                      ^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:154:26: unused-parameter: parameter 'config' seems to be unused, consider removing or renaming it as _ (revive)\nfunc testSecurityHandler(config Config) {\n                         ^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:381:21: unused-parameter: parameter 'config' seems to be unused, consider removing or renaming it as _ (revive)\nfunc testVPCHandler(config Config) {\n                    ^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:466:25: unused-parameter: parameter 'config' seems to be unused, consider removing or renaming it as _ (revive)\nfunc testKeypairHandler(config Config) {\n                        ^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:54:12: empty-block: this block is empty, you can remove it (revive)\n\t\t\t\t} else {\n\t\t\t\t\t//spew.Dump(list)\n\t\t\t\t}\ntest/interface-test/cli-scenario/setup.go:31:28: var-declaration: should drop = nil from declaration of var holdStdout; it is the zero value (revive)\n\tholdStdout *os.File     = nil\n\t                          ^\ntest/interface-test/cli-scenario/setup.go:32:28: var-declaration: should drop = nil from declaration of var nullOut; it is the zero value (revive)\n\tnullOut    *os.File     = nil\n\t                          ^\ntest/interface-test/cli-scenario/setup.go:33:28: var-declaration: should drop = nil from declaration of var gs; it is the zero value (revive)\n\tgs         *grpc.Server = nil\n\t                          ^\ntest/interface-test/cli-scenario/cobra_call.go:19:16: var-declaration: should drop = \"\" from declaration of var res; it is the zero value (revive)\n\t\tres string = \"\"\n\t\t             ^\ntest/interface-test/cli-scenario/cobra_call.go:20:16: var-declaration: should drop = nil from declaration of var err; it is the zero value (revive)\n\t\terr error  = nil\n\t\t             ^\napi-runtime/grpc-runtime/interceptors/authjwt/auth.go:48:17: var-declaration: should omit type string from declaration of var tokenInfo; it will be inferred from the right-hand side (revive)\n\t\tvar tokenInfo string = \"{\"\n\t\t              ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:93:26: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn nil, fmt.Errorf(\"CredentialName is empty!\")\n\t\t                       ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:112:40: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return nil, fmt.Errorf(\"CredentialName is empty!\")\n                                       ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:198:28: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn false, fmt.Errorf(\"CredentialName is empty!\")\n\t\t                         ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:214:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"CredentialName is empty!\")\n\t\t                  ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:217:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"ProviderName is empty!\")\n\t\t                  ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:221:22: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\t\treturn fmt.Errorf(\"Key is empty!\")\n\t\t\t                  ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:23:6: var-naming: don't use underscores in Go names; func makeMgmtTRList_html should be makeMgmtTRListHTML (revive)\nfunc makeMgmtTRList_html(bgcolor string, height string, fontSize string, infoList cr.AllResourceList) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:84:6: var-naming: don't use underscores in Go names; func makeDeleteVPCMgmtFunc_js should be makeDeleteVPCMgmtFuncJs (revive)\nfunc makeDeleteVPCMgmtFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:202:6: var-naming: don't use underscores in Go names; func makeDeleteSecurityGroupMgmtFunc_js should be makeDeleteSecurityGroupMgmtFuncJs (revive)\nfunc makeDeleteSecurityGroupMgmtFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:320:6: var-naming: don't use underscores in Go names; func makeDeleteKeyPairMgmtFunc_js should be makeDeleteKeyPairMgmtFuncJs (revive)\nfunc makeDeleteKeyPairMgmtFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:438:6: var-naming: don't use underscores in Go names; func makeDeleteVMMgmtFunc_js should be makeDeleteVMMgmtFuncJs (revive)\nfunc makeDeleteVMMgmtFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:27:6: var-naming: don't use underscores in Go names; func makeDriverTRList_html should be makeDriverTRListHTML (revive)\nfunc makeDriverTRList_html(bgcolor string, height string, fontSize string, infoList []*dim.CloudDriverInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:67:6: var-naming: don't use underscores in Go names; func makeOnchangeDriverProviderFunc_js should be makeOnchangeDriverProviderFuncJs (revive)\nfunc makeOnchangeDriverProviderFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:80:6: var-naming: don't use underscores in Go names; func makeCheckBoxToggleFunc_js should be makeCheckBoxToggleFuncJs (revive)\nfunc makeCheckBoxToggleFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:267:6: var-naming: don't use underscores in Go names; func makeSelect_html should be makeSelectHTML (revive)\nfunc makeSelect_html(onchangeFunctionName string, strList []string, id string) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:286:6: var-naming: don't use underscores in Go names; func makeKeyPairSelect_html should be makeKeyPairSelectHTML (revive)\nfunc makeKeyPairSelect_html(onchangeFunctionName string, strList []string, id string) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:95:6: var-naming: don't use underscores in Go names; func makePostDriverFunc_js should be makePostDriverFuncJs (revive)\nfunc makePostDriverFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:136:6: var-naming: don't use underscores in Go names; func makeDeleteDriverFunc_js should be makeDeleteDriverFuncJs (revive)\nfunc makeDeleteDriverFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:304:6: var-naming: don't use underscores in Go names; func getResourceList_JsonByte should be getResourceListJSONByte (revive)\nfunc getResourceList_JsonByte(resourceName string) ([]byte, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:321:6: var-naming: don't use underscores in Go names; func getResourceList_with_Connection_JsonByte should be getResourceListWithConnectionJSONByte (revive)\nfunc getResourceList_with_Connection_JsonByte(connConfig string, resourceName string) ([]byte, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:257:6: var-naming: don't use underscores in Go names; func makeOnchangeCredentialProviderFunc_js should be makeOnchangeCredentialProviderFuncJs (revive)\nfunc makeOnchangeCredentialProviderFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:307:6: var-naming: don't use underscores in Go names; func makeCredentialTRList_html should be makeCredentialTRListHTML (revive)\nfunc makeCredentialTRList_html(bgcolor string, height string, fontSize string, infoList []*cim.CredentialInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:351:6: var-naming: don't use underscores in Go names; func getAllResourceList_with_Connection_JsonByte should be getAllResourceListWithConnectionJSONByte (revive)\nfunc getAllResourceList_with_Connection_JsonByte(connConfig string, resourceName string) ([]byte, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:381:6: var-naming: don't use underscores in Go names; func getResource_JsonByte should be getResourceJSONByte (revive)\nfunc getResource_JsonByte(resourceName string, name string) ([]byte, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:351:6: var-naming: don't use underscores in Go names; func makePostCredentialFunc_js should be makePostCredentialFuncJs (revive)\nfunc makePostCredentialFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:393:6: var-naming: don't use underscores in Go names; func makeDeleteCredentialFunc_js should be makeDeleteCredentialFuncJs (revive)\nfunc makeDeleteCredentialFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:398:6: var-naming: don't use underscores in Go names; func getResource_with_Connection_JsonByte should be getResourceWithConnectionJSONByte (revive)\nfunc getResource_with_Connection_JsonByte(connConfig string, resourceName string, name string) ([]byte, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:429:6: var-naming: don't use underscores in Go names; func makeActionTR_html should be makeActionTRHTML (revive)\nfunc makeActionTR_html(colspan string, f5_href string,  delete_href string, fontSize string) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:513:6: var-naming: don't use underscores in Go names; func makeOnchangeRegionProviderFunc_js should be makeOnchangeRegionProviderFuncJs (revive)\nfunc makeOnchangeRegionProviderFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:586:6: var-naming: don't use underscores in Go names; func makeRegionTRList_html should be makeRegionTRListHTML (revive)\nfunc makeRegionTRList_html(bgcolor string, height string, fontSize string, infoList []*rim.RegionInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:630:6: var-naming: don't use underscores in Go names; func makePostRegionFunc_js should be makePostRegionFuncJs (revive)\nfunc makePostRegionFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:674:6: var-naming: don't use underscores in Go names; func makeDeleteRegionFunc_js should be makeDeleteRegionFuncJs (revive)\nfunc makeDeleteRegionFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:452:6: var-naming: don't use underscores in Go names; func makeTitleTRList_html should be makeTitleTRListHTML (revive)\nfunc makeTitleTRList_html(bgcolor string, fontSize string, nameWidthList []NameWidth, hasCheckBox bool) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:794:6: var-naming: don't use underscores in Go names; func makeOnInitialInputBoxSetup_js should be makeOnInitialInputBoxSetupJs (revive)\nfunc makeOnInitialInputBoxSetup_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:805:6: var-naming: don't use underscores in Go names; func makeOnchangeConnectionConfigProviderFunc_js should be makeOnchangeConnectionConfigProviderFuncJs (revive)\nfunc makeOnchangeConnectionConfigProviderFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:948:6: var-naming: don't use underscores in Go names; func makeSetupConnectionConfigFunc_js should be makeSetupConnectionConfigFuncJs (revive)\nfunc makeSetupConnectionConfigFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1001:6: var-naming: don't use underscores in Go names; func makeConnectionConfigTRList_html should be makeConnectionConfigTRListHTML (revive)\nfunc makeConnectionConfigTRList_html(bgcolor string, height string, fontSize string, infoList []*ccim.ConnectionConfigInfo) (string, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1060:6: var-naming: don't use underscores in Go names; func makePostConnectionConfigFunc_js should be makePostConnectionConfigFuncJs (revive)\nfunc makePostConnectionConfigFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1108:6: var-naming: don't use underscores in Go names; func makeDeleteConnectionConfigFunc_js should be makeDeleteConnectionConfigFuncJs (revive)\nfunc makeDeleteConnectionConfigFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1129:6: var-naming: don't use underscores in Go names; func makeDriverNameHiddenTRList_html should be makeDriverNameHiddenTRListHTML (revive)\nfunc makeDriverNameHiddenTRList_html(infoList []*dim.CloudDriverInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1145:6: var-naming: don't use underscores in Go names; func makeCredentialNameHiddenTRList_html should be makeCredentialNameHiddenTRListHTML (revive)\nfunc makeCredentialNameHiddenTRList_html(infoList []*cim.CredentialInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1161:6: var-naming: don't use underscores in Go names; func makeRegionNameHiddenTRList_html should be makeRegionNameHiddenTRListHTML (revive)\nfunc makeRegionNameHiddenTRList_html(infoList []*rim.RegionInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:29:6: var-naming: don't use underscores in Go names; func makeVPCTRList_html should be makeVPCTRListHTML (revive)\nfunc makeVPCTRList_html(bgcolor string, height string, fontSize string, infoList []*cres.VPCInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:118:6: var-naming: don't use underscores in Go names; func makePostVPCFunc_js should be makePostVPCFuncJs (revive)\nfunc makePostVPCFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:159:6: var-naming: don't use underscores in Go names; func makePostSubnetFunc_js should be makePostSubnetFuncJs (revive)\nfunc makePostSubnetFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:186:6: var-naming: don't use underscores in Go names; func makeDeleteVPCFunc_js should be makeDeleteVPCFuncJs (revive)\nfunc makeDeleteVPCFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:210:6: var-naming: don't use underscores in Go names; func makeDeleteSubnetFunc_js should be makeDeleteSubnetFuncJs (revive)\nfunc makeDeleteSubnetFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:345:6: var-naming: don't use underscores in Go names; func makeSecurityGroupTRList_html should be makeSecurityGroupTRListHTML (revive)\nfunc makeSecurityGroupTRList_html(bgcolor string, height string, fontSize string, infoList []*cres.SecurityInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:413:6: var-naming: don't use underscores in Go names; func makePostSecurityGroupFunc_js should be makePostSecurityGroupFuncJs (revive)\nfunc makePostSecurityGroupFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:454:6: var-naming: don't use underscores in Go names; func makeDeleteSecurityGroupFunc_js should be makeDeleteSecurityGroupFuncJs (revive)\nfunc makeDeleteSecurityGroupFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:596:6: var-naming: don't use underscores in Go names; func makeKeyPairTRList_html should be makeKeyPairTRListHTML (revive)\nfunc makeKeyPairTRList_html(bgcolor string, height string, fontSize string, infoList []*cres.KeyPairInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:663:6: var-naming: don't use underscores in Go names; func makePostKeyPairFunc_js should be makePostKeyPairFuncJs (revive)\nfunc makePostKeyPairFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:697:6: var-naming: don't use underscores in Go names; func makeDeleteKeyPairFunc_js should be makeDeleteKeyPairFuncJs (revive)\nfunc makeDeleteKeyPairFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:835:6: var-naming: don't use underscores in Go names; func makeVMTRList_html should be makeVMTRListHTML (revive)\nfunc makeVMTRList_html(connConfig string, bgcolor string, height string, fontSize string, infoList []*cres.VMInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:979:6: var-naming: don't use underscores in Go names; func makePostVMFunc_js should be makePostVMFuncJs (revive)\nfunc makePostVMFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:1041:6: var-naming: don't use underscores in Go names; func makeDeleteVMFunc_js should be makeDeleteVMFuncJs (revive)\nfunc makeDeleteVMFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:1295:6: var-naming: don't use underscores in Go names; func makeVMImageTRList_html should be makeVMImageTRListHTML (revive)\nfunc makeVMImageTRList_html(bgcolor string, height string, fontSize string, infoList []*cres.ImageInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:1422:6: var-naming: don't use underscores in Go names; func makeVMSpecTRList_html should be makeVMSpecTRListHTML (revive)\nfunc makeVMSpecTRList_html(bgcolor string, height string, fontSize string, infoList []*cres.VMSpecInfo) string {\n     ^\ntest/interface-test/go-scenario/method_call.go:19:20: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr = errors.New(\"The number of params is not adapted.\")\n\t\t                 ^\ntest/interface-test/go-scenario/method_call.go:35:16: var-declaration: should drop = \"\" from declaration of var res; it is the zero value (revive)\n\t\tres string = \"\"\n\t\t             ^\ntest/interface-test/go-scenario/method_call.go:36:16: var-declaration: should drop = nil from declaration of var err; it is the zero value (revive)\n\t\terr error  = nil\n\t\t             ^\ntest/interface-test/go-scenario/setup.go:39:2: var-naming: var CimApi should be CimAPI (revive)\n\tCimApi     *api.CIMApi  = nil\n\t^\ntest/interface-test/go-scenario/setup.go:40:2: var-naming: var CcmApi should be CcmAPI (revive)\n\tCcmApi     *api.CCMApi  = nil\n\t^\ntest/interface-test/go-scenario/setup.go:37:28: var-declaration: should drop = nil from declaration of var holdStdout; it is the zero value (revive)\n\tholdStdout *os.File     = nil\n\t                          ^\ntest/interface-test/go-scenario/setup.go:38:28: var-declaration: should drop = nil from declaration of var nullOut; it is the zero value (revive)\n\tnullOut    *os.File     = nil\n\t                          ^\ntest/interface-test/go-scenario/setup.go:41:28: var-declaration: should drop = nil from declaration of var gs; it is the zero value (revive)\n\tgs         *grpc.Server = nil\n\t                          ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:44:2: var-naming: var securityId should be securityID (revive)\n\tsecurityId := \"sg1234\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:130:2: var-naming: var securityId should be securityID (revive)\n\tsecurityId := \"cb-securitytest-all\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:133:2: var-naming: var vpcId should be vpcID (revive)\n\tvpcId := \"cb-vpc-load-test\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:425:2: var-naming: var reqSubnetId should be reqSubnetID (revive)\n\treqSubnetId := irs.IID{SystemId: \"addtest-subnet\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:459:2: var-naming: var reqVpcId should be reqVpcID (revive)\n\treqVpcId := irs.IID{SystemId: vpcReqInfo.IId.NameId} //GCP는 SystemId에 NameId사용\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:825:2: var-naming: var VmID should be VMID (revive)\n\tVmID := irs.IID{SystemId: \"mcloud-barista-vm-test\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip/Request.go:37:2: var-naming: struct field TenantId should be TenantID (revive)\n\tTenantId    string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip/Request.go:41:2: var-naming: struct field PrivateIp should be PrivateIP (revive)\n\tPrivateIp   string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip/Request.go:44:2: var-naming: struct field VmName should be VMName (revive)\n\tVmName      string\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/conf/Test_Config.go:36:3: var-naming: struct field SecretId should be SecretID (revive)\n\t\tSecretId  string `yaml:\"tencent_secret_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:52:2: var-naming: var securityId should be securityID (revive)\n\tsecurityId := \"sg-0d6a2bb960481ce68\"\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:53:2: var-naming: var vpcId should be vpcID (revive)\n\tvpcId := \"vpc-0c4d36a3ac3924419\"\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:211:2: var-naming: var securityId should be securityID (revive)\n\tsecurityId := config.Aws.SecurityGroupID\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:586:2: var-naming: var reqSubnetId should be reqSubnetID (revive)\n\treqSubnetId := irs.IID{SystemId: \"vpc-04f6de5c2af880978\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:871:2: var-naming: var VmID should be VMID (revive)\n\tVmID := irs.IID{SystemId: \"i-08f13a125cc74bef6\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:1259:3: var-naming: struct field VmID should be VMID (revive)\n\t\tVmID         string `yaml:\"ec2_instance_id\"`\n\t\t^\ninterface/cli/spider/cmd/gclient.go:46:38: unused-parameter: parameter 'args' seems to be unused, consider removing or renaming it as _ (revive)\nfunc SetupAndRun(cmd *cobra.Command, args []string) {\n                                     ^\ninterface/cli/spider/cmd/gclient.go:53:21: var-declaration: should drop = nil from declaration of var cim; it is the zero value (revive)\n\t\tcim *api.CIMApi = nil\n\t\t                  ^\ninterface/cli/spider/cmd/root.go:22:12: var-declaration: should omit type string from declaration of var Version; it will be inferred from the right-hand side (revive)\n\tVersion   string = \"latest\"\n\t          ^\ninterface/cli/spider/cmd/gclient.go:54:21: var-declaration: should drop = nil from declaration of var ccm; it is the zero value (revive)\n\t\tccm *api.CCMApi = nil\n\t\t                  ^\ninterface/cli/spider/cmd/root.go:23:12: var-declaration: should omit type string from declaration of var CommitSHA; it will be inferred from the right-hand side (revive)\n\tCommitSHA string = \"development build\"\n\t          ^\ninterface/cli/spider/cmd/root.go:24:21: var-declaration: should drop = \"\" from declaration of var Time; it is the zero value (revive)\n\tTime      string = \"\"\n\t                   ^\ninterface/cli/spider/cmd/root.go:25:21: var-declaration: should drop = \"\" from declaration of var User; it is the zero value (revive)\n\tUser      string = \"\"\n\t                   ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/conf/Test_Config.go:52:3: var-naming: struct field VmID should be VMID (revive)\n\t\tVmID         string `yaml:\"ec2_instance_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:365:3: var-naming: struct field VmID should be VMID (revive)\n\t\tVmID         string `yaml:\"ec2_instance_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/call-log/test/calllog_test.go:25:18: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)\nfunc TestCallLog(t *testing.T) {\n                 ^\ncloud-control-manager/cloud-driver/drivers/gcp/GCPDriver.go:14:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t\"C\"\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:33:7: var-naming: const CBDefaultVmUserName should be CBDefaultVMUserName (revive)\nconst CBDefaultVmUserName string = \"cb-user\" // default VM User Name\n      ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:37:2: var-naming: struct field VpcId should be VpcID (revive)\n\tVpcId     string\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:43:2: var-naming: struct field SubnetId should be SubnetID (revive)\n\tSubnetId   string\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/ImageHandler.go:191:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn irs.ImageInfo{}, errors.New(\"정보를 찾을 수 없습니다\")\n\t}\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:310:46: var-naming: method GetLocalKeyId should be GetLocalKeyID (revive)\nfunc (keyPairHandler *TencentKeyPairHandler) GetLocalKeyId(keyIID irs.IID) (string, error) {\n                                             ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:46:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := VPCHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:70:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := vmHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/SecurityHandler.go:231:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn irs.SecurityInfo{}, errors.New(\"InvalidSecurityGroupId.NotFound: The SecurityGroup \" + securityIID.SystemId + \" does not exist\")\n\t}\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:16:6: var-naming: type TencentVmSpecHandler should be TencentVMSpecHandler (revive)\ntype TencentVmSpecHandler struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:46:7: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nconst CUSTOM_ERR_CODE_TOOMANY string = \"600\"  //awserr.New(\"600\", \"n개 이상의 xxxx 정보가 존재합니다.\", nil)\n      ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:86:2: var-naming: var newVpcId should be newVpcID (revive)\n\tnewVpcId := *response.Response.Vpc.VpcId // Subnet이 포함된 정보를 전달해야 하기 때문에 생성된 VPC Id를 보관함.\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:330:2: var-naming: var keyPairId should be keyPairID (revive)\n\tkeyPairId, errGet := keyPairHandler.GetLocalKeyId(keyIID)\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:208:2: var-naming: var newVmIID should be newVMIID (revive)\n\tnewVmIID := irs.IID{SystemId: *response.Response.InstanceIdSet[0]}\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:47:7: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nconst CUSTOM_ERR_CODE_NOTFOUND string = \"404\" //awserr.New(\"404\", \"XXX 정보가 존재하지 않습니다.\", nil)\n      ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:25:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:64:34: var-naming: func parameter Id should be ID (revive)\nfunc SetNameTag(Client *ec2.EC2, Id string, value string) bool {\n                                 ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:302:49: var-naming: method parameter reqVpcId should be reqVpcID (revive)\nfunc (VPCHandler *TencentVPCHandler) ListSubnet(reqVpcId string) ([]irs.SubnetInfo, error) {\n                                                ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:217:10: var-naming: var errVmInfo should be errVMInfo (revive)\n\tvmInfo, errVmInfo := vmHandler.GetVM(newVmIID)\n\t        ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:94:6: var-naming: func ConvertJsonStringNoEscape should be ConvertJSONStringNoEscape (revive)\nfunc ConvertJsonStringNoEscape(v interface{}) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:83:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:426:10: var-naming: var errVmInfo should be errVMInfo (revive)\n\tvmInfo, errVmInfo := vmHandler.ExtractDescribeInstances(response.Response.InstanceSet[0])\n\t        ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:364:52: var-naming: method parameter reqSubnetNameId should be reqSubnetNameID (revive)\nfunc (VPCHandler *TencentVPCHandler) isExistSubnet(reqSubnetNameId string) (bool, error) {\n                                                   ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:141:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:100:2: var-naming: var errJson should be errJSON (revive)\n\terrJson := encoder.Encode(v)\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:394:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := VPCHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:431:61: var-naming: method parameter curVm should be curVM (revive)\nfunc (vmHandler *TencentVMHandler) ExtractDescribeInstances(curVm *cvm.Instance) (irs.VMInfo, error) {\n                                                            ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:119:6: var-naming: func ConvertJsonString should be ConvertJSONString (revive)\nfunc ConvertJsonString(v interface{}) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:183:14: var-naming: var errJson should be errJSON (revive)\n\tjsonString, errJson := ConvertJsonString(response.Response.InstanceTypeConfigSet)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:503:10: var-naming: range var curSecurityGroupId should be curSecurityGroupID (revive)\n\t\tfor _, curSecurityGroupId := range curVm.SecurityGroupIds {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:196:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:120:13: var-naming: var errJson should be errJSON (revive)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:243:15: var-naming: var errJson should be errJSON (revive)\n\t\tjsonString, errJson := ConvertJsonString(response.Response.InstanceTypeConfigSet[0])\n\t\t            ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:593:9: var-naming: range var curVm should be curVM (revive)\n\tfor _, curVm := range response.Response.InstanceSet {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:260:2: var-naming: var vCpuInfo should be vCPUInfo (revive)\n\tvCpuInfo := irs.VCpuInfo{}\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:165:13: var-naming: var errJson should be errJSON (revive)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:675:9: var-naming: range var curVm should be curVM (revive)\n\tfor _, curVm := range response.Response.InstanceStatusSet {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:50:36: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.VPCInfo{}, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:398:36: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.VPCInfo{}, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:402:36: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.VPCInfo{}, errors.New(\"생성할 SubnetId 정보가 없습니다.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:22:55: unused-parameter: parameter 'Region' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vmSpecHandler *TencentVmSpecHandler) ListVMSpec(Region string) ([]*irs.VMSpecInfo, error) {\n                                                      ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:79:54: unused-parameter: parameter 'Region' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vmSpecHandler *TencentVmSpecHandler) GetVMSpec(Region string, Name string) (irs.VMSpecInfo, error) {\n                                                     ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:138:58: unused-parameter: parameter 'Region' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vmSpecHandler *TencentVmSpecHandler) ListOrgVMSpec(Region string) (string, error) {\n                                                         ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:192:57: unused-parameter: parameter 'Region' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vmSpecHandler *TencentVmSpecHandler) GetOrgVMSpec(Region string, Name string) (string, error) {\n                                                        ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:30:26: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn nil, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:88:39: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.VMSpecInfo{}, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                                    ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:146:25: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn \"\", errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                      ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:19:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t_ \"github.com/davecgh/go-spew/spew\"\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:305:40: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn irs.KeyPairInfo{}, errors.New(\"정보를 찾을 수 없습니다.\")\n\t\t                                     ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:201:25: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn \"\", errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                      ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:133:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn irs.VMSpecInfo{}, errors.New(\"정보를 찾을 수 없습니다\")\n\t}\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:304:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn irs.KeyPairInfo{}, errors.New(\"정보를 찾을 수 없습니다.\")\n\t}\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:322:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn \"\", errors.New(\"InvalidKeyPair.NotFound: The KeyPair \" + keyIID.SystemId + \" does not exist\")\n\t}\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:250:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn \"\", errors.New(\"정보를 찾을 수 없습니다\")\n\t}\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/Test_Vm.go:43:2: var-naming: var VmID should be VMID (revive)\n\tVmID := irs.IID{\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:89:2: var-naming: struct field Id should be ID (revive)\n\tId               string\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:100:2: var-naming: struct field Id should be ID (revive)\n\tId            string\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:109:2: var-naming: struct field Id should be ID (revive)\n\tId   string\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:113:2: var-naming: struct field PublicIp should be PublicIP (revive)\n\tPublicIp                string // AWS\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:115:2: var-naming: struct field AllocationId should be AllocationID (revive)\n\tAllocationId            string // AWS:할당ID\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:116:2: var-naming: struct field AssociationId should be AssociationID (revive)\n\tAssociationId           string // AWS:연결ID\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:117:2: var-naming: struct field InstanceId should be InstanceID (revive)\n\tInstanceId              string // AWS:연결된 VM, GCP:연결된 VM name\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:118:2: var-naming: struct field NetworkInterfaceId should be NetworkInterfaceID (revive)\n\tNetworkInterfaceId      string // AWS:연결된 Nic\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:119:2: var-naming: struct field NetworkInterfaceOwnerId should be NetworkInterfaceOwnerID (revive)\n\tNetworkInterfaceOwnerId string // AWS\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:120:2: var-naming: struct field PrivateIpAddress should be PrivateIPAddress (revive)\n\tPrivateIpAddress        string // AWS\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:134:2: var-naming: struct field ClientId should be ClientID (revive)\n\tClientId         string // Azure Credential\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:136:2: var-naming: struct field TenantId should be TenantID (revive)\n\tTenantId         string // Azure Credential\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:137:2: var-naming: struct field SubscriptionId should be SubscriptionID (revive)\n\tSubscriptionId   string // Azure Credential\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:144:2: var-naming: don't use underscores in Go names; struct field Client_Email should be ClientEmail (revive)\n\tClient_Email     string // GCP\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:145:2: var-naming: don't use underscores in Go names; struct field Private_Key should be PrivateKey (revive)\n\tPrivate_Key      string // GCP\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:474:2: var-naming: var infoJson should be infoJSON (revive)\n\tinfoJson, err := info.MarshalJSON()\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:491:2: var-naming: var listJson should be listJSON (revive)\n\tlistJson, err := list.MarshalJSON()\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:520:2: var-naming: var imageListJson should be imageListJSON (revive)\n\timageListJson, err := list.MarshalJSON()\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:221:18: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc getPublicIP(ctx context.Context, service *compute.Service, region string, publicNm string, conf Config) {\n                 ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:485:13: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc ListVM(ctx context.Context, service *compute.Service, zone string, conf Config) []byte {\n            ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:554:61: unused-parameter: parameter 'conf' seems to be unused, consider removing or renaming it as _ (revive)\nfunc getVnet(ctx context.Context, service *compute.Service, conf Config, name string) {\n                                                            ^\ncloud-info-manager/CloudOSList.go:10:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t_ \"fmt\"\n\t^\ncloud-control-manager/cloud-driver/drivers/ibmcloud-vpc/IBMCloudDriver.go:1:1: var-naming: don't use an underscore in package name (revive)\npackage ibmcloud_vpc\n\ntype IbmCloudDriver struct{}\n\nvar CloudDriver IbmCloudDriver\ncloud-control-manager/cloud-driver/drivers/openstack/resources/ImageHandler.go:148:2: var-naming: var imageId should be imageID (revive)\n\timageId, err := imageHandler.IDFromName(imageHandler.Client, imageIID.NameId)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/ImageHandler.go:169:2: var-naming: var imageId should be imageID (revive)\n\timageId, err := imageHandler.IDFromName(imageHandler.Client, imageIID.NameId)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:54:9: var-naming: range var subnetId should be subnetID (revive)\n\tfor i, subnetId := range nvpc.Subnets {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:97:6: var-naming: func GetCBVNetId should be GetCBVNetID (revive)\nfunc GetCBVNetId(client *gophercloud.ServiceClient) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMSpecHandler.go:66:2: var-naming: var vmSpecId should be vmSpecID (revive)\n\tvmSpecId, err := vmSpecHandler.getIDFromName(vmSpecHandler.Client, Name)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/ImageHandler.go:77:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Image files in path %s not exist\", imageFilePath))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/SecurityHandler.go:92:17: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\t\tcreateErr := errors.New(fmt.Sprintf(\"Security Group with name %s already exist\", securityReqInfo.IId.NameId))\n\t\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:102:6: var-naming: var vNetworkId should be vNetworkID (revive)\n\tvar vNetworkId string\n\t    ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:136:2: var-naming: var routerId should be routerID (revive)\n\trouterId, err := vpcHandler.CreateRouter(vpcReqInfo.IId.NameId)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/ImageHandler.go:195:14: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\treturn \"\", errors.New(fmt.Sprintf(\"found multiple images with name %s\", imageName))\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMSpecHandler.go:121:2: var-naming: var vmSpecId should be vmSpecID (revive)\n\tvmSpecId, err := vmSpecHandler.getIDFromName(vmSpecHandler.Client, Name)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:174:62: var-naming: func parameter subnetId should be subnetID (revive)\nfunc GetSubnetByID(networkClient *gophercloud.ServiceClient, subnetId string) (*subnets.Subnet, error) {\n                                                             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/ImageHandler.go:197:14: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\treturn \"\", errors.New(fmt.Sprintf(\"could not found image with name %s\", imageName))\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:220:2: var-naming: var routerId should be routerID (revive)\n\trouterId, err := vpcHandler.GetRouter(vpcIID.NameId)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:80:13: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get vpc list, err=%s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMSpecHandler.go:84:60: unused-parameter: parameter 'Region' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vmSpecHandler *OpenStackVMSpecHandler) ListOrgVMSpec(Region string) (string, error) {\n                                                           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:268:53: var-naming: method parameter vpcId should be vpcID (revive)\nfunc (vpcHandler *OpenStackVPCHandler) CreateSubnet(vpcId string, reqSubnetInfo irs.SubnetInfo) (irs.SubnetInfo, error) {\n                                                    ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMSpecHandler.go:117:59: unused-parameter: parameter 'Region' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vmSpecHandler *OpenStackVMSpecHandler) GetOrgVMSpec(Region string, Name string) (string, error) {\n                                                          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:85:14: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\treturn \"\", errors.New(fmt.Sprintf(\"Failed to get vpc list, external vpc not exist\"))\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMSpecHandler.go:164:14: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\treturn \"\", errors.New(fmt.Sprintf(\"found multiple images with name %s\", imageName))\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:342:2: var-naming: var routerId should be routerID (revive)\n\trouterId := routerList[0].ID\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMSpecHandler.go:166:14: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\treturn \"\", errors.New(fmt.Sprintf(\"could not found image with name %s\", imageName))\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:135:13: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\treturn \"\", errors.New(fmt.Sprintf(\"could not found Flavor with name %s \", flavorName))\n\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:348:2: var-naming: var routerId should be routerID (revive)\n\trouterId, err := vpcHandler.GetRouter(vpcName)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:362:53: var-naming: method parameter subnetId should be subnetID (revive)\nfunc (vpcHandler *OpenStackVPCHandler) AddInterface(subnetId string, routerId string) (bool, error) {\n                                                    ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:475:10: superfluous-else: if block ends with a break statement, so drop this else and outdent its block (revive)\n\t\t} else {\n\t\t\tfmt.Println(fmt.Sprintf(\"[%d] err = %s\", curRetryCnt, err))\n\t\t}\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:153:14: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\treturn nil, errors.New(fmt.Sprintf(\"could not found SecurityGroups with name %s \", securityName))\n\t            ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:133:2: var-naming: var vmSpecId should be vmSpecID (revive)\n\tvmSpecId, err := GetFlavorByName(vmHandler.Client, vmReqInfo.VMSpecName)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:151:2: var-naming: var sgIdArr should be sgIDArr (revive)\n\tsgIdArr := make([]string, len(vmReqInfo.SecurityGroupIIDs))\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:171:14: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\treturn nil, errors.New(fmt.Sprintf(\"could not found SecurityGroups with name %s \", networkName))\n\t            ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:491:6: var-naming: func getVmStatus should be getVMStatus (revive)\nfunc getVmStatus(vmStatus string) irs.VMStatus {\n     ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:375:56: var-naming: method parameter subnetId should be subnetID (revive)\nfunc (vpcHandler *OpenStackVPCHandler) DeleteInterface(subnetId string, routerId string) (bool, error) {\n                                                       ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:537:3: var-naming: var imageId should be imageID (revive)\n\t\timageId := server.Image[\"id\"].(string)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:197:14: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\treturn nil, errors.New(fmt.Sprintf(\"could not found SecurityGroups with name %s \", deviceID))\n\t            ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:548:2: var-naming: var flavorId should be flavorID (revive)\n\tflavorId := server.Flavor[\"id\"].(string)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:556:3: var-naming: var securityGroupIdArr should be securityGroupIDArr (revive)\n\t\tsecurityGroupIdArr := make([]irs.IID, len(server.SecurityGroups))\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:54:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to get vm with name %s\", vmReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:60:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to extract vm information with name %s\", vmReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:65:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"VirtualMachine with name %s already exist\", vmReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:221:25: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\t\treturn irs.VMInfo{}, errors.New(fmt.Sprintf(\"failed to start vm, exceeded maximum retry count %d\", maxRetryCnt))\n\t\t\t                     ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:484:18: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\t\treturn false, errors.New(fmt.Sprintf(\"failed to associate floating ip to vm, exceeded maximum retry count %d\", maxRetryCnt))\n\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:417:53: unused-parameter: parameter 'vpcIID' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vpcHandler *OpenStackVPCHandler) RemoveSubnet(vpcIID irs.IID, subnetIID irs.IID) (bool, error) {\n                                                    ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:95:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"VPC with name %s already exist\", vpcReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:129:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to get vpc with Id %s, err=%s\", vpc.ID, err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:138:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to get create router, err=%s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:147:17: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to get create router interface, err=%s\", err.Error()))\n\t\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:166:13: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get vpc list, err=%s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:175:13: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get vpc list, err=%s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:197:13: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get vpc with Id %s, err=%s\", vpcIID.SystemId, err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:213:13: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get vpc with Id %s, err=%s\", vpcIID.SystemId, err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:222:13: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get router, err=%s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:228:14: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to delete router interface, err=%s\", err.Error()))\n\t\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:239:14: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to delete router, err=%s\", err.Error()))\n\t\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:259:13: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to delete vpc, err=%s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:403:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to create Subnet with name %s, err=%s\", subnetCreateOpts.Name, err.Error()))\n\t\t             ^\napi-runtime/meerkat-runtime/childkat/ChildKat.go:22:33: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *Server) GetChildStatus(ctx context.Context, in *common.Empty) (*common.Status, error) {\n                                ^\napi-runtime/meerkat-runtime/childkat/ChildKat.go:36:29: unused-parameter: parameter 'ctx' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (s *Server) RunCommand(ctx context.Context, cmd *common.Command) (*common.CommandResult, error) {\n                            ^\napi-runtime/grpc-runtime/common/cbconnection.go:48:31: var-declaration: should drop = nil from declaration of var tracer; it is the zero value (revive)\n\t\ttracer opentracing.Tracer = nil\n\t\t                            ^\napi-runtime/grpc-runtime/common/cbconnection.go:49:31: var-declaration: should drop = nil from declaration of var closer; it is the zero value (revive)\n\t\tcloser io.Closer          = nil\n\t\t                            ^\napi-runtime/grpc-runtime/common/cbserver.go:57:48: var-declaration: should drop = nil from declaration of var tracer; it is the zero value (revive)\n\t\ttracer      opentracing.Tracer             = nil\n\t\t                                             ^\napi-runtime/grpc-runtime/common/cbserver.go:58:48: var-declaration: should drop = nil from declaration of var closer; it is the zero value (revive)\n\t\tcloser      io.Closer                      = nil\n\t\t                                             ^\napi-runtime/grpc-runtime/common/cbserver.go:59:48: var-declaration: should drop = nil from declaration of var reg; it is the zero value (revive)\n\t\treg         *prometheus.Registry           = nil\n\t\t                                             ^\napi-runtime/grpc-runtime/common/cbserver.go:60:48: var-declaration: should drop = nil from declaration of var grpcMetrics; it is the zero value (revive)\n\t\tgrpcMetrics *grpc_prometheus.ServerMetrics = nil\n\t\t                                             ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:130:2: var-naming: var contJson should be contJSON (revive)\n\tcontJson, err := vmHandler.Client.ContainerInspect(vmHandler.Context, resp.ID)\n\t^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:139:77: var-naming: func parameter contJson should be contJSON (revive)\nfunc getVMInfoByContainerJSON(regionInfo idrv.RegionInfo, vmReqIID irs.IID, contJson types.ContainerJSON) irs.VMInfo {\n                                                                            ^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:18:2: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\n\tFIXED_SUBNET_CIDR bool // support: true, do not support: false\n\t^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:19:2: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\n\tVPC_CIDR          bool // support: true, do not support: false\n\t^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:34:2: var-naming: struct field ClientId should be ClientID (revive)\n\tClientId         string // Azure Credential\n\t^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:36:2: var-naming: struct field TenantId should be TenantID (revive)\n\tTenantId         string // Azure Credential\n\t^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:37:2: var-naming: struct field SubscriptionId should be SubscriptionID (revive)\n\tSubscriptionId   string // Azure Credential\n\t^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:49:2: var-naming: struct field ApiKey should be APIKey (revive)\n\tApiKey\t\t\t string // Ibm\n\t^\ncloud-control-manager/cloud-driver/call-log/config.go:50:17: unreachable-code: unreachable code after this statement (revive)\n                log.Fatalf(\"$CBSPIDER_ROOT is not set!!\")\n                ^\ncloud-control-manager/cloud-driver/call-log/calllogger.go:125:21: unused-parameter: parameter 'loggerName' seems to be unused, consider removing or renaming it as _ (revive)\nfunc levelSetupLoop(loggerName string) {\n                    ^\ncloud-control-manager/cloud-driver/call-log/calllogger.go:30:6: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\ntype CLOUD_OS string\n     ^\ncloud-control-manager/cloud-driver/call-log/calllogger.go:31:6: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\ntype RES_TYPE string\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:109:7: var-naming: var VmSpecClient should be VMSpecClient (revive)\n\tCtx, VmSpecClient, err := getVmSpecClient(connectionInfo.CredentialInfo)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:300:6: var-naming: func getVmSpecClient should be getVMSpecClient (revive)\nfunc getVmSpecClient(credential idrv.CredentialInfo) (context.Context, *compute.VirtualMachineSizesClient, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:25:15: unused-parameter: parameter 'config' seems to be unused, consider removing or renaming it as _ (revive)\nfunc createVM(config Config, vmHandler irs.VMHandler) (*string, error) {\n              ^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:31:2: var-naming: var vpcId should be vpcID (revive)\n\tvpcId := \"5943bba1-237f-4ab1-bac5-70a8e08a1584\"\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:32:2: var-naming: var securityId should be securityID (revive)\n\tsecurityId := \"1220bb01-e93d-4d39-9475-523f519322a2\"\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:133:5: var-naming: var vmId should be vmID (revive)\n\t\t\t\tvmId, err := createVM(config, vmHandler)\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:212:3: var-naming: struct field ImageId should be ImageID (revive)\n\t\tImageId          string `yaml:\"image_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:213:3: var-naming: struct field FlavorId should be FlavorID (revive)\n\t\tFlavorId         string `yaml:\"flavor_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:214:3: var-naming: struct field NetworkId should be NetworkID (revive)\n\t\tNetworkId        string `yaml:\"network_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:218:3: var-naming: struct field ServerId should be ServerID (revive)\n\t\tServerId   string `yaml:\"server_id\"`\n\t\t^\ncloud-info-manager/driver-info-manager/DriverInfoManager.go:131:25: unused-parameter: parameter 'driverLibFileName' seems to be unused, consider removing or renaming it as _ (revive)\nfunc checkDriverLibFile(driverLibFileName string) error {\n                        ^\ncloud-info-manager/driver-info-manager/DriverInfoManager.go:86:26: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn nil, fmt.Errorf(\"DriverName is empty!\")\n\t\t                       ^\ncloud-info-manager/driver-info-manager/DriverInfoManager.go:102:28: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn false, fmt.Errorf(\"DriverName is empty!\")\n\t\t                         ^\ncloud-info-manager/driver-info-manager/DriverInfoManager.go:118:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"DriverName is empty!\")\n\t\t                  ^\ncloud-info-manager/driver-info-manager/DriverInfoManager.go:121:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"ProviderName is empty!\")\n\t\t                  ^\ncloud-info-manager/driver-info-manager/DriverInfoManager.go:124:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"DriverLibFileName is empty!\")\n\t\t                  ^\ncloud-control-manager/cloud-driver/interfaces/resources/IId.go:15:9: var-naming: struct field NameId should be NameID (revive)\n        NameId     string // NameID by user\n        ^\ncloud-control-manager/cloud-driver/interfaces/resources/IId.go:16:9: var-naming: struct field SystemId should be SystemID (revive)\n        SystemId   string // SystemID by CloudOS\n        ^\ncloud-control-manager/cloud-driver/interfaces/resources/VMHandler.go:29:2: var-naming: struct field VMUserId should be VMUserID (revive)\n\tVMUserId     string\n\t^\ncloud-control-manager/cloud-driver/interfaces/resources/VPCHandler.go:17:2: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\tIPv4_CIDR string \n\t^\ncloud-control-manager/cloud-driver/interfaces/resources/VPCHandler.go:23:2: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\tIPv4_CIDR string \n\t^\ncloud-control-manager/cloud-driver/interfaces/resources/VMHandler.go:35:2: var-naming: struct field VmStatus should be VMStatus (revive)\n\tVmStatus VMStatus\n\t^\ncloud-control-manager/cloud-driver/interfaces/resources/VMHandler.go:76:2: var-naming: struct field VMUserId should be VMUserID (revive)\n\tVMUserId     string // ex) user1\n\t^\ncloud-control-manager/cloud-driver/interfaces/resources/VPCHandler.go:31:2: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\tIPv4_CIDR string \n\t^\ncloud-control-manager/cloud-driver/drivers/azure/connect/Azure_CloudConnection.go:45:2: var-naming: struct field VmSpecClient should be VMSpecClient (revive)\n\tVmSpecClient        *compute.VirtualMachineSizesClient\n\t^\napi-runtime/rest-runtime/CBSpiderRuntime.go:320:6: var-naming: func ApiServer should be APIServer (revive)\nfunc ApiServer(routes []route) {\n     ^\napi-runtime/rest-runtime/CBSpiderRuntime.go:328:2: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\n\tAPI_USERNAME := os.Getenv(\"API_USERNAME\")\n\t^\napi-runtime/rest-runtime/CBSpiderRuntime.go:329:2: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\n\tAPI_PASSWORD := os.Getenv(\"API_PASSWORD\")\n\t^\napi-runtime/rest-runtime/CCMRest.go:232:3: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\t\tIPv4_CIDR      string\n\t\t^\napi-runtime/rest-runtime/CCMRest.go:235:4: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\t\t\tIPv4_CIDR string\n\t\t\t^\napi-runtime/rest-runtime/CCMRest.go:425:4: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\t\t\tIPv4_CIDR string\n\t\t\t^\napi-runtime/rest-runtime/CCMRest.go:1129:4: var-naming: struct field VMUserId should be VMUserID (revive)\n\t\t\tVMUserId     string\n\t\t\t^\napi-runtime/rest-runtime/CBSpiderRuntime.go:117:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else { // \"1.2.3.4:31024\" or \"localhost:31024\"\n\t\treturn strs[0]\n\t}\ninterface/api/ccm.go:63:2: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\tIPv4_CIDR      string        `yaml:\"IPv4_CIDR\" json:\"IPv4_CIDR\"`\n\t^\ninterface/api/ccm.go:70:2: var-naming: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (revive)\n\tIPv4_CIDR string `yaml:\"IPv4_CIDR\" json:\"IPv4_CIDR\"`\n\t^\ninterface/api/ccm.go:129:2: var-naming: struct field VMUserId should be VMUserID (revive)\n\tVMUserId     string `yaml:\"VMUserId\" json:\"VMUserId\"`\n\t^\ncloud-control-manager/iid-manager/IIDManager.go:42:83: var-naming: method parameter iId should be iID (revive)\nfunc (iidRWLock *IIDRWLOCK)IsExistIID(connectionName string, resourceType string, iId resources.IID) (bool, error) {\n                                                                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:54:82: var-naming: method parameter iId should be iID (revive)\nfunc (iidRWLock *IIDRWLOCK)CreateIID(connectionName string, resourceType string, iId resources.IID) (*IIDInfo, error) {\n                                                                                 ^\ncloud-control-manager/iid-manager/IIDManager.go:80:82: var-naming: method parameter iId should be iID (revive)\nfunc (iidRWLock *IIDRWLOCK)UpdateIID(connectionName string, resourceType string, iId resources.IID) (*IIDInfo, error) {\n                                                                                 ^\ncloud-control-manager/iid-manager/InfoStore.go:79:58: var-naming: func parameter nameId should be nameID (revive)\nfunc getInfo(connectionName string, resourceType string, nameId string) (*IIDInfo, error) {\n                                                         ^\ncloud-control-manager/iid-manager/InfoStore.go:109:65: var-naming: func parameter systemId should be systemID (revive)\nfunc getInfoByValue(connectionName string, resourceType string, systemId string) (*IIDInfo, error) {\n                                                                ^\ncloud-control-manager/iid-manager/IIDManager.go:109:65: var-naming: func parameter iId should be iID (revive)\nfunc forceCreateIID(connectionName string, resourceType string, iId resources.IID) (*IIDInfo, error) {\n                                                                ^\ncloud-control-manager/iid-manager/IIDManager.go:150:79: var-naming: method parameter iId should be iID (revive)\nfunc (iidRWLock *IIDRWLOCK)GetIID(connectionName string, resourceType string, iId resources.IID) (*IIDInfo, error) {\n                                                                              ^\ncloud-control-manager/iid-manager/InfoStore.go:132:58: var-naming: func parameter nameId should be nameID (revive)\nfunc isExist(connectionName string, resourceType string, nameId string) (bool, error) {\n                                                         ^\ncloud-control-manager/iid-manager/InfoStore.go:158:61: var-naming: func parameter nameId should be nameID (revive)\nfunc deleteInfo(connectionName string, resourceType string, nameId string) (bool, error) {\n                                                            ^\ncloud-control-manager/iid-manager/IIDManager.go:212:89: var-naming: method parameter iId should be iID (revive)\nfunc (iidRWLock *IIDRWLOCK)GetIIDbySystemID(connectionName string, resourceType string, iId resources.IID) (*IIDInfo, error) {\n                                                                                        ^\ncloud-control-manager/iid-manager/IIDManager.go:240:82: var-naming: method parameter iId should be iID (revive)\nfunc (iidRWLock *IIDRWLOCK)DeleteIID(connectionName string, resourceType string, iId resources.IID) (bool, error) {\n                                                                                 ^\ncloud-control-manager/iid-manager/IIDManager.go:268:62: var-naming: func parameter iId should be iID (revive)\nfunc checkParams(connectionName string, resourceType string, iId *resources.IID) error {\n                                                             ^\ncloud-control-manager/iid-manager/IIDManager.go:284:6: var-naming: func checkParamsSystemId should be checkParamsSystemID (revive)\nfunc checkParamsSystemId(connectionName string, resourceType string, iId *resources.IID) error {\n     ^\ncloud-control-manager/iid-manager/IIDManager.go:270:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return fmt.Errorf(\"ConnectionName is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:273:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return fmt.Errorf(\"ResourceType is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:276:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return fmt.Errorf(\"IID is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:279:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return fmt.Errorf(\"IID.NameId is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:286:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return fmt.Errorf(\"ConnectionName is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:289:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return fmt.Errorf(\"ResourceType is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:292:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return fmt.Errorf(\"IID is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:295:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return fmt.Errorf(\"IID.SystemId is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:302:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return fmt.Errorf(\"ConnectionName is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:305:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return fmt.Errorf(\"ResourceType is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:308:35: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n                return fmt.Errorf(\"Keyword is empty!\")\n                                  ^\napi-runtime/meerkat-runtime/table-handler/TableHandler.go:18:7: var-naming: const spreadsheetId should be spreadsheetID (revive)\nconst spreadsheetId string = \"123pwye5DiSuUxK6uK-2LBsccabfXHA1ofWCcJ4vfsPw\"\n      ^\napi-runtime/meerkat-runtime/table-handler/TableHandler.go:182:16: var-naming: don't use underscores in Go names; range var j_v should be jV (revive)\n        for _, j_v := range valueList {\n               ^\napi-runtime/meerkat-runtime/table-handler/TableHandler.go:184:10: var-naming: don't use underscores in Go names; range var i_v should be iV (revive)\n\t\tfor i, i_v := range j_v {\n\t\t       ^\napi-runtime/meerkat-runtime/table-handler/TableHandler.go:122:9: range: should omit 2nd value from range; this loop is equivalent to `for j := range ...` (revive)\n\tfor j, _ := range resp.Values {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/connect/TencentCloudConnection.go:34:2: var-naming: struct field VmSpecClient should be VMSpecClient (revive)\n\tVmSpecClient   *cvm.Client\n\t^\ncloud-control-manager/CloudDriverHandler_static.go:80:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn getCloudDriver(*cldDrvInfo)\n\t}\ncloud-control-manager/CloudDriverHandler_static.go:256:26: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn nil, fmt.Errorf(\"%q: driver library file can't nil or empty!!\", cldDrvInfo.DriverName)\n\t\t                       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/CommonClouditFunc.go:180:28: empty-block: this block is empty, you can remove it (revive)\n\t\t\tif err.Error() != \"EOF\" {\n\t\t\t\t//cblog.Error(err)\n\t\t\t}\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/CommonClouditFunc.go:93:75: var-naming: func parameter vmId should be vmID (revive)\nfunc ListVNic(authHeader map[string]string, reqClient *client.RestClient, vmId string) (*[]nic.VmNicInfo, error) {\n                                                                          ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/CommonClouditFunc.go:131:19: var-naming: func parameter serverIp should be serverIP (revive)\nfunc GetSSHClient(serverIp string, serverPort int, username string, password string) (scp.Client, error) {\n                  ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/CommonClouditFunc.go:141:17: var-naming: func parameter serverIp should be serverIP (revive)\nfunc RunCommand(serverIp string, serverPort int, username string, password string, command string) (string, error) {\n                ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/ImageHandler.go:157:10: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\terr := errors.New(fmt.Sprintf(\"failed to find image with name %s\", imageName))\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:51:2: var-naming: var vmId should be vmID (revive)\n\tvmId, _ := vmHandler.getVmIdByName(vmReqInfo.IId.NameId)\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:125:2: var-naming: var vmSpecId should be vmSpecID (revive)\n\tvmSpecId, err := GetVMSpecByName(vmHandler.Client.AuthenticatedHeaders(), vmHandler.Client, vmReqInfo.VMSpecName)\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMSpecHandler.go:62:15: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tgetError := errors.New(fmt.Sprintf(\"failed to get VM spec list, err : %s\", err.Error()))\n\t\t            ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/SecurityHandler.go:70:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"SecurityGroup with name %s already exist\", securityReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMSpecHandler.go:82:18: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tnotFoundErr := errors.New(fmt.Sprintf(\"failed to get VM spec, err : %s\", err.Error()))\n\t\t               ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:152:2: var-naming: var creatingVm should be creatingVM (revive)\n\tcreatingVm, err := server.Start(vmHandler.Client, &requestOpts)\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMSpecHandler.go:105:13: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tgetErr := errors.New(fmt.Sprintf(\"failed to get VM spec list, err : %s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/SecurityHandler.go:246:10: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\terr := errors.New(fmt.Sprintf(\"failed to find security group with name %s\", securityName))\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMSpecHandler.go:133:18: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tnotFoundErr := errors.New(fmt.Sprintf(\"failed to get VM spec, err : %s\", err.Error()))\n\t\t               ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:194:2: var-naming: var loginUserId should be loginUserID (revive)\n\tloginUserId := SSHDefaultUser\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMSpecHandler.go:172:10: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\terr := errors.New(fmt.Sprintf(\"failed to find vmSpec with name %s\", specName))\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:524:69: var-naming: method parameter vmIp should be vmIP (revive)\nfunc (vmHandler *ClouditVMHandler) AssociatePublicIP(vmName string, vmIp string) (bool, error) {\n                                                                    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:646:36: var-naming: method getVmIdByName should be getVMIDByName (revive)\nfunc (vmHandler *ClouditVMHandler) getVmIdByName(vmNameID string) (string, error) {\n                                   ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:647:6: var-naming: var vmId should be vmID (revive)\n\tvar vmId string\n\t    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:671:6: var-naming: func getVmStatus should be getVMStatus (revive)\nfunc getVmStatus(vmStatus string) irs.VMStatus {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:259:10: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\terr := errors.New(fmt.Sprintf(\"failed to find subnet with name %s\", subnetName))\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:271:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"virtualNetwork with name %s already exist\", subnetInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:327:51: unused-parameter: parameter 'vpcIID' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vpcHandler *ClouditVPCHandler) RemoveSubnet(vpcIID irs.IID, subnetIID irs.IID) (bool, error) {\n                                                  ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:163:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)\n\t} else {\n\t\tif len(*creatableSubnetList) == 0 {\n\t\t\tallocateErr := errors.New(\"there is no PublicIPs to allocate\")\n\t\t\treturn subnet.SubnetInfo{}, allocateErr\n\t\t} else {\n\t\t\tcreatableSubnet = (*creatableSubnetList)[0]\n\t\t}\n\t}\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:167:10: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t\t} else {\n\t\t\tcreatableSubnet = (*creatableSubnetList)[0]\n\t\t}\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:288:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)\n\t} else {\n\t\tif len(*creatableSubnetList) == 0 {\n\t\t\tallocateErr := errors.New(\"there is no PublicIPs to allocate\")\n\t\t\tLoggingError(hiscallInfo, allocateErr)\n\t\t\treturn irs.VPCInfo{}, allocateErr\n\t\t} else {\n\t\t\tcreatableSubnet = (*creatableSubnetList)[0]\n\t\t}\n\t}\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:293:10: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t\t} else {\n\t\t\tcreatableSubnet = (*creatableSubnetList)[0]\n\t\t}\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMSpecHandler.go:91:58: unused-parameter: parameter 'Region' seems to be unused, consider removing or renaming it as _ (revive)\nfunc (vmSpecHandler *ClouditVMSpecHandler) ListOrgVMSpec(Region string) (string, error) {\n                                                         ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:53:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"VirtualMachine with name %s already exist\", vmReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:65:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to get image, err : %s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:77:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to get virtual network, err : %s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:112:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to add extra inbound rule to SG, err : %s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:119:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to add extra outbound rule to SG, err : %s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:127:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to get vm spec, err : %s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:182:25: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\t\treturn irs.VMInfo{}, errors.New(fmt.Sprintf(\"failed to start vm, exceeded maximum retry count %d\", maxRetryCnt))\n\t\t\t                     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:274:17: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\t\tdeleteErr := errors.New(fmt.Sprintf(\"failed to delete extra rules, err : %s\", err.Error()))\n\t\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:538:19: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\t\tallocateErr := errors.New(fmt.Sprintf(\"There is no PublicIPs to allocate\"))\n\t\t\t               ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:665:10: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\terr := errors.New(fmt.Sprintf(\"failed to find vm with name %s\", vmNameID))\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:536:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)\n\t} else {\n\t\tif len(*availableIPList) == 0 {\n\t\t\tallocateErr := errors.New(fmt.Sprintf(\"There is no PublicIPs to allocate\"))\n\t\t\treturn false, allocateErr\n\t\t} else {\n\t\t\tavailableIP = (*availableIPList)[0]\n\t\t}\n\t}\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:540:10: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t\t} else {\n\t\t\tavailableIP = (*availableIPList)[0]\n\t\t}\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:576:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)\n\t} else {\n\t\treturn true, nil\n\t}\napi-runtime/meerkat-runtime/common/runcommand.go:36:32: var-declaration: should drop = \"\" from declaration of var strResult; it is the zero value (revive)\n        var strResult string = \"\"\n                               ^\napi-runtime/meerkat-runtime/common/runcommand.go:35:9: var-naming: don't use underscores in Go names; var cmd_args should be cmdArgs (revive)\n        cmd_args := strings.SplitN(cmd, \" \", 2)\n        ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:105:7: var-naming: var VmSpecClient should be VMSpecClient (revive)\n\tCtx, VmSpecClient, err := getVmSpecClient(connectionInfo.CredentialInfo)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:296:6: var-naming: func getVmSpecClient should be getVMSpecClient (revive)\nfunc getVmSpecClient(credential idrv.CredentialInfo) (context.Context, *compute.VirtualMachineSizesClient, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/ImageHandler.go:44:2: var-naming: var imageIdArr should be imageIDArr (revive)\n\timageIdArr := strings.Split(*image.ID, \"/\")\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/ImageHandler.go:59:2: var-naming: var imageIdArr should be imageIDArr (revive)\n\timageIdArr := strings.Split(*image.ID, \"/\")\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/ImageHandler.go:78:3: var-naming: struct field DiskId should be DiskID (revive)\n\t\tDiskId string\n\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VPCHandler.go:65:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"vpc with name %s already exist\", vpcReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VPCHandler.go:184:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"vpc with name %s not exist\", vpcIID.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VPCHandler.go:196:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to create subnet with name %s\", subnetInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/CommonAzureFunc.go:137:6: var-naming: func GetVNicIdByName should be GetVNicIDByName (revive)\nfunc GetVNicIdByName(credentialInfo idrv.CredentialInfo, regionInfo idrv.RegionInfo, vNicName string) string {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/ImageHandler.go:168:7: var-naming: var imageIdArr should be imageIDArr (revive)\n\t\t\t\t\t\timageIdArr := strings.Split(*version.ID, \"/\")\n\t\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VPCHandler.go:202:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to create subnet with name %s\", subnetInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/SecurityHandler.go:80:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Security Group with name %s already exist\", securityReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMSpecHandler.go:77:12: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\tgetErr := errors.New(fmt.Sprintf(\"failed to get VM spec, err : %s\", err))\n\t          ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/CommonAzureFunc.go:145:6: var-naming: func GetSecGroupIdByName should be GetSecGroupIDByName (revive)\nfunc GetSecGroupIdByName(credentialInfo idrv.CredentialInfo, regionInfo idrv.RegionInfo, secGroupName string) string {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:52:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"virtualMachine with name %s already exist\", vmReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VPCHandler.go:208:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to create subnet with name %s\", subnetInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMSpecHandler.go:124:15: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\t\t\tgetErr := errors.New(fmt.Sprintf(\"failed to get VM spec, err : %s\", err))\n\t\t\t\t          ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:595:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to create PublicIP, error=%s\", err))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:600:16: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to create PublicIP, error=%s\", err))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMSpecHandler.go:21:6: var-naming: type AzureVmSpecHandler should be AzureVMSpecHandler (revive)\ntype AzureVmSpecHandler struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMSpecHandler.go:27:6: var-naming: func setterVmSpec should be setterVMSpec (revive)\nfunc setterVmSpec(region string, vmSpec compute.VirtualMachineSize) *irs.VMSpecInfo {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:607:13: errorf: should replace errors.New(fmt.Sprintf(...)) with fmt.Errorf(...) (revive)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get PublicIP, error=%s\", err))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:338:4: var-naming: var vmIdArr should be vmIDArr (revive)\n\t\t\tvmIdArr := strings.Split(*s.ID, \"/\")\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:409:6: var-naming: func getVmStatus should be getVMStatus (revive)\nfunc getVmStatus(instanceView compute.VirtualMachineInstanceView) irs.VMStatus {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:476:6: var-naming: var VNicId should be VNicID (revive)\n\tvar VNicId string\n\t    ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:484:2: var-naming: var nicIdArr should be nicIDArr (revive)\n\tnicIdArr := strings.Split(VNicId, \"/\")\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:490:2: var-naming: var sgGroupIdArr should be sgGroupIDArr (revive)\n\tsgGroupIdArr := strings.Split(*vNic.NetworkSecurityGroup.ID, \"/\")\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:516:4: var-naming: var subnetIdArr should be subnetIDArr (revive)\n\t\t\tsubnetIdArr := strings.Split(*ip.InterfaceIPConfigurationPropertiesFormat.Subnet.ID, \"/\")\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:521:4: var-naming: var vpcIdArr should be vpcIDArr (revive)\n\t\t\tvpcIdArr := subnetIdArr[:len(subnetIdArr)-2]\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:653:2: var-naming: var secGroupId should be secGroupID (revive)\n\tsecGroupId := GetSecGroupIdByName(vmHandler.CredentialInfo, vmHandler.Region, vmReqInfo.SecurityGroupIIDs[0].NameId)\n\t^\ncloud-info-manager/region-info-manager/RegionInfoManager.go:80:26: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn nil, fmt.Errorf(\"RegionName is empty!\")\n\t\t                       ^\ncloud-info-manager/region-info-manager/RegionInfoManager.go:96:28: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn false, fmt.Errorf(\"RegionName is empty!\")\n\t\t                         ^\ncloud-info-manager/region-info-manager/RegionInfoManager.go:112:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"RegionName is empty!\")\n\t\t                  ^\ncloud-info-manager/region-info-manager/RegionInfoManager.go:115:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"ProviderName is empty!\")\n\t\t                  ^\ncloud-info-manager/region-info-manager/RegionInfoManager.go:119:22: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\t\treturn fmt.Errorf(\"Key is empty!\")\n\t\t\t                  ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:96:26: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn nil, fmt.Errorf(\"ConnectionName is empty!\")\n\t\t                       ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:112:28: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn false, fmt.Errorf(\"ConnectionName is empty!\")\n\t\t                         ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:128:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"ConnectionName is empty!\")\n\t\t                  ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:131:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"ProviderName is empty!\")\n\t\t                  ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:134:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"DriverName is empty!\")\n\t\t                  ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:137:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"CredentialName is empty!\")\n\t\t                  ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:140:21: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\treturn fmt.Errorf(\"RegionName is empty!\")\n\t\t                  ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:18:2: var-naming: struct field VolumeId should be VolumeID (revive)\n\tVolumeId     string `json:\"volumeId\" required:\"true\"`   // 정지된 서버 볼륨을 기준으로 이미지 템플릿 생성\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:19:2: var-naming: struct field SnapshotId should be SnapshotID (revive)\n\tSnapshotId   string `json:\"snapshotId\" required:\"true\"` // 서버 스냅샷을 기준으로 이미지 템플릿 생성\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:25:2: var-naming: struct field PoolId should be PoolID (revive)\n\tPoolId       string `json:\"poolId\" required:\"false\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:53:2: var-naming: struct field Url should be URL (revive)\n\tUrl           string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:75:41: var-naming: func parameter templateId should be templateID (revive)\nfunc Get(restClient *client.RestClient, templateId string, requestOpts *client.RequestOpts) (*ImageInfo, error) {\n                                        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:107:44: var-naming: func parameter templateId should be templateID (revive)\nfunc Delete(restClient *client.RestClient, templateId string, requestOpts *client.RequestOpts) error {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/mock/MockDriver.go:14:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t\"C\"\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/test/image_test.go:34:7: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nconst BUILTIN_IMG_NUM int = 5\n      ^\ncloud-control-manager/cloud-driver/drivers/mock/test/keypair_test.go:36:2: var-naming: struct field Id should be ID (revive)\n\tId string\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:111:2: var-naming: don't use underscores in Go names; var true_num should be trueNum (revive)\n\ttrue_num := 3\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:137:2: var-naming: don't use underscores in Go names; var true_num should be trueNum (revive)\n\ttrue_num := 1\n\t^\napi-runtime/meerkat-runtime/momkat/MomKat.go:140:10: range: should omit 2nd value from range; this loop is equivalent to `for i := range ...` (revive)\n\t\tfor i, _ := range values {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:343:2: var-naming: var securityId should be securityID (revive)\n\tsecurityId := \"sg-6wedru4yb4m6qqfvd3sj\"\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:344:2: var-naming: var vpcId should be vpcID (revive)\n\tvpcId := \"vpc-0jl4l19l51gn2exrohgci\"\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:599:2: var-naming: var reqSubnetId should be reqSubnetID (revive)\n\treqSubnetId := irs.IID{SystemId: \"vsw-6we4h4n4wp9xdtakrno15\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:624:2: var-naming: var reqVpcId should be reqVpcID (revive)\n\treqVpcId := irs.IID{SystemId: \"vpc-6we11xwqjc9tyma5i68z0\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:817:2: var-naming: var VmID should be VMID (revive)\n\tVmID := irs.IID{SystemId: \"i-6weayupx7qvidhmyl48d\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Sample/test.go:55:2: unreachable-code: unreachable code after this statement (revive)\n\treturn\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/TencentDriver.go:60:6: var-naming: func getVmClient should be getVMClient (revive)\nfunc getVmClient(connectionInfo idrv.ConnectionInfo) (*cvm.Client, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/TencentDriver.go:66:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := connectionInfo.RegionInfo.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/TencentDriver.go:98:2: var-naming: var zoneId should be zoneID (revive)\n\tzoneId := connectionInfo.RegionInfo.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/docker/DockerDriver.go:14:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t\"C\"\n\t^\ninterface/cli/cbadm/cmd/gclient.go:47:38: unused-parameter: parameter 'args' seems to be unused, consider removing or renaming it as _ (revive)\nfunc SetupAndRun(cmd *cobra.Command, args []string) {\n                                     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:18:2: var-naming: struct field Id should be ID (revive)\n\tId string `json:\"id\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:22:2: var-naming: struct field TemplateId should be TemplateID (revive)\n\tTemplateId   string         `json:\"templateId\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:23:2: var-naming: struct field SpecId should be SpecID (revive)\n\tSpecId       string         `json:\"specId\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:35:2: var-naming: struct field VmNicInfoList should be VMNicInfoList (revive)\n\tVmNicInfoList  interface{}\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:47:2: var-naming: struct field AdaptiveIpMapInfo should be AdaptiveIPMapInfo (revive)\n\tAdaptiveIpMapInfo []struct {\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:54:2: var-naming: struct field CpuNum should be CPUNum (revive)\n\tCpuNum            float32\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:59:2: var-naming: struct field NodeIp should be NodeIP (revive)\n\tNodeIp            string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:64:2: var-naming: struct field IsoId should be IsoID (revive)\n\tIsoId             string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:73:2: var-naming: struct field VolumeId should be VolumeID (revive)\n\tVolumeId          string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:78:2: var-naming: struct field SpecId should be SpecID (revive)\n\tSpecId            string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:80:2: var-naming: struct field PoolId should be PoolID (revive)\n\tPoolId            string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:84:2: var-naming: struct field MigrationIp should be MigrationIP (revive)\n\tMigrationIp       string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:88:2: var-naming: struct field PrivateIp should be PrivateIP (revive)\n\tPrivateIp         string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:89:2: var-naming: struct field AdaptiveIp should be AdaptiveIP (revive)\n\tAdaptiveIp        string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:91:2: var-naming: struct field ClusterId should be ClusterID (revive)\n\tClusterId         string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:95:2: var-naming: struct field Ip should be IP (revive)\n\tIp                string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:97:2: var-naming: struct field DeviceId should be DeviceID (revive)\n\tDeviceId          string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:100:2: var-naming: struct field GpuId should be GpuID (revive)\n\tGpuId             string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:106:2: var-naming: struct field SshKeyName should be SSHKeyName (revive)\n\tSshKeyName        string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:107:2: var-naming: struct field SshPublicKey should be SSHPublicKey (revive)\n\tSshPublicKey      string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:110:2: var-naming: struct field VmStatInfo should be VMStatInfo (revive)\n\tVmStatInfo        string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:64:46: var-naming: func parameter securitygroupId should be securitygroupID (revive)\nfunc ListRule(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts) (*[]SecurityGroupRules, error) {\n                                             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:80:41: var-naming: func parameter securitygroupId should be securitygroupID (revive)\nfunc Get(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts) (*SecurityGroupInfo, error) {\n                                        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:112:44: var-naming: func parameter securitygroupId should be securitygroupID (revive)\nfunc Delete(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts) error {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:123:51: var-naming: func parameter securitygroupId should be securitygroupID (revive)\nfunc ListRulesinSG(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts) (*[]SecurityGroupRules, error) {\n                                                  ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:139:45: var-naming: func parameter securitygroupId should be securitygroupID (revive)\nfunc AddRule(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts, rule string) (*SecurityGroupRules, error) {\n                                            ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:155:48: var-naming: func parameter securitygroupId should be securitygroupID (revive)\nfunc DeleteRule(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts, ruleID string) error {\n                                               ^\ntest/interface-test/rest-scenario/setup.go:16:2: var-naming: struct field HttpMethod should be HTTPMethod (revive)\n\tHttpMethod           string\n\t^\ntest/interface-test/rest-scenario/setup.go:28:24: var-declaration: should drop = nil from declaration of var holdStdout; it is the zero value (revive)\n\tholdStdout *os.File = nil\n\t                      ^\ntest/interface-test/rest-scenario/setup.go:29:24: var-declaration: should drop = nil from declaration of var nullOut; it is the zero value (revive)\n\tnullOut    *os.File = nil\n\t                      ^\ntest/interface-test/rest-scenario/echo_call.go:101:20: error-strings: error strings should not be capitalized or end with punctuation or a newline (revive)\n\t\terr = errors.New(\"The number of params is not adapted.\")\n\t\t                 ^\ntest/interface-test/rest-scenario/echo_call.go:116:17: var-declaration: should drop = \"\" from declaration of var body; it is the zero value (revive)\n\t\tbody string = \"\"\n\t\t              ^\ntest/interface-test/rest-scenario/echo_call.go:117:17: var-declaration: should drop = nil from declaration of var err; it is the zero value (revive)\n\t\terr  error  = nil\n\t\t              ^\ntest/interface-test/rest-scenario/echo_call.go:122:27: var-declaration: should drop = nil from declaration of var req; it is the zero value (revive)\n\t\tvar req *http.Request = nil\n\t\t                        ^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:99:21: unused-parameter: parameter 'config' seems to be unused, consider removing or renaming it as _ (revive)\nfunc testVPCHandler(config Config) {\n                    ^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:185:25: unused-parameter: parameter 'config' seems to be unused, consider removing or renaming it as _ (revive)\nfunc testKeyPairHandler(config Config) {\n                        ^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:324:26: unused-parameter: parameter 'config' seems to be unused, consider removing or renaming it as _ (revive)\nfunc testSecurityHandler(config Config) {\n                         ^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:42:2: var-naming: var imageId should be imageID (revive)\n\timageId := irs.IID{\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:114:2: var-naming: var vpcId should be vpcID (revive)\n\tvpcId := irs.IID{NameId: \"CB-VNet\", SystemId: \"af8010c9-4769-4545-9770-a31e9bb8b645\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:664:6: var-naming: var vmSpecId should be vmSpecID (revive)\n\tvar vmSpecId string\n\t    ^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:848:3: var-naming: struct field ImageId should be ImageID (revive)\n\t\tImageId          string `yaml:\"image_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:849:3: var-naming: struct field FlavorId should be FlavorID (revive)\n\t\tFlavorId         string `yaml:\"flavor_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:850:3: var-naming: struct field NetworkId should be NetworkID (revive)\n\t\tNetworkId        string `yaml:\"network_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:854:3: var-naming: struct field ServerId should be ServerID (revive)\n\t\tServerId string `yaml:\"server_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:877:4: var-naming: struct field Id should be ID (revive)\n\t\t\tId string `yaml:\"id\"`\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:882:4: var-naming: struct field GateWayId should be GateWayID (revive)\n\t\t\tGateWayId    string `yaml:\"gateway_id\"`\n\t\t\t^\ntest/interface-test/rest-go-equal-scenario/2_rest_grpc_equal_test.go:12:23: var-declaration: should omit type map[string]string from declaration of var RestPrepareResult; it will be inferred from the right-hand side (revive)\nvar RestPrepareResult map[string]string = make(map[string]string)\n                      ^\ntest/interface-test/rest-go-equal-scenario/2_rest_grpc_equal_test.go:13:23: var-declaration: should omit type map[string]string from declaration of var GrpcPrepareResult; it will be inferred from the right-hand side (revive)\nvar GrpcPrepareResult map[string]string = make(map[string]string)\n                      ^\ntest/interface-test/rest-go-equal-scenario/2_rest_grpc_equal_test.go:18:12: range: should omit 2nd value from range; this loop is equivalent to `for key := range ...` (revive)\n\t\tfor key, _ := range RestPrepareResult {\n\t\t         ^\ntest/interface-test/rest-go-equal-scenario/2_rest_grpc_equal_test.go:34:15: range: should omit 2nd value from range; this loop is equivalent to `for idx := range ...` (revive)\n\t\t\t\t\tfor idx, _ := range expect {\n\t\t\t\t\t         ^\ncloud-control-manager/cloud-driver/drivers/aws/AwsDriver.go:16:2: blank-imports: a blank import should be only in a main or test package, or have a comment justifying it (revive)\n\t\"C\"\n\t^\napi-runtime/common-runtime/CCMCommon.go:123:39: unused-parameter: parameter 'rsType' seems to be unused, consider removing or renaming it as _ (revive)\nfunc ListImage(connectionName string, rsType string) ([]*cres.ImageInfo, error) {\n                                      ^\napi-runtime/common-runtime/CCMCommon.go:217:38: unused-parameter: parameter 'rsType' seems to be unused, consider removing or renaming it as _ (revive)\nfunc GetImage(connectionName string, rsType string, nameID string) (*cres.ImageInfo, error) {\n                                     ^\napi-runtime/common-runtime/CCMCommon.go:820:9: range: should omit 2nd value from range; this loop is equivalent to `for n := range ...` (revive)\n\tfor n, _ := range *reqInfo.SecurityRules {\n\t       ^\napi-runtime/common-runtime/common.go:11:7: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nconst SUBNET_PREFIX string = \"subnet:\"\n      ^\napi-runtime/common-runtime/common.go:12:7: var-naming: don't use ALL_CAPS in Go names; use CamelCase (revive)\nconst SG_DELIMITER string = \"-deli-\"\n      ^\napi-runtime/common-runtime/CCMCommon.go:87:2: var-naming: don't use underscores in Go names; var bool_ret should be boolRet (revive)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:491:2: var-naming: don't use underscores in Go names; var bool_ret should be boolRet (revive)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:724:2: var-naming: don't use underscores in Go names; var bool_ret should be boolRet (revive)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:809:2: var-naming: don't use underscores in Go names; var bool_ret should be boolRet (revive)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:852:2: var-naming: don't use underscores in Go names; var vpc_sg_nameid should be vpcSgNameid (revive)\n\tvpc_sg_nameid := strings.Split(info.IId.NameId, SG_DELIMITER)\n\t^\napi-runtime/common-runtime/CCMCommon.go:910:5: var-naming: don't use underscores in Go names; var vpc_sg_nameid should be vpcSgNameid (revive)\n\t\t\t\tvpc_sg_nameid := strings.Split(iidInfo.IId.NameId, SG_DELIMITER)\n\t\t\t\t^\napi-runtime/common-runtime/CCMCommon.go:973:2: var-naming: don't use underscores in Go names; var vpc_sg_nameid should be vpcSgNameid (revive)\n\tvpc_sg_nameid := strings.Split(iidInfo.IId.NameId, SG_DELIMITER)\n\t^\napi-runtime/common-runtime/CCMCommon.go:1010:2: var-naming: don't use underscores in Go names; var bool_ret should be boolRet (revive)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:1145:6: var-naming: func getSetSystemId should be getSetSystemID (revive)\nfunc getSetSystemId(ConnectionName string, reqInfo *cres.VMReqInfo) error {\n     ^\napi-runtime/common-runtime/CCMCommon.go:1223:2: var-naming: don't use underscores in Go names; var bool_ret should be boolRet (revive)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:1284:3: var-naming: don't use underscores in Go names; var vpc_sg_nameid should be vpcSgNameid (revive)\n\t\tvpc_sg_nameid := strings.Split(sgIID.NameId, SG_DELIMITER)\n\t\t^\napi-runtime/common-runtime/CCMCommon.go:1296:6: var-naming: func setNameId should be setNameID (revive)\nfunc setNameId(ConnectionName string, vmInfo *cres.VMInfo, reqInfo *cres.VMReqInfo) error {\n     ^\napi-runtime/common-runtime/CCMCommon.go:1403:6: var-naming: don't use underscores in Go names; var vpc_sg_nameid should be vpcSgNameid (revive)\n\t\t\t\t\tvpc_sg_nameid := strings.Split(sgIID.NameId, SG_DELIMITER)\n\t\t\t\t\t^\napi-runtime/common-runtime/CCMCommon.go:1425:6: var-naming: func getSetNameId should be getSetNameID (revive)\nfunc getSetNameId(ConnectionName string, vmInfo *cres.VMInfo) error {\n     ^\napi-runtime/common-runtime/CCMCommon.go:1520:3: var-naming: don't use underscores in Go names; var vpc_sg_nameid should be vpcSgNameid (revive)\n\t\tvpc_sg_nameid := strings.Split(sgIID.NameId, SG_DELIMITER)\n\t\t^\napi-runtime/common-runtime/CCMCommon.go:1844:4: var-naming: don't use underscores in Go names; var vpc_sg_nameid should be vpcSgNameid (revive)\n\t\t\tvpc_sg_nameid := strings.Split(iid.NameId, SG_DELIMITER)\n\t\t\t^\napi-runtime/common-runtime/CCMCommon.go:1848:4: var-naming: don't use underscores in Go names; var vpc_sg_nameid should be vpcSgNameid (revive)\n\t\t\tvpc_sg_nameid := strings.Split(iid.NameId, SG_DELIMITER)\n\t\t\t^\napi-runtime/common-runtime/CCMCommon.go:1803:10: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t\t} else { // iidCSPList is empty and iidInfoList has value => only OnlySpiderList <--(2)\n\t\t\temptyIIDInfoList := []*cres.IID{}\n\t\t\tallResList.AllList.MappedList = emptyIIDInfoList\n\t\t\tallResList.AllList.OnlyCSPList = emptyIIDInfoList\n\t\t\tallResList.AllList.OnlySpiderList = getIIDList(iidInfoList)\n\n\t\t\treturn allResList, nil\n\t\t}\napi-runtime/common-runtime/CCMCommon.go:2089:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn result, \"\", nil\n\t}\napi-runtime/common-runtime/CCMCommon.go:2188:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (revive)\n\t} else {\n\t\treturn result, \"\", nil\n\t}\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs/Request.go:17:2: var-naming: struct field Id should be ID (revive)\n\tId      string `json:\"id\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs/Request.go:19:2: var-naming: struct field Cpu should be CPU (revive)\n\tCpu     int    `json:\"cpu\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:40:2: var-naming: var imageId should be imageID (revive)\n\timageId := irs.IID{\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:180:2: var-naming: var securityGroupId should be securityGroupID (revive)\n\tsecurityGroupId := irs.IID{\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:267:2: var-naming: var vpcId should be vpcID (revive)\n\tvpcId := irs.IID{NameId: \"Default-VPC\", SystemId: \"Default-VPC\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:410:6: var-naming: func testVmSpecHandler should be testVMSpecHandler (revive)\nfunc testVmSpecHandler(config Config) {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:656:3: var-naming: struct field ServerId should be ServerID (revive)\n\t\tServerId         string `yaml:\"server_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:90:2: var-naming: var serverId should be serverID (revive)\n\tserverId := irs.IID{\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:252:21: unused-parameter: parameter 'config' seems to be unused, consider removing or renaming it as _ (revive)\nfunc testVPCHandler(config Config) {\n                    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:477:25: unused-parameter: parameter 'config' seems to be unused, consider removing or renaming it as _ (revive)\nfunc testKeypairHandler(config Config) {\n                        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:192:3: var-naming: struct field ServerId should be ServerID (revive)\n\t\tServerId         string `yaml:\"server_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:195:4: var-naming: struct field TemplateId should be TemplateID (revive)\n\t\t\tTemplateId    string `yaml:\"template_id\"`\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:197:4: var-naming: struct field SpecId should be SpecID (revive)\n\t\t\tSpecId        string `yaml:\"spec_id\"`\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:199:4: var-naming: struct field SubnetId should be SubnetID (revive)\n\t\t\tSubnetId      string `yaml:\"subnet_id\"`\n\t\t\t^\n"},"gofmt":{"run":1,"cnt":118,"details":"cloud-control-manager/cloud-driver/call-log/formatter/formatter.go:18: File is not `gofmt`-ed with `-s` (gofmt)\n\ncloud-info-manager/region-info-manager/test/test.go:18: File is not `gofmt`-ed with `-s` (gofmt)\nfunc main() {\n\n// ex-1)\n// /cloud-info-spaces/regions/<aws_region01>/{aws}/{region} [ap-northeast-2]\n// ex-2)\n// /cloud-info-spaces/regions/<gcp_region02>/{gcp}/{region} [us-east1]\n// /cloud-info-spaces/regions/<gcp_region02>/{gcp}/{zone}} [us-east1-c]\n\ncloud-control-manager/cloud-driver/drivers/docker/connect/DockerCloudConnection.go:16: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"github.com/docker/docker/client\"\ncloud-control-manager/iid-manager/IIDManager.go:13: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"sync\"\ncloud-control-manager/iid-manager/InfoStore.go:15: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"github.com/cloud-barista/cb-store/utils\"\ncloud-info-manager/CloudOSList.go:4: File is not `gofmt`-ed with `-s` (gofmt)\n        \"github.com/sirupsen/logrus\"\n        \"github.com/cloud-barista/cb-store/config\"\ncloud-control-manager/cloud-driver/call-log/test/calllog_test.go:21: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"time\"\ntest/interface-test/go-scenario/go_full_param_arg_test.go:66: File is not `gofmt`-ed with `-s` (gofmt)\n\t\t\t\t\t\tapi.KeyValue{Key: \"MockName\", Value: \"mock_unit_full_param\"},\ntest/interface-test/go-scenario/go_misc_param_arg_test.go:37: File is not `gofmt`-ed with `-s` (gofmt)\n\t\t\t\t\t\tapi.KeyValue{Key: \"MockName\", Value: \"mock_unit_misc_param\"},\ncloud-info-manager/region-info-manager/InfoStore.go:14: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"github.com/cloud-barista/cb-store/utils\"\ncloud-control-manager/vm-ssh/sshrun.go:13: File is not `gofmt`-ed with `-s` (gofmt)\n        \"github.com/sirupsen/logrus\"\napi-runtime/grpc-runtime/interceptors/accesslog/client_interceptors.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage accesslog\n\nimport (\n\t\"context\"\n\t\"time\"\n\n\t\"google.golang.org/grpc\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// UnaryClientInterceptor - rpc unary call 정보를 기록하는 클라이언트 인터셉터\nfunc UnaryClientInterceptor() grpc.UnaryClientInterceptor {\n\treturn func(ctx context.Context, method string, req, reply interface{}, cc *grpc.ClientConn, invoker grpc.UnaryInvoker, opts ...grpc.CallOption) error {\n\t\tstartTime := time.Now()\n\t\terr := invoker(ctx, method, req, reply, cc, opts...)\n\t\telapsed := time.Now().Sub(startTime)\n\n\t\tlogger := logger.NewLogger()\n\t\tlogger.Info(\"grpc client unary call : \", method, \" service [\", elapsed.Nanoseconds()/1000000, \" ms]\")\n\n\t\treturn err\n\t}\n}\n\n// StreamClientInterceptor - rpc stream call 정보를 기록하는 클라이언트 인터셉터\nfunc StreamClientInterceptor() grpc.StreamClientInterceptor {\n\treturn func(ctx context.Context, desc *grpc.StreamDesc, cc *grpc.ClientConn, method string, streamer grpc.Streamer, opts ...grpc.CallOption) (grpc.ClientStream, error) {\n\t\tstartTime := time.Now()\n\t\tclientStream, err := streamer(ctx, desc, cc, method, opts...)\n\t\telapsed := time.Now().Sub(startTime)\n\n\t\tlogger := logger.NewLogger()\n\t\tlogger.Info(\"grpc client stream call : \", method, \" service [\", elapsed.Nanoseconds()/1000000, \" ms]\")\n\n\t\treturn clientStream, err\n\t}\n}\napi-runtime/grpc-runtime/interceptors/accesslog/server_interceptors.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage accesslog\n\nimport (\n\t\"context\"\n\t\"time\"\n\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/peer\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// UnaryServerInterceptor - rpc unary receive 정보를 기록하는 서버 인터셉터\nfunc UnaryServerInterceptor() grpc.UnaryServerInterceptor {\n\treturn func(ctx context.Context, req interface{}, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (interface{}, error) {\n\t\tstartTime := time.Now()\n\t\tresp, err := handler(ctx, req)\n\t\telapsed := time.Now().Sub(startTime)\n\n\t\tclientIP := \"unknown\"\n\t\tif p, ok := peer.FromContext(ctx); ok {\n\t\t\tclientIP = p.Addr.String()\n\t\t}\n\n\t\tlogger := logger.NewLogger()\n\t\tlogger.Info(\"[\", clientIP, \"] grpc server unary received : \", info.FullMethod, \" service [\", elapsed.Nanoseconds()/1000000, \" ms]\")\n\n\t\treturn resp, err\n\t}\n}\n\n// StreamServerInterceptor - rpc stream receive 정보를 기록하는 서버 인터셉터\nfunc StreamServerInterceptor() grpc.StreamServerInterceptor {\n\treturn func(srv interface{}, stream grpc.ServerStream, info *grpc.StreamServerInfo, handler grpc.StreamHandler) error {\n\t\tstartTime := time.Now()\n\t\terr := handler(srv, stream)\n\t\telapsed := time.Now().Sub(startTime)\n\n\t\tclientIP := \"unknown\"\n\t\tif p, ok := peer.FromContext(stream.Context()); ok {\n\t\t\tclientIP = p.Addr.String()\n\t\t}\n\n\t\tlogger := logger.NewLogger()\n\t\tlogger.Info(\"[\", clientIP, \"] grpc server stream received : \", info.FullMethod, \" service [\", elapsed.Nanoseconds()/1000000, \" ms]\")\n\t\treturn err\n\t}\n}\napi-runtime/common-runtime/CCMCommon.go:17: File is not `gofmt`-ed with `-s` (gofmt)\n\napi-runtime/common-runtime/common.go:18: File is not `gofmt`-ed with `-s` (gofmt)\n\napi-runtime/meerkat-runtime/momkat/MomKat.go:18: File is not `gofmt`-ed with `-s` (gofmt)\n        \"google.golang.org/grpc\"\ntest/interface-test/rest-go-equal-scenario/2_rest_grpc_equal_test.go:18: File is not `gofmt`-ed with `-s` (gofmt)\n\t\tfor key, _ := range RestPrepareResult {\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:15: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"strconv\"\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:14: File is not `gofmt`-ed with `-s` (gofmt)\n\tdim \"github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager\"\napi-runtime/rest-runtime/admin-web/AdminWeb.go:12: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"fmt\"\napi-runtime/meerkat-runtime/MeerkatRuntime.go:12: File is not `gofmt`-ed with `-s` (gofmt)\n        \"net\"\ncloud-control-manager/cloud-driver/call-log/config.go:15: File is not `gofmt`-ed with `-s` (gofmt)\n\ninterface/cli/cbadm/cmd/connectinfos.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewConnectInfosCmd - 연결설정 관리 기능을 수행하는 Cobra Command 생성\nfunc NewConnectInfosCmd() *cobra.Command {\n\n\tconnectionCmd := &cobra.Command{\n\t\tUse:   \"connect-infos\",\n\t\tShort: \"This is a manageable command for connect infos config\",\n\t\tLong:  \"This is a manageable command for connect infos config\",\n\t}\n\n\t//  Adds the commands for application.\n\tconnectionCmd.AddCommand(NewConnectInfosCreateCmd())\n\tconnectionCmd.AddCommand(NewConnectInfosListCmd())\n\tconnectionCmd.AddCommand(NewCConnectInfosGetCmd())\n\tconnectionCmd.AddCommand(NewConnectInfosDeleteCmd())\n\n\treturn connectionCmd\n}\n\n// NewConnectInfosCreateCmd - 연결설정 생성 기능을 수행하는 Cobra Command 생성\nfunc NewConnectInfosCreateCmd() *cobra.Command {\n\n\tcreateCmd := &cobra.Command{\n\t\tUse:   \"create\",\n\t\tShort: \"This is create command for connect infos config\",\n\t\tLong:  \"This is create command for connect infos config\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tcreateCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\tcreateCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn createCmd\n}\n\n// NewConnectInfosListCmd - 연결설정 목록 기능을 수행하는 Cobra Command 생성\nfunc NewConnectInfosListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for connect infos config\",\n\t\tLong:  \"This is list command for connect infos config\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\treturn listCmd\n}\n\n// NewCConnectInfosGetCmd - 연결설정 조회 기능을 수행하는 Cobra Command 생성\nfunc NewCConnectInfosGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for connect infos config\",\n\t\tLong:  \"This is get command for connect infos config\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif configName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", configName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&configName, \"name\", \"n\", \"\", \"config name\")\n\n\treturn getCmd\n}\n\n// NewConnectInfosDeleteCmd - 연결설정 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewConnectInfosDeleteCmd() *cobra.Command {\n\n\tdeleteCmd := &cobra.Command{\n\t\tUse:   \"delete\",\n\t\tShort: \"This is delete command for connect infos config\",\n\t\tLong:  \"This is delete command for connect infos config\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif configName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", configName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCmd.PersistentFlags().StringVarP(&configName, \"name\", \"n\", \"\", \"config name\")\n\n\treturn deleteCmd\n}\ninterface/cli/cbadm/cmd/driver.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewDriverCmd - Cloud Driver 관리 기능을 수행하는 Cobra Command 생성\nfunc NewDriverCmd() *cobra.Command {\n\n\tdriverCmd := &cobra.Command{\n\t\tUse:   \"driver\",\n\t\tShort: \"This is a manageable command for cloud driver\",\n\t\tLong:  \"This is a manageable command for cloud driver\",\n\t}\n\n\t//  Adds the commands for application.\n\tdriverCmd.AddCommand(NewDriverCreateCmd())\n\tdriverCmd.AddCommand(NewDriverListCmd())\n\tdriverCmd.AddCommand(NewDriverGetCmd())\n\tdriverCmd.AddCommand(NewDriverDeleteCmd())\n\n\treturn driverCmd\n}\n\n// NewDriverCreateCmd - Cloud Driver 생성 기능을 수행하는 Cobra Command 생성\nfunc NewDriverCreateCmd() *cobra.Command {\n\n\tcreateCmd := &cobra.Command{\n\t\tUse:   \"create\",\n\t\tShort: \"This is create command for cloud driver\",\n\t\tLong:  \"This is create command for cloud driver\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tcreateCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\tcreateCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn createCmd\n}\n\n// NewDriverListCmd - Cloud Driver 목록 기능을 수행하는 Cobra Command 생성\nfunc NewDriverListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for cloud driver\",\n\t\tLong:  \"This is list command for cloud driver\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\treturn listCmd\n}\n\n// NewDriverGetCmd - Cloud Driver 조회 기능을 수행하는 Cobra Command 생성\nfunc NewDriverGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for cloud driver\",\n\t\tLong:  \"This is get command for cloud driver\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif driverName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", driverName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&driverName, \"name\", \"n\", \"\", \"driver name\")\n\n\treturn getCmd\n}\n\n// NewDriverDeleteCmd - Cloud Driver 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewDriverDeleteCmd() *cobra.Command {\n\n\tdeleteCmd := &cobra.Command{\n\t\tUse:   \"delete\",\n\t\tShort: \"This is delete command for cloud driver\",\n\t\tLong:  \"This is delete command for cloud driver\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif driverName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", driverName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCmd.PersistentFlags().StringVarP(&driverName, \"name\", \"n\", \"\", \"driver name\")\n\n\treturn deleteCmd\n}\ninterface/cli/cbadm/cmd/gclient.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\t\"github.com/cloud-barista/poc-cicd-spider/interface/api\"\n\t\"github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\nfunc readInDataFromFile() {\n\tlogger := logger.NewLogger()\n\tif inData == \"\" {\n\t\tif inFile != \"\" {\n\t\t\tdat, err := ioutil.ReadFile(inFile)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Error(\"failed to read file : \", inFile)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tinData = string(dat)\n\t\t}\n\t}\n}\n\n// ===== [ Public Functions ] =====\n\n// SetupAndRun - cbadm GRPC CLI 구동\nfunc SetupAndRun(cmd *cobra.Command, args []string) {\n\tlogger := logger.NewLogger()\n\n\tvar (\n\t\tresult string\n\t\terr    error\n\t)\n\n\t// panic 처리\n\tdefer func() {\n\t\tif r := recover(); r != nil {\n\t\t\tlogger.Error(\"cbadm is stopped : \", r)\n\t\t}\n\t}()\n\n\t// CIM API 설정\n\tcim = api.NewCloudInfoManager()\n\terr = cim.SetConfigPath(configFile)\n\tif err != nil {\n\t\tlogger.Error(\"failed to set config : \", err)\n\t\treturn\n\t}\n\terr = cim.Open()\n\tif err != nil {\n\t\tlogger.Error(\"cim api open failed : \", err)\n\t\treturn\n\t}\n\tdefer cim.Close()\n\n\t// 입력 파라미터 처리\n\tif outType != \"json\" && outType != \"yaml\" {\n\t\tlogger.Error(\"failed to validate --output parameter : \", outType)\n\t\treturn\n\t}\n\tif inType != \"json\" && inType != \"yaml\" {\n\t\tlogger.Error(\"failed to validate --input parameter : \", inType)\n\t\treturn\n\t}\n\tcim.SetInType(inType)\n\tcim.SetOutType(outType)\n\n\tlogger.Debug(\"--input parameter value : \", inType)\n\tlogger.Debug(\"--output parameter value : \", outType)\n\n\tresult = \"\"\n\terr = nil\n\n\tswitch cmd.Parent().Name() {\n\tcase \"driver\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = cim.CreateCloudDriver(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = cim.ListCloudDriver()\n\t\tcase \"get\":\n\t\t\tresult, err = cim.GetCloudDriverByParam(driverName)\n\t\tcase \"delete\":\n\t\t\tresult, err = cim.DeleteCloudDriverByParam(driverName)\n\t\t}\n\tcase \"credential\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = cim.CreateCredential(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = cim.ListCredential()\n\t\tcase \"get\":\n\t\t\tresult, err = cim.GetCredentialByParam(credentialName)\n\t\tcase \"delete\":\n\t\t\tresult, err = cim.DeleteCredentialByParam(credentialName)\n\t\t}\n\tcase \"region\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = cim.CreateRegion(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = cim.ListRegion()\n\t\tcase \"get\":\n\t\t\tresult, err = cim.GetRegionByParam(regionName)\n\t\tcase \"delete\":\n\t\t\tresult, err = cim.DeleteRegionByParam(regionName)\n\t\t}\n\tcase \"connect-infos\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = cim.CreateConnectionConfig(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = proc.ListConnectInfos(cim)\n\t\tcase \"get\":\n\t\t\tresult, err = proc.GetConnectInfos(cim, configName)\n\t\tcase \"delete\":\n\t\t\tresult, err = cim.DeleteConnectionConfigByParam(configName)\n\t\t}\n\t}\n\n\tif err != nil {\n\t\tif outType == \"yaml\" {\n\t\t\tfmt.Fprintf(cmd.OutOrStdout(), \"message: %v\\n\", err)\n\t\t} else {\n\t\t\tfmt.Fprintf(cmd.OutOrStdout(), \"{\\\"message\\\": \\\"%v\\\"}\\n\", err)\n\t\t}\n\t} else {\n\t\tfmt.Fprintf(cmd.OutOrStdout(), \"%s\\n\", result)\n\t}\n}\ninterface/cli/cbadm/cmd/region.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewRegionCmd - Region 관리 기능을 수행하는 Cobra Command 생성\nfunc NewRegionCmd() *cobra.Command {\n\n\tregionCmd := &cobra.Command{\n\t\tUse:   \"region\",\n\t\tShort: \"This is a manageable command for region\",\n\t\tLong:  \"This is a manageable command for region\",\n\t}\n\n\t//  Adds the commands for application.\n\tregionCmd.AddCommand(NewRegionCreateCmd())\n\tregionCmd.AddCommand(NewRegionListCmd())\n\tregionCmd.AddCommand(NewRegionGetCmd())\n\tregionCmd.AddCommand(NewRegionDeleteCmd())\n\n\treturn regionCmd\n}\n\n// NewRegionCreateCmd - Region 생성 기능을 수행하는 Cobra Command 생성\nfunc NewRegionCreateCmd() *cobra.Command {\n\n\tcreateCmd := &cobra.Command{\n\t\tUse:   \"create\",\n\t\tShort: \"This is create command for region\",\n\t\tLong:  \"This is create command for region\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tcreateCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\tcreateCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn createCmd\n}\n\n// NewRegionListCmd - Region 목록 기능을 수행하는 Cobra Command 생성\nfunc NewRegionListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for region\",\n\t\tLong:  \"This is list command for region\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\treturn listCmd\n}\n\n// NewRegionGetCmd - Region 조회 기능을 수행하는 Cobra Command 생성\nfunc NewRegionGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for region\",\n\t\tLong:  \"This is get command for region\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif regionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", regionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&regionName, \"name\", \"n\", \"\", \"region name\")\n\n\treturn getCmd\n}\n\n// NewRegionDeleteCmd - Region 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewRegionDeleteCmd() *cobra.Command {\n\n\tdeleteCmd := &cobra.Command{\n\t\tUse:   \"delete\",\n\t\tShort: \"This is delete command for region\",\n\t\tLong:  \"This is delete command for region\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif regionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", regionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCmd.PersistentFlags().StringVarP(&regionName, \"name\", \"n\", \"\", \"region name\")\n\n\treturn deleteCmd\n}\ninterface/cli/cbadm/cmd/root.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\n// Package cmd - 어플리케이션 실행을 위한 Cobra 기반의 CLI Commands 기능 제공\npackage cmd\n\nimport (\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config\"\n\t\"github.com/cloud-barista/poc-cicd-spider/interface/api\"\n\n\t\"github.com/spf13/cobra\"\n)\n\n// ===== [ Constants and Variables ] =====\n\nvar (\n\tconfigFile string\n\tinData     string\n\tinFile     string\n\tinType     string\n\toutType    string\n\n\tdriverName     string\n\tcredentialName string\n\tregionName     string\n\tconfigName     string\n\n\tparser config.Parser\n\tcim    *api.CIMApi\n)\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewRootCmd - 어플리케이션 진입점으로 사용할 Root Cobra Command 생성\nfunc NewRootCmd() *cobra.Command {\n\n\trootCmd := &cobra.Command{\n\t\tUse:   \"cbadm\",\n\t\tShort: \"cbadm is an cb-spider grpc cli tool\",\n\t\tLong:  \"This is a lightweight cb-spider grpc cli tool for Cloud-Barista\",\n\t}\n\n\t// 옵션 플래그 설정\n\trootCmd.PersistentFlags().StringVarP(&configFile, \"config\", \"c\", \"./grpc_conf.yaml\", \"config file\")\n\trootCmd.PersistentFlags().StringVarP(&inType, \"input\", \"i\", \"yaml\", \"input format (json/yaml)\")\n\trootCmd.PersistentFlags().StringVarP(&outType, \"output\", \"o\", \"yaml\", \"output format (json/yaml)\")\n\n\t// Viper 를 사용하는 설정 파서 생성\n\tparser = config.MakeParser()\n\n\t//  Adds the commands for application.\n\trootCmd.AddCommand(NewDriverCmd())\n\trootCmd.AddCommand(NewCredentialCmd())\n\trootCmd.AddCommand(NewRegionCmd())\n\trootCmd.AddCommand(NewConnectInfosCmd())\n\n\treturn rootCmd\n}\napi-runtime/grpc-runtime/interceptors/authjwt/client_interceptors.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage authjwt\n\nimport (\n\t\"context\"\n\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/metadata\"\n\t\"google.golang.org/grpc/status\"\n)\n\n// ===== [ Constants and Variables ] =====\nvar (\n\tjwtToken = \"\"\n)\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// UnaryClientInterceptor - JWT 토큰을 전달하는 Unary 클라이언트 인터셉터\nfunc UnaryClientInterceptor(token string) grpc.UnaryClientInterceptor {\n\tjwtToken = token\n\treturn func(ctx context.Context, method string, req, reply interface{}, cc *grpc.ClientConn, invoker grpc.UnaryInvoker, opts ...grpc.CallOption) error {\n\n\t\tif jwtToken == \"\" {\n\t\t\treturn status.Errorf(codes.Unauthenticated, \"jwt token is not supplied\")\n\t\t}\n\n\t\tctx = metadata.AppendToOutgoingContext(ctx, \"authorization\", jwtToken)\n\n\t\treturn invoker(ctx, method, req, reply, cc, opts...)\n\t}\n}\n\n// StreamClientInterceptor - JWT 토큰을 전달하는 Stream 클라이언트 인터셉터\nfunc StreamClientInterceptor(token string) grpc.StreamClientInterceptor {\n\tjwtToken = token\n\treturn func(ctx context.Context, desc *grpc.StreamDesc, cc *grpc.ClientConn, method string, streamer grpc.Streamer, opts ...grpc.CallOption) (grpc.ClientStream, error) {\n\n\t\tif jwtToken == \"\" {\n\t\t\treturn nil, status.Errorf(codes.Unauthenticated, \"jwt token is not supplied\")\n\t\t}\n\n\t\tctx = metadata.AppendToOutgoingContext(ctx, \"authorization\", jwtToken)\n\n\t\treturn streamer(ctx, desc, cc, method, opts...)\n\t}\n}\napi-runtime/grpc-runtime/interceptors/authjwt/server_interceptors.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage authjwt\n\nimport (\n\t\"context\"\n\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/status\"\n)\n\n// ===== [ Constants and Variables ] =====\nvar (\n\tjwtKey = \"\"\n)\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// UnaryServerInterceptor - authentication 을 처리하는 Unary 서버 인터셉터\nfunc UnaryServerInterceptor(key string) grpc.UnaryServerInterceptor {\n\tjwtKey = key\n\treturn func(ctx context.Context, req interface{}, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (interface{}, error) {\n\n\t\tif jwtKey == \"\" {\n\t\t\treturn nil, status.Errorf(codes.Unauthenticated, \"jwt key is not supplied\")\n\t\t}\n\n\t\t_, err := validateToken(ctx)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\treturn handler(ctx, req)\n\t}\n}\n\n// StreamServerInterceptor - authentication 을 처리하는 Stream 서버 인터셉터\nfunc StreamServerInterceptor(key string) grpc.StreamServerInterceptor {\n\tjwtKey = key\n\treturn func(srv interface{}, stream grpc.ServerStream, info *grpc.StreamServerInfo, handler grpc.StreamHandler) error {\n\n\t\tif jwtKey == \"\" {\n\t\t\treturn status.Errorf(codes.Unauthenticated, \"jwt key is not supplied\")\n\t\t}\n\n\t\t_, err := validateToken(stream.Context())\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\treturn handler(srv, stream)\n\t}\n}\ncloud-info-manager/connection-config-info-manager/test/test.go:16: File is not `gofmt`-ed with `-s` (gofmt)\n)\napi-runtime/grpc-runtime/service/connection.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\tccim \"github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateConnectionConfig - Connection Config 생성\nfunc (s *CIMService) CreateConnectionConfig(ctx context.Context, req *pb.ConnectionConfigInfoRequest) (*pb.ConnectionConfigInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.CreateConnectionConfig()\")\n\n\t// GRPC 메시지에서 CIM 객체로 복사\n\tvar cimObj ccim.ConnectionConfigInfo\n\terr := gc.CopySrcToDest(&req.Item, &cimObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateConnectionConfig()\")\n\t}\n\n\tconnInfo, err := ccim.CreateConnectionConfigInfo(cimObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateConnectionConfig()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.ConnectionConfigInfo\n\terr = gc.CopySrcToDest(&connInfo, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateConnectionConfig()\")\n\t}\n\n\tresp := &pb.ConnectionConfigInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// ListConnectionConfig - Connection Config 목록\nfunc (s *CIMService) ListConnectionConfig(ctx context.Context, req *pb.Empty) (*pb.ListConnectionConfigInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.ListConnectionConfig()\")\n\n\tinfoList, err := ccim.ListConnectionConfig()\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.ListConnectionConfig()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj []*pb.ConnectionConfigInfo\n\terr = gc.CopySrcToDest(&infoList, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.ListConnectionConfig()\")\n\t}\n\n\tresp := &pb.ListConnectionConfigInfoResponse{Items: grpcObj}\n\treturn resp, nil\n}\n\n// GetConnectionConfig - Connection Config 조회\nfunc (s *CIMService) GetConnectionConfig(ctx context.Context, req *pb.ConnectionConfigQryRequest) (*pb.ConnectionConfigInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.GetConnectionConfig()\")\n\n\tconnInfo, err := ccim.GetConnectionConfig(req.ConfigName)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.GetConnectionConfig()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.ConnectionConfigInfo\n\terr = gc.CopySrcToDest(&connInfo, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.GetConnectionConfig()\")\n\t}\n\n\tresp := &pb.ConnectionConfigInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// DeleteConnectionConfig - Connection Config 삭제\nfunc (s *CIMService) DeleteConnectionConfig(ctx context.Context, req *pb.ConnectionConfigQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.DeleteConnectionConfig()\")\n\n\tresult, err := ccim.DeleteConnectionConfig(req.ConfigName)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.DeleteConnectionConfig()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/credential.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\tcim \"github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateCredential - Credential 생성\nfunc (s *CIMService) CreateCredential(ctx context.Context, req *pb.CredentialInfoRequest) (*pb.CredentialInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.CreateCredential()\")\n\n\t// GRPC 메시지에서 CIM 객체로 복사\n\tvar cimObj cim.CredentialInfo\n\terr := gc.CopySrcToDest(&req.Item, &cimObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateCredential()\")\n\t}\n\n\tcrdInfo, err := cim.RegisterCredentialInfo(cimObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateCredential()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.CredentialInfo\n\terr = gc.CopySrcToDest(&crdInfo, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateCredential()\")\n\t}\n\n\tresp := &pb.CredentialInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// ListCredential - Credential 목록\nfunc (s *CIMService) ListCredential(ctx context.Context, req *pb.Empty) (*pb.ListCredentialInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.ListCredential()\")\n\n\tinfoList, err := cim.ListCredential()\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.ListCredential()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj []*pb.CredentialInfo\n\terr = gc.CopySrcToDest(&infoList, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.ListCredential()\")\n\t}\n\n\tresp := &pb.ListCredentialInfoResponse{Items: grpcObj}\n\treturn resp, nil\n}\n\n// GetCredential - Credential 조회\nfunc (s *CIMService) GetCredential(ctx context.Context, req *pb.CredentialQryRequest) (*pb.CredentialInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.GetCredential()\")\n\n\tcrdInfo, err := cim.GetCredential(req.CredentialName)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.GetCredential()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.CredentialInfo\n\terr = gc.CopySrcToDest(&crdInfo, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.GetCredential()\")\n\t}\n\n\tresp := &pb.CredentialInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// DeleteCredential - Credential 삭제\nfunc (s *CIMService) DeleteCredential(ctx context.Context, req *pb.CredentialQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.DeleteCredential()\")\n\n\tresult, err := cim.UnRegisterCredential(req.CredentialName)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.DeleteCredential()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/driver.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\tdim \"github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateCloudDriver - Cloud Driver 생성\nfunc (s *CIMService) CreateCloudDriver(ctx context.Context, req *pb.CloudDriverInfoRequest) (*pb.CloudDriverInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.CreateCloudDriver()\")\n\n\t// GRPC 메시지에서 CIM 객체로 복사\n\tvar cimObj dim.CloudDriverInfo\n\terr := gc.CopySrcToDest(&req.Item, &cimObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateCloudDriver()\")\n\t}\n\n\tdrvInfo, err := dim.RegisterCloudDriverInfo(cimObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateCloudDriver()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.CloudDriverInfo\n\terr = gc.CopySrcToDest(&drvInfo, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateCloudDriver()\")\n\t}\n\n\tresp := &pb.CloudDriverInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// ListCloudDriver -Cloud Driver 목록\nfunc (s *CIMService) ListCloudDriver(ctx context.Context, req *pb.Empty) (*pb.ListCloudDriverInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.ListCloudDriver()\")\n\n\tinfoList, err := dim.ListCloudDriver()\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.ListCloudDriver()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj []*pb.CloudDriverInfo\n\terr = gc.CopySrcToDest(&infoList, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.ListCloudDriver()\")\n\t}\n\n\tresp := &pb.ListCloudDriverInfoResponse{Items: grpcObj}\n\treturn resp, nil\n}\n\n// GetCloudDriver - Cloud Driver 조회\nfunc (s *CIMService) GetCloudDriver(ctx context.Context, req *pb.CloudDriverQryRequest) (*pb.CloudDriverInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.GetCloudDriver()\")\n\n\tdrvInfo, err := dim.GetCloudDriver(req.DriverName)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.GetCloudDriver()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.CloudDriverInfo\n\terr = gc.CopySrcToDest(&drvInfo, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.GetCloudDriver()\")\n\t}\n\n\tresp := &pb.CloudDriverInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// DeleteCloudDriver - Cloud Driver 삭제\nfunc (s *CIMService) DeleteCloudDriver(ctx context.Context, req *pb.CloudDriverQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.DeleteCloudDriver()\")\n\n\tresult, err := dim.UnRegisterCloudDriver(req.DriverName)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.DeleteCloudDriver()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/image.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\tcmrt \"github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime\"\n\tcres \"github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateImage - Image 생성\nfunc (s *CCMService) CreateImage(ctx context.Context, req *pb.ImageCreateRequest) (*pb.ImageInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.CreateImage()\")\n\n\t// Grpc RegInfo => Driver ReqInfo\n\treqInfo := cres.ImageReqInfo{\n\t\tIId: cres.IID{NameId: req.Item.Name, SystemId: \"\"},\n\t}\n\n\t// Call common-runtime API\n\tresult, err := cmrt.CreateImage(req.ConnectionName, rsImage, reqInfo)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.CreateImage()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.ImageInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.CreateImage()\")\n\t}\n\n\tresp := &pb.ImageInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// ListImage - Image 목록\nfunc (s *CCMService) ListImage(ctx context.Context, req *pb.ImageAllQryRequest) (*pb.ListImageInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListImage()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.ListImage(req.ConnectionName, rsImage)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListImage()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj []*pb.ImageInfo\n\terr = gc.CopySrcToDest(&result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListImage()\")\n\t}\n\n\tresp := &pb.ListImageInfoResponse{Items: grpcObj}\n\treturn resp, nil\n}\n\n// GetImage - Image 조회\nfunc (s *CCMService) GetImage(ctx context.Context, req *pb.ImageQryRequest) (*pb.ImageInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.GetImage()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.GetImage(req.ConnectionName, rsImage, req.Name)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetImage()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.ImageInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetImage()\")\n\t}\n\n\tresp := &pb.ImageInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// DeleteImage - Image 삭제\nfunc (s *CCMService) DeleteImage(ctx context.Context, req *pb.ImageQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.DeleteImage()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.DeleteImage(req.ConnectionName, rsImage, req.Name)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.DeleteImage()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/keypair.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\tcmrt \"github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime\"\n\tcres \"github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateKey - KeyPair 생성\nfunc (s *CCMService) CreateKey(ctx context.Context, req *pb.KeyPairCreateRequest) (*pb.KeyPairInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.CreateKey()\")\n\n\t// Grpc RegInfo => Driver ReqInfo\n\treqInfo := cres.KeyPairReqInfo{\n\t\tIId: cres.IID{NameId: req.Item.Name, SystemId: \"\"},\n\t}\n\n\t// Call common-runtime API\n\tresult, err := cmrt.CreateKey(req.ConnectionName, rsKey, reqInfo)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.CreateKey()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.KeyPairInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.CreateKey()\")\n\t}\n\n\tresp := &pb.KeyPairInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// ListKey - KeyPair 목록\nfunc (s *CCMService) ListKey(ctx context.Context, req *pb.KeyPairAllQryRequest) (*pb.ListKeyPairInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListKey()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.ListKey(req.ConnectionName, rsKey)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListKey()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj []*pb.KeyPairInfo\n\terr = gc.CopySrcToDest(&result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListKey()\")\n\t}\n\n\tresp := &pb.ListKeyPairInfoResponse{Items: grpcObj}\n\treturn resp, nil\n}\n\n// GetKey - KeyPair 조회\nfunc (s *CCMService) GetKey(ctx context.Context, req *pb.KeyPairQryRequest) (*pb.KeyPairInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.GetKey()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.GetKey(req.ConnectionName, rsKey, req.Name)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetKey()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.KeyPairInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetKey()\")\n\t}\n\n\tresp := &pb.KeyPairInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// DeleteKey - KeyPair 삭제\nfunc (s *CCMService) DeleteKey(ctx context.Context, req *pb.KeyPairQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.DeleteKey()\")\n\n\t// Call common-runtime API\n\tresult, _, err := cmrt.DeleteResource(req.ConnectionName, rsKey, req.Name, req.Force)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.DeleteKey()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// ListAllKey - 관리 Key 목록\nfunc (s *CCMService) ListAllKey(ctx context.Context, req *pb.KeyPairAllQryRequest) (*pb.AllResourceInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListAllKey()\")\n\n\t// Call common-runtime API\n\tallResourceList, err := cmrt.ListAllResource(req.ConnectionName, rsKey)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListAllKey()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.AllResourceInfoResponse\n\terr = gc.CopySrcToDest(&allResourceList, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListAllKey()\")\n\t}\n\n\treturn &grpcObj, nil\n}\n\n// DeleteCSPKey - CSP Key 삭제\nfunc (s *CCMService) DeleteCSPKey(ctx context.Context, req *pb.CSPKeyPairQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.DeleteCSPKey()\")\n\n\t// Call common-runtime API\n\tresult, _, err := cmrt.DeleteCSPResource(req.ConnectionName, rsKey, req.Id)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.DeleteCSPKey()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/os.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\tim \"github.com/cloud-barista/poc-cicd-spider/cloud-info-manager\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ListCloudOS - Cloud OS 조회\nfunc (s *CIMService) ListCloudOS(ctx context.Context, req *pb.Empty) (*pb.ListCloudOSInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.ListCloudOS()\")\n\n\tinfoList := im.ListCloudOS()\n\n\tresp := &pb.ListCloudOSInfoResponse{Items: infoList}\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/region.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\trim \"github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateRegion - Region 생성\nfunc (s *CIMService) CreateRegion(ctx context.Context, req *pb.RegionInfoRequest) (*pb.RegionInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.CreateRegion()\")\n\n\t// GRPC 메시지에서 CIM 객체로 복사\n\tvar cimObj rim.RegionInfo\n\terr := gc.CopySrcToDest(&req.Item, &cimObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateRegion()\")\n\t}\n\n\tregionInfo, err := rim.RegisterRegionInfo(cimObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateRegion()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.RegionInfo\n\terr = gc.CopySrcToDest(&regionInfo, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.CreateRegion()\")\n\t}\n\n\tresp := &pb.RegionInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// ListRegion - Region 목록\nfunc (s *CIMService) ListRegion(ctx context.Context, req *pb.Empty) (*pb.ListRegionInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.ListRegion()\")\n\n\tinfoList, err := rim.ListRegion()\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.ListRegion()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj []*pb.RegionInfo\n\terr = gc.CopySrcToDest(&infoList, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.ListRegion()\")\n\t}\n\n\tresp := &pb.ListRegionInfoResponse{Items: grpcObj}\n\treturn resp, nil\n}\n\n// GetRegion - Region 조회\nfunc (s *CIMService) GetRegion(ctx context.Context, req *pb.RegionQryRequest) (*pb.RegionInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.GetRegion()\")\n\n\tregionInfo, err := rim.GetRegion(req.RegionName)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.GetRegion()\")\n\t}\n\n\t// CIM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.RegionInfo\n\terr = gc.CopySrcToDest(&regionInfo, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.GetRegion()\")\n\t}\n\n\tresp := &pb.RegionInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// DeleteRegion - Region 삭제\nfunc (s *CIMService) DeleteRegion(ctx context.Context, req *pb.RegionQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CIMService.DeleteRegion()\")\n\n\tresult, err := rim.UnRegisterRegion(req.RegionName)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CIMService.DeleteRegion()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/security.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\t\"strings\"\n\n\tcm \"github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime\"\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\tcmrt \"github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime\"\n\tcres \"github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateSecurity - Security 생성\nfunc (s *CCMService) CreateSecurity(ctx context.Context, req *pb.SecurityCreateRequest) (*pb.SecurityInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.CreateSecurity()\")\n\n\t// check the input Name to include the SecurityGroup Delimiter\n\tif strings.Contains(req.Item.Name, cm.SG_DELIMITER) {\n\t\treturn nil, gc.NewGrpcStatusErr(cm.SG_DELIMITER+\" cannot be used in Security Group name!!\", \"\", \"CCMService.CreateSecurity()\")\n\t}\n\n\t// GRPC 메시지에서 CCM 객체로 복사\n\tvar reqInfo cres.SecurityReqInfo\n\terr := gc.CopySrcToDest(&req.Item, &reqInfo)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.CreateSecurity()\")\n\t}\n\t// SG NameID format => {VPC NameID} + cm.SG_DELIMITER + {SG NameID}\n\t// transform: SG NameID => {VPC NameID} + cm.SG_DELIMITER + {SG NameID}\n\t//reqInfo.IId = cres.IID{NameId: req.Item.VpcName + cm.SG_DELIMITER + req.Item.Name, SystemId: \"\"}\n\treqInfo.IId = cres.IID{NameId: req.Item.VpcName + cm.SG_DELIMITER + req.Item.Name, SystemId: req.Item.Name} // for NCP: fixed NameID => SystemID, Driver: (1)search systemID with fixed NameID (2)replace fixed NameID into SysemID\n\treqInfo.VpcIID = cres.IID{NameId: req.Item.VpcName, SystemId: \"\"}\n\n\t// Call common-runtime API\n\tresult, err := cmrt.CreateSecurity(req.ConnectionName, rsSG, reqInfo)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.CreateSecurity()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.SecurityInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.CreateSecurity()\")\n\t}\n\n\tresp := &pb.SecurityInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// ListSecurity - Security 목록\nfunc (s *CCMService) ListSecurity(ctx context.Context, req *pb.SecurityAllQryRequest) (*pb.ListSecurityInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListSecurity()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.ListSecurity(req.ConnectionName, rsSG)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListSecurity()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj []*pb.SecurityInfo\n\terr = gc.CopySrcToDest(&result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListSecurity()\")\n\t}\n\n\tresp := &pb.ListSecurityInfoResponse{Items: grpcObj}\n\treturn resp, nil\n}\n\n// GetSecurity - Security 조회\nfunc (s *CCMService) GetSecurity(ctx context.Context, req *pb.SecurityQryRequest) (*pb.SecurityInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.GetSecurity()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.GetSecurity(req.ConnectionName, rsSG, req.Name)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetSecurity()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.SecurityInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetSecurity()\")\n\t}\n\n\tresp := &pb.SecurityInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// DeleteSecurity - Security 삭제\nfunc (s *CCMService) DeleteSecurity(ctx context.Context, req *pb.SecurityQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.DeleteSecurity()\")\n\n\t// Call common-runtime API\n\tresult, _, err := cmrt.DeleteResource(req.ConnectionName, rsSG, req.Name, req.Force)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.DeleteSecurity()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// ListAllSecurity - 관리 Security 목록\nfunc (s *CCMService) ListAllSecurity(ctx context.Context, req *pb.SecurityAllQryRequest) (*pb.AllResourceInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListAllSecurity()\")\n\n\t// Call common-runtime API\n\tallResourceList, err := cmrt.ListAllResource(req.ConnectionName, rsSG)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListAllSecurity()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.AllResourceInfoResponse\n\terr = gc.CopySrcToDest(&allResourceList, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListAllSecurity()\")\n\t}\n\n\treturn &grpcObj, nil\n}\n\n// DeleteCSPSecurity - CSP Security 삭제\nfunc (s *CCMService) DeleteCSPSecurity(ctx context.Context, req *pb.CSPSecurityQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.DeleteCSPSecurity()\")\n\n\t// Call common-runtime API\n\tresult, _, err := cmrt.DeleteCSPResource(req.ConnectionName, rsSG, req.Id)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.DeleteCSPSecurity()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/service.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\n// ===== [ Constants and Variables ] =====\n\n// define string of resource types\nconst (\n\trsImage string = \"image\"\n\trsVPC   string = \"vpc\"\n\trsSG    string = \"sg\"\n\trsKey   string = \"keypair\"\n\trsVM    string = \"vm\"\n)\n\n// ===== [ Types ] =====\n\n// CIMService -\ntype CIMService struct {\n}\n\n// CCMService -\ntype CCMService struct {\n}\n\n// SSHService -\ntype SSHService struct {\n}\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/ssh.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\t\"strings\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\tsshrun \"github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// SSHRun - SSH 실행\nfunc (s *SSHService) SSHRun(ctx context.Context, req *pb.SSHRunRequest) (*pb.StringResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling SSHService.SSHRun()\")\n\n\tstrPrivateKey := strings.Join(req.PrivateKey[:], \"\\n\")\n\n\tsshInfo := sshrun.SSHInfo{\n\t\tUserName:   req.UserName,\n\t\tPrivateKey: []byte(strPrivateKey),\n\t\tServerPort: req.ServerPort,\n\t}\n\n\tvar result string\n\tvar err error\n\tif result, err = sshrun.SSHRun(sshInfo, req.Command); err != nil {\n\t\treturn nil, gc.NewGrpcStatusErr(\"Error while running cmd: \"+req.Command+\"]\"+err.Error(), \"\", \"SSHService.SSHRun()\")\n\t}\n\n\tresp := &pb.StringResponse{Result: result}\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/vm.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\n\tcm \"github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime\"\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\tcmrt \"github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime\"\n\tcres \"github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// StartVM - VM 시작\nfunc (s *CCMService) StartVM(ctx context.Context, req *pb.VMCreateRequest) (*pb.VMInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.StartVM()\")\n\n\t// Rest RegInfo => Driver ReqInfo\n\t// (1) create SecurityGroup IID List\n\tsgIIDList := []cres.IID{}\n\tfor _, sgName := range req.Item.SecurityGroupNames {\n\t\t// SG NameID format => {VPC NameID} + cm.SG_DELIMITER + {SG NameID}\n\t\t// transform: SG NameID => {VPC NameID}-{SG NameID}\n\t\tsgIID := cres.IID{NameId: req.Item.VpcName + cm.SG_DELIMITER + sgName, SystemId: \"\"}\n\t\tsgIIDList = append(sgIIDList, sgIID)\n\t}\n\t// (2) create VMReqInfo with SecurityGroup IID List\n\treqInfo := cres.VMReqInfo{\n\t\tIId:               cres.IID{NameId: req.Item.Name, SystemId: \"\"},\n\t\tImageIID:          cres.IID{NameId: req.Item.ImageName, SystemId: \"\"},\n\t\tVpcIID:            cres.IID{NameId: req.Item.VpcName, SystemId: \"\"},\n\t\tSubnetIID:         cres.IID{NameId: req.Item.SubnetName, SystemId: \"\"},\n\t\tSecurityGroupIIDs: sgIIDList,\n\n\t\tVMSpecName: req.Item.VmSpecName,\n\t\tKeyPairIID: cres.IID{NameId: req.Item.KeyPairName, SystemId: \"\"},\n\n\t\tVMUserId:     req.Item.VmUserId,\n\t\tVMUserPasswd: req.Item.VmUserPasswd,\n\t}\n\n\t// Call common-runtime API\n\tresult, err := cmrt.StartVM(req.ConnectionName, rsVM, reqInfo)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.StartVM()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.VMInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.StartVM()\")\n\t}\n\n\tresp := &pb.VMInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// ControlVM - VM 제어\nfunc (s *CCMService) ControlVM(ctx context.Context, req *pb.VMActionRequest) (*pb.StatusResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ControlVM()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.ControlVM(req.ConnectionName, rsVM, req.Name, req.Action)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ControlVM()\")\n\t}\n\n\tresp := &pb.StatusResponse{Status: string(result)}\n\treturn resp, nil\n}\n\n// ListVM - VM 목록\nfunc (s *CCMService) ListVM(ctx context.Context, req *pb.VMAllQryRequest) (*pb.ListVMInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListVM()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.ListVM(req.ConnectionName, rsVM)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListVM()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj []*pb.VMInfo\n\terr = gc.CopySrcToDest(&result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListVM()\")\n\t}\n\n\tresp := &pb.ListVMInfoResponse{Items: grpcObj}\n\treturn resp, nil\n}\n\n// GetVM - VM 조회\nfunc (s *CCMService) GetVM(ctx context.Context, req *pb.VMQryRequest) (*pb.VMInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.GetVM()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.GetVM(req.ConnectionName, rsVM, req.Name)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetVM()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.VMInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetVM()\")\n\t}\n\n\tresp := &pb.VMInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// ListVMStatus - VM 상태 목록\nfunc (s *CCMService) ListVMStatus(ctx context.Context, req *pb.VMAllQryRequest) (*pb.ListVMStatusInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListVMStatus()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.ListVMStatus(req.ConnectionName, rsVM)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListVMStatus()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj []*pb.VMStatusInfo\n\terr = gc.CopySrcToDest(&result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListVMStatus()\")\n\t}\n\n\tresp := &pb.ListVMStatusInfoResponse{Items: grpcObj}\n\treturn resp, nil\n}\n\n// GetVMStatus - VM 상태 조회\nfunc (s *CCMService) GetVMStatus(ctx context.Context, req *pb.VMQryRequest) (*pb.StatusResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.GetVMStatus()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.GetVMStatus(req.ConnectionName, rsVM, req.Name)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetVMStatus()\")\n\t}\n\n\tresp := &pb.StatusResponse{Status: string(result)}\n\treturn resp, nil\n}\n\n// TerminateVM - VM 삭제\nfunc (s *CCMService) TerminateVM(ctx context.Context, req *pb.VMQryRequest) (*pb.StatusResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.TerminateVM()\")\n\n\t// Call common-runtime API\n\t_, result, err := cmrt.DeleteResource(req.ConnectionName, rsVM, req.Name, req.Force)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.TerminateVM()\")\n\t}\n\n\tresp := &pb.StatusResponse{Status: string(result)}\n\treturn resp, nil\n}\n\n// ListAllVM - 관리 VM 목록\nfunc (s *CCMService) ListAllVM(ctx context.Context, req *pb.VMAllQryRequest) (*pb.AllResourceInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListAllVM()\")\n\n\t// Call common-runtime API\n\tallResourceList, err := cmrt.ListAllResource(req.ConnectionName, rsVM)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListAllVM()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.AllResourceInfoResponse\n\terr = gc.CopySrcToDest(&allResourceList, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListAllVM()\")\n\t}\n\n\treturn &grpcObj, nil\n}\n\n// TerminateCSPVM - CSP VM 삭제\nfunc (s *CCMService) TerminateCSPVM(ctx context.Context, req *pb.CSPVMQryRequest) (*pb.StatusResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.TerminateCSPVM()\")\n\n\t// Call common-runtime API\n\t_, result, err := cmrt.DeleteCSPResource(req.ConnectionName, rsVM, req.Id)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.TerminateCSPVM()\")\n\t}\n\n\tresp := &pb.StatusResponse{Status: string(result)}\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/vmspec.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\tcmrt \"github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ListVMSpec - VM Spec 목록\nfunc (s *CCMService) ListVMSpec(ctx context.Context, req *pb.VMSpecAllQryRequest) (*pb.ListVMSpecInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListVMSpec()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.ListVMSpec(req.ConnectionName)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListVMSpec()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj []*pb.VMSpecInfo\n\terr = gc.CopySrcToDest(&result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListVMSpec()\")\n\t}\n\n\tresp := &pb.ListVMSpecInfoResponse{Items: grpcObj}\n\treturn resp, nil\n}\n\n// GetVMSpec - VM Spec 조회\nfunc (s *CCMService) GetVMSpec(ctx context.Context, req *pb.VMSpecQryRequest) (*pb.VMSpecInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.GetVMSpec()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.GetVMSpec(req.ConnectionName, req.Name)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetVMSpec()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.VMSpecInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetVMSpec()\")\n\t}\n\n\tresp := &pb.VMSpecInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// ListOrgVMSpec - 클라우드의 원래 VM Spec 목록\nfunc (s *CCMService) ListOrgVMSpec(ctx context.Context, req *pb.VMSpecAllQryRequest) (*pb.StringResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListOrgVMSpec()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.ListOrgVMSpec(req.ConnectionName)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListOrgVMSpec()\")\n\t}\n\n\tresp := &pb.StringResponse{Result: result}\n\n\treturn resp, nil\n}\n\n// GetOrgVMSpec - 클라우드의 원래 VM Spec 조회\nfunc (s *CCMService) GetOrgVMSpec(ctx context.Context, req *pb.VMSpecQryRequest) (*pb.StringResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.GetOrgVMSpec()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.GetOrgVMSpec(req.ConnectionName, req.Name)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetOrgVMSpec()\")\n\t}\n\n\tresp := &pb.StringResponse{Result: result}\n\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\napi-runtime/grpc-runtime/service/vpc.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage service\n\nimport (\n\t\"context\"\n\t\"strings\"\n\tcm \"github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime\"\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n\n\tcmrt \"github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime\"\n\tcres \"github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateVPC - VPC 생성\nfunc (s *CCMService) CreateVPC(ctx context.Context, req *pb.VPCCreateRequest) (*pb.VPCInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.CreateVPC()\")\n\n\t// check the input Name to include the SUBNET: Prefix\n\tif strings.HasPrefix(req.Item.Name, cm.SUBNET_PREFIX) {\n\t\treturn nil, gc.NewGrpcStatusErr(cm.SUBNET_PREFIX+\" cannot be used for VPC name prefix!!\", \"\", \"CCMService.CreateVPC()\")\n\t}\n\t// check the input Name to include the SecurityGroup Delimiter\n\tif strings.HasPrefix(req.Item.Name, cm.SG_DELIMITER) {\n\t\treturn nil, gc.NewGrpcStatusErr(cm.SG_DELIMITER+\" cannot be used in VPC name!!\", \"\", \"CCMService.CreateVPC()\")\n\t}\n\n\t// Grpc RegInfo => Driver ReqInfo\n\t// (1) create SubnetInfo List\n\tsubnetInfoList := []cres.SubnetInfo{}\n\tfor _, info := range req.Item.SubnetInfoList {\n\t\tsubnetInfo := cres.SubnetInfo{IId: cres.IID{NameId: info.Name, SystemId: \"\"}, IPv4_CIDR: info.Ipv4Cidr}\n\t\tsubnetInfoList = append(subnetInfoList, subnetInfo)\n\t}\n\t// (2) create VPCReqInfo with SubnetInfo List\n\treqInfo := cres.VPCReqInfo{\n\t\tIId:            cres.IID{NameId: req.Item.Name, SystemId: \"\"},\n\t\tIPv4_CIDR:      req.Item.Ipv4Cidr,\n\t\tSubnetInfoList: subnetInfoList,\n\t}\n\n\t// Call common-runtime API\n\tresult, err := cmrt.CreateVPC(req.ConnectionName, rsVPC, reqInfo)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.CreateVPC()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.VPCInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.CreateVPC()\")\n\t}\n\n\tresp := &pb.VPCInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// ListVPC - VPC 목록\nfunc (s *CCMService) ListVPC(ctx context.Context, req *pb.VPCAllQryRequest) (*pb.ListVPCInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListVPC()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.ListVPC(req.ConnectionName, rsVPC)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListVPC()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj []*pb.VPCInfo\n\terr = gc.CopySrcToDest(&result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListVPC()\")\n\t}\n\n\tresp := &pb.ListVPCInfoResponse{Items: grpcObj}\n\treturn resp, nil\n}\n\n// GetVPC - VPC 조회\nfunc (s *CCMService) GetVPC(ctx context.Context, req *pb.VPCQryRequest) (*pb.VPCInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.GetVPC()\")\n\n\t// Call common-runtime API\n\tresult, err := cmrt.GetVPC(req.ConnectionName, rsVPC, req.Name)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetVPC()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.VPCInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.GetVPC()\")\n\t}\n\n\tresp := &pb.VPCInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// DeleteVPC - VPC 삭제\nfunc (s *CCMService) DeleteVPC(ctx context.Context, req *pb.VPCQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.DeleteVPC()\")\n\n\t// Call common-runtime API\n\tresult, _, err := cmrt.DeleteResource(req.ConnectionName, rsVPC, req.Name, req.Force)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.DeleteVPC()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// ListAllVPC - 관리 VPC 목록\nfunc (s *CCMService) ListAllVPC(ctx context.Context, req *pb.VPCAllQryRequest) (*pb.AllResourceInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.ListAllVPC()\")\n\n\t// Call common-runtime API\n\tallResourceList, err := cmrt.ListAllResource(req.ConnectionName, rsVPC)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListAllVPC()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.AllResourceInfoResponse\n\terr = gc.CopySrcToDest(&allResourceList, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.ListAllVPC()\")\n\t}\n\n\treturn &grpcObj, nil\n}\n\n// DeleteCSPVPC - CSP VPC 삭제\nfunc (s *CCMService) DeleteCSPVPC(ctx context.Context, req *pb.CSPVPCQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.DeleteCSPVPC()\")\n\n\t// Call common-runtime API\n\tresult, _, err := cmrt.DeleteCSPResource(req.ConnectionName, rsVPC, req.Id)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.DeleteCSPVPC()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// AddSubnet - Subnet 추가\nfunc (s *CCMService) AddSubnet(ctx context.Context, req *pb.SubnetAddRequest) (*pb.VPCInfoResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.AddSubnet()\")\n\n\t// Grpc RegInfo => Driver ReqInfo\n\treqSubnetInfo := cres.SubnetInfo{IId: cres.IID{req.Item.Name, \"\"}, IPv4_CIDR: req.Item.Ipv4Cidr}\n\n\t// Call common-runtime API\n\tresult, err := cmrt.AddSubnet(req.ConnectionName, cm.SUBNET_PREFIX+req.VpcName, req.VpcName, reqSubnetInfo)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.AddSubnet()\")\n\t}\n\n\t// CCM 객체에서 GRPC 메시지로 복사\n\tvar grpcObj pb.VPCInfo\n\terr = gc.CopySrcToDest(result, &grpcObj)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.AddSubnet()\")\n\t}\n\n\tresp := &pb.VPCInfoResponse{Item: &grpcObj}\n\treturn resp, nil\n}\n\n// RemoveSubnet - Subnet 삭제\nfunc (s *CCMService) RemoveSubnet(ctx context.Context, req *pb.SubnetQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.RemoveSubnet()\")\n\n\t// Call common-runtime API\n\tresult, _, err := cmrt.DeleteResource(req.ConnectionName, cm.SUBNET_PREFIX+req.VpcName, req.SubnetName, req.Force)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.RemoveSubnet()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// RemoveCSPSubnet - CSP Subnet 삭제\nfunc (s *CCMService) RemoveCSPSubnet(ctx context.Context, req *pb.CSPSubnetQryRequest) (*pb.BooleanResponse, error) {\n\tlogger := logger.NewLogger()\n\n\tlogger.Debug(\"calling CCMService.RemoveCSPSubnet()\")\n\n\t// Call common-runtime API\n\tresult, _, err := cmrt.DeleteCSPResource(req.ConnectionName, cm.SUBNET_PREFIX+req.VpcName, req.Id)\n\tif err != nil {\n\t\treturn nil, gc.ConvGrpcStatusErr(err, \"\", \"CCMService.RemoveCSPSubnet()\")\n\t}\n\n\tresp := &pb.BooleanResponse{Result: result}\n\treturn resp, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ninterface/api/test/test_api.go:248: File is not `gofmt`-ed with `-s` (gofmt)\n\t\t\tapi.KeyValue{Key: \"IdentityEndpoint\", Value: identityEndpoint},\n\t\t\tapi.KeyValue{Key: \"Username\", Value: username},\n\t\t\tapi.KeyValue{Key: \"Password\", Value: password},\n\t\t\tapi.KeyValue{Key: \"DomainName\", Value: domainName},\n\t\t\tapi.KeyValue{Key: \"ProjectID\", Value: projectID},\napi-runtime/grpc-runtime/config/config.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\n// Package config - Configuration for Cloud-Barista's GRPC and provides the required process\npackage config\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"strings\"\n\t\"time\"\n)\n\n// ===== [ Constants and Variables ] =====\n\nconst (\n\t// ConfigVersion - 설정 구조에 대한 버전\n\tConfigVersion = 1\n)\n\n// ===== [ Types ] =====\n\n// GrpcConfig - CB-GRPC 서비스 설정 구조\ntype GrpcConfig struct {\n\tVersion int             `mapstructure:\"version\"`\n\tGSL     GrpcServiceList `mapstructure:\"grpc\"`\n}\n\n// GrpcServiceList - CB-GRPC 서비스 목록\ntype GrpcServiceList struct {\n\tSpiderSrv *GrpcServerConfig `mapstructure:\"spidersrv\"`\n\tSpiderCli *GrpcClientConfig `mapstructure:\"spidercli\"`\n}\n\n// GrpcServerConfig - CB-GRPC 서버 설정 구조\ntype GrpcServerConfig struct {\n\tAddr         string              `mapstructure:\"addr\"`\n\tReflection   string              `mapstructure:\"reflection\"`\n\tTLS          *TLSConfig          `mapstructure:\"tls\"`\n\tInterceptors *InterceptorsConfig `mapstructure:\"interceptors\"`\n}\n\n// GrpcClientConfig - CB-GRPC 클라이언트 설정 구조\ntype GrpcClientConfig struct {\n\tServerAddr   string              `mapstructure:\"server_addr\"`\n\tTimeout      time.Duration       `mapstructure:\"timeout\"`\n\tTLS          *TLSConfig          `mapstructure:\"tls\"`\n\tInterceptors *InterceptorsConfig `mapstructure:\"interceptors\"`\n}\n\n// TLSConfig - TLS 설정 구조\ntype TLSConfig struct {\n\tTLSCert string `mapstructure:\"tls_cert\"`\n\tTLSKey  string `mapstructure:\"tls_key\"`\n\tTLSCA   string `mapstructure:\"tls_ca\"`\n}\n\n// InterceptorsConfig - GRPC 인터셉터 설정 구조\ntype InterceptorsConfig struct {\n\tAuthJWT           *AuthJWTConfig           `mapstructure:\"auth_jwt\"`\n\tPrometheusMetrics *PrometheusMetricsConfig `mapstructure:\"prometheus_metrics\"`\n\tOpentracing       *OpentracingConfig       `mapstructure:\"opentracing\"`\n}\n\n// AuthJWTConfig - AuthJWT 설정 구조\ntype AuthJWTConfig struct {\n\tJWTKey   string `mapstructure:\"jwt_key\"`\n\tJWTToken string `mapstructure:\"jwt_token\"`\n}\n\n// PrometheusMetricsConfig - Prometheus Metrics 설정 구조\ntype PrometheusMetricsConfig struct {\n\tListenPort int `mapstructure:\"listen_port\"`\n}\n\n// OpentracingConfig - Opentracing 설정 구조\ntype OpentracingConfig struct {\n\tJaeger *JaegerClientConfig `mapstructure:\"jaeger\"`\n}\n\n// JaegerClientConfig - Jaeger Client 설정 구조\ntype JaegerClientConfig struct {\n\tEndpoint    string  `mapstructure:\"endpoint\"`\n\tServiceName string  `mapstructure:\"service_name\"`\n\tSampleRate  float64 `mapstructure:\"sample_rate\"`\n}\n\n// UnsupportedVersionError - 설정 초기화 과정에서 버전 검증을 통해 반환할 오류 구조\ntype UnsupportedVersionError struct {\n\tHave int\n\tWant int\n}\n\n// ===== [ Implementations ] =====\n\n// Init - 설정에 대한 검사 및 초기화\nfunc (gConf *GrpcConfig) Init() error {\n\t// 설정 파일 버전 검증\n\tif gConf.Version != ConfigVersion {\n\t\treturn &UnsupportedVersionError{\n\t\t\tHave: gConf.Version,\n\t\t\tWant: ConfigVersion,\n\t\t}\n\t}\n\t// 전역변수 초기화\n\tgConf.initGlobalParams()\n\n\treturn nil\n}\n\n// initGlobalParams - 전역 설정 초기화\nfunc (gConf *GrpcConfig) initGlobalParams() {\n\n\tif gConf.GSL.SpiderSrv != nil {\n\n\t\tif gConf.GSL.SpiderSrv.TLS != nil {\n\t\t\tif gConf.GSL.SpiderSrv.TLS.TLSCert != \"\" {\n\t\t\t\tgConf.GSL.SpiderSrv.TLS.TLSCert = ReplaceEnvPath(gConf.GSL.SpiderSrv.TLS.TLSCert)\n\t\t\t}\n\t\t\tif gConf.GSL.SpiderSrv.TLS.TLSKey != \"\" {\n\t\t\t\tgConf.GSL.SpiderSrv.TLS.TLSKey = ReplaceEnvPath(gConf.GSL.SpiderSrv.TLS.TLSKey)\n\t\t\t}\n\t\t}\n\n\t\tif gConf.GSL.SpiderSrv.Interceptors != nil {\n\t\t\tif gConf.GSL.SpiderSrv.Interceptors.Opentracing != nil {\n\t\t\t\tif gConf.GSL.SpiderSrv.Interceptors.Opentracing.Jaeger != nil {\n\n\t\t\t\t\tif gConf.GSL.SpiderSrv.Interceptors.Opentracing.Jaeger.ServiceName == \"\" {\n\t\t\t\t\t\tgConf.GSL.SpiderSrv.Interceptors.Opentracing.Jaeger.ServiceName = \"grpc spider server\"\n\t\t\t\t\t}\n\n\t\t\t\t\tif gConf.GSL.SpiderSrv.Interceptors.Opentracing.Jaeger.SampleRate == 0 {\n\t\t\t\t\t\tgConf.GSL.SpiderSrv.Interceptors.Opentracing.Jaeger.SampleRate = 1\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif gConf.GSL.SpiderCli != nil {\n\n\t\tif gConf.GSL.SpiderCli.Timeout == 0 {\n\t\t\tgConf.GSL.SpiderCli.Timeout = 90 * time.Second\n\t\t}\n\n\t\tif gConf.GSL.SpiderCli.TLS != nil {\n\t\t\tif gConf.GSL.SpiderCli.TLS.TLSCA != \"\" {\n\t\t\t\tgConf.GSL.SpiderCli.TLS.TLSCA = ReplaceEnvPath(gConf.GSL.SpiderCli.TLS.TLSCA)\n\t\t\t}\n\t\t}\n\n\t\tif gConf.GSL.SpiderCli.Interceptors != nil {\n\t\t\tif gConf.GSL.SpiderCli.Interceptors.Opentracing != nil {\n\t\t\t\tif gConf.GSL.SpiderCli.Interceptors.Opentracing.Jaeger != nil {\n\n\t\t\t\t\tif gConf.GSL.SpiderCli.Interceptors.Opentracing.Jaeger.ServiceName == \"\" {\n\t\t\t\t\t\tgConf.GSL.SpiderCli.Interceptors.Opentracing.Jaeger.ServiceName = \"grpc spider client\"\n\t\t\t\t\t}\n\n\t\t\t\t\tif gConf.GSL.SpiderCli.Interceptors.Opentracing.Jaeger.SampleRate == 0 {\n\t\t\t\t\t\tgConf.GSL.SpiderCli.Interceptors.Opentracing.Jaeger.SampleRate = 1\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n// Error - 비 호환 버전에 대한 오류 문자열 반환\nfunc (u *UnsupportedVersionError) Error() string {\n\treturn fmt.Sprintf(\"Unsupported version: %d (wanted: %d)\", u.Have, u.Want)\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// ReplaceEnvPath - $ABC/def ==> /abc/def\nfunc ReplaceEnvPath(str string) string {\n\tif strings.Index(str, \"$\") == -1 {\n\t\treturn str\n\t}\n\n\t// ex) input \"$CBSTORE_ROOT/meta_db/dat\"\n\tstrList := strings.Split(str, \"/\")\n\tfor n, one := range strList {\n\t\tif strings.Index(one, \"$\") != -1 {\n\t\t\tcbstoreRootPath := os.Getenv(strings.Trim(one, \"$\"))\n\t\t\tif cbstoreRootPath == \"\" {\n\t\t\t\tlog.Fatal(one + \" is not set!\")\n\t\t\t}\n\t\t\tstrList[n] = cbstoreRootPath\n\t\t}\n\t}\n\n\tvar resultStr string\n\tfor _, one := range strList {\n\t\tresultStr = resultStr + one + \"/\"\n\t}\n\t// ex) \"/root/go/src/github.com/cloud-barista/poc-cicd-spider/meta_db/dat/\"\n\tresultStr = strings.TrimRight(resultStr, \"/\")\n\tresultStr = strings.ReplaceAll(resultStr, \"//\", \"/\")\n\treturn resultStr\n}\napi-runtime/grpc-runtime/config/parser.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage config\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"reflect\"\n\t\"unsafe\"\n\n\t\"github.com/spf13/viper\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// Parser - Viper lib를 활용하기 위한 Parser 정의 구조 형식\ntype Parser struct {\n\tviper *viper.Viper\n}\n\n// ===== [ Implementations ] =====\n\n// GrpcParse - Viper lib를 이용해서 지정된 CB-GRPC configuration 정보 파싱\nfunc (p Parser) GrpcParse(configFile string) (GrpcConfig, error) {\n\tp.viper.SetConfigFile(configFile)\n\tp.viper.AutomaticEnv()\n\tp.viper.SetConfigType(\"yaml\")\n\n\tvar cfg GrpcConfig\n\n\t// Reading\n\tif err := p.viper.ReadInConfig(); err != nil {\n\t\treturn cfg, checkErr(err, configFile)\n\t}\n\t// Unmarshal to struct\n\tif err := p.viper.Unmarshal(&cfg); err != nil {\n\t\treturn cfg, checkErr(err, configFile)\n\t}\n\t// Initialize\n\tif err := cfg.Init(); err != nil {\n\t\treturn cfg, CheckErr(err, configFile)\n\t}\n\treturn cfg, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// checkErr - Viper lib 처리에서 발생한 오류 반환 (Nested call)\nfunc checkErr(err error, configFile string) error {\n\tswitch e := err.(type) {\n\tcase viper.ConfigParseError:\n\t\tvar subErr error\n\t\tre := reflect.ValueOf(&e).Elem()\n\t\trf := re.Field(0)\n\t\trse := reflect.ValueOf(&subErr).Elem()\n\t\trf = reflect.NewAt(rf.Type(), unsafe.Pointer(rf.UnsafeAddr())).Elem()\n\t\trse.Set(rf)\n\t\treturn checkErr(subErr, configFile)\n\tdefault:\n\t\treturn CheckErr(err, configFile)\n\t}\n}\n\n// ===== [ Public Functions ] =====\n\n// CheckErr - 검증된 오류 정보 반환\nfunc CheckErr(err error, configFile string) error {\n\tswitch e := err.(type) {\n\tcase *os.PathError:\n\t\treturn fmt.Errorf(\"'%s' (%s): %s\", configFile, e.Op, e.Err.Error())\n\tdefault:\n\t\treturn fmt.Errorf(\"'%s': %v\", configFile, err)\n\t}\n}\n\n// MakeParser - Viber lib를 활용하는 설정 Parser 생성\nfunc MakeParser() Parser {\n\treturn Parser{viper.New()}\n}\ncloud-control-manager/cloud-driver/interfaces/resources/IId.go:15: File is not `gofmt`-ed with `-s` (gofmt)\n        NameId     string // NameID by user\n        SystemId   string // SystemID by CloudOS\ncloud-control-manager/cloud-driver/interfaces/resources/ImageHandler.go:15: File is not `gofmt`-ed with `-s` (gofmt)\n\tIId   IID \t// {NameId, SystemId}\ncloud-control-manager/cloud-driver/interfaces/resources/KeyPairHandler.go:15: File is not `gofmt`-ed with `-s` (gofmt)\n\tIId   IID       // {NameId, SystemId}\ncloud-control-manager/cloud-driver/interfaces/resources/KeyValue.go:14: File is not `gofmt`-ed with `-s` (gofmt)\n        Key string\n        Value string\ncloud-control-manager/cloud-driver/interfaces/resources/VPCHandler.go:15: File is not `gofmt`-ed with `-s` (gofmt)\ntype VPCReqInfo struct { \n\tIId   IID       // {NameId, SystemId}\n\tIPv4_CIDR string \n\tSubnetInfoList []SubnetInfo \ncloud-control-manager/test/test.go:25: File is not `gofmt`-ed with `-s` (gofmt)\n                panic(err)\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:231: File is not `gofmt`-ed with `-s` (gofmt)\n\t\t&cvm.Filter{\ncloud-control-manager/cloud-driver/drivers/tencent/resources/SecurityHandler.go:170: File is not `gofmt`-ed with `-s` (gofmt)\n\t\t&vpc.Filter{\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:46: File is not `gofmt`-ed with `-s` (gofmt)\n\t\t&cvm.Filter{\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:46: File is not `gofmt`-ed with `-s` (gofmt)\n\t\t&cvm.Filter{\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:198: File is not `gofmt`-ed with `-s` (gofmt)\n\t\t&vpc.Filter{\napi-runtime/grpc-runtime/logger/logger.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage logger\n\nimport (\n\t\"io\"\n\t\"io/ioutil\"\n\t\"os\"\n\n\tcblog \"github.com/cloud-barista/cb-log\"\n\t\"github.com/sirupsen/logrus\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// Logger - CB-LOG에서 사용하는 \"logrus\" Logger를 위한 Wrapper 구조\ntype Logger struct {\n\t*logrus.Logger\n}\n\n// ===== [ Implementations ] =====\n\n// SetOutput - 로그 출력기 설정\nfunc (l *Logger) SetOutput(w io.Writer) {\n\tl.Logger.Out = w\n}\n\n// DisableOutput - 로그 출력 비활성화\nfunc (l *Logger) DisableOutput() {\n\tl.SetOutput(ioutil.Discard)\n}\n\n// SetFormatter - 로그 포맷터 설정\nfunc (l *Logger) SetFormatter(f logrus.Formatter) {\n\tl.Logger.Formatter = f\n}\n\n// SetLogLevel - 로그 레벨 설정\nfunc (l *Logger) SetLogLevel(lv logrus.Level) {\n\tl.Logger.SetLevel(lv)\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewLogger - 초기화된 Logger의 인스턴스 생성\nfunc NewLogger() *Logger {\n\t// CBLOG_ROOT 환경변수가 설정되어 있지 않으면 현재 경로로 환경변수 설정)\n\tenv := os.Getenv(\"CBLOG_ROOT\")\n\tif env == \"\" {\n\t\tif dir, err := os.Getwd(); err == nil {\n\t\t\tos.Setenv(\"CBLOG_ROOT\", dir)\n\t\t}\n\t}\n\n\treturn &Logger{\n\t\tLogger: cblog.GetLogger(\"CB-GRPC\"),\n\t}\n}\ncloud-control-manager/cloud-driver/drivers/docker/resources/ImageHandler.go:14: File is not `gofmt`-ed with `-s` (gofmt)\n        \"github.com/sirupsen/logrus\"\n        cblog \"github.com/cloud-barista/cb-log\"\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:15: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"github.com/docker/docker/client\"\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:49: File is not `gofmt`-ed with `-s` (gofmt)\n\tApiKey\t\t\t string // Ibm\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:61: File is not `gofmt`-ed with `-s` (gofmt)\n        err = encryptKeyValueList(keyValueInfoList)\n        if err != nil {\n                return &CredentialInfo{}, err\ncloud-info-manager/credential-info-manager/InfoStore.go:14: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"github.com/cloud-barista/cb-store/utils\"\ncloud-info-manager/test/test.go:18: File is not `gofmt`-ed with `-s` (gofmt)\n        cloudOSList := cim.ListCloudOS()\n        fmt.Printf(\" === %#v\\n\", cloudOSList)\nutils/import-drv-region-info/import-drivers.go:12: File is not `gofmt`-ed with `-s` (gofmt)\n        \"github.com/sirupsen/logrus\"\n        \"github.com/cloud-barista/cb-store/config\"\nutils/import-drv-region-info/import-regions.go:12: File is not `gofmt`-ed with `-s` (gofmt)\n        \"github.com/sirupsen/logrus\"\n        \"github.com/cloud-barista/cb-store/config\"\ncloud-info-manager/driver-info-manager/test/test.go:16: File is not `gofmt`-ed with `-s` (gofmt)\n)\ncloud-control-manager/cloud-driver/drivers/mock/test/keypair_test.go:14: File is not `gofmt`-ed with `-s` (gofmt)\n\tirs \"github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources\"\ncloud-control-manager/cloud-driver/drivers/mock/test/security_test.go:14: File is not `gofmt`-ed with `-s` (gofmt)\n\tirs \"github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources\"\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:12: File is not `gofmt`-ed with `-s` (gofmt)\n\tidrv \"github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces\"\ncloud-control-manager/cloud-driver/drivers/mock/test/vmspec_test.go:11: File is not `gofmt`-ed with `-s` (gofmt)\nimport (\ncloud-info-manager/driver-info-manager/InfoStore.go:15: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"github.com/cloud-barista/cb-store/utils\"\napi-runtime/meerkat-runtime/childkat/ChildKat.go:14: File is not `gofmt`-ed with `-s` (gofmt)\n        common \"github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common\"\napi-runtime/meerkat-runtime/table-handler/TableHandler.go:4: File is not `gofmt`-ed with `-s` (gofmt)\n        \"encoding/json\"\n        \"fmt\"\n        \"io/ioutil\"\n        \"log\"\n        \"net/http\"\n        \"os\"\n\n        \"golang.org/x/net/context\"\n        \"golang.org/x/oauth2\"\n        \"golang.org/x/oauth2/google\"\n        \"google.golang.org/api/sheets/v4\"\ncloud-control-manager/iid-manager/test/list-loop.go:21: File is not `gofmt`-ed with `-s` (gofmt)\nvar cName = \"aws-seoul-config\"\t\t// Connection Name\nvar rName = \"VM\"\t\t\t// Resource Type\ncloud-control-manager/iid-manager/test/parallel-test.go:12: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"fmt\"\ncloud-control-manager/iid-manager/test/simple-test.go:18: File is not `gofmt`-ed with `-s` (gofmt)\nfunc main() {\n\nvar iidRWLock = new(iidm.IIDRWLOCK)\n\n\tcName := \"aws-seoul-config\"\t// Connection Name\n\trName := \"VM\"\t\t\t// Resource Type\n\tnameID1 := \"powerkim_vm_01\"\t// NameID\n\tnameID2 := \"powerkim_vm_02\"\t// NameID\ncloud-control-manager/vm-ssh/test/sshcopy-keypath-test.go:18: File is not `gofmt`-ed with `-s` (gofmt)\n        keyPath  := \"/root/.ssh/id_rsa\"\ncloud-control-manager/vm-ssh/test/sshcopy-test.go:19: File is not `gofmt`-ed with `-s` (gofmt)\n        privateKey  := []byte(`-----BEGIN RSA PRIVATE KEY-----\ncloud-control-manager/vm-ssh/test/sshrun-keypath-test.go:18: File is not `gofmt`-ed with `-s` (gofmt)\n        keyPath  := \"/root/.ssh/id_rsa\" \ncloud-control-manager/vm-ssh/test/sshrun-test.go:19: File is not `gofmt`-ed with `-s` (gofmt)\n\n        privateKey  := []byte(`-----BEGIN RSA PRIVATE KEY-----\napi-runtime/meerkat-runtime/table-handler/test/test-tablehandler.go:4: File is not `gofmt`-ed with `-s` (gofmt)\n        \"fmt\"\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/SecurityHandler.go:239: File is not `gofmt`-ed with `-s` (gofmt)\n\t\ncloud-info-manager/credential-info-manager/test/test.go:18: File is not `gofmt`-ed with `-s` (gofmt)\nfunc main() {\napi-runtime/meerkat-runtime/common/common.go:12: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"time\"\n\t\"strconv\"\napi-runtime/meerkat-runtime/common/runcommand.go:15: File is not `gofmt`-ed with `-s` (gofmt)\n//\t\"sync\"\napi-runtime/meerkat-runtime/common/timer.go:12: File is not `gofmt`-ed with `-s` (gofmt)\n        \"time\"\napi-runtime/meerkat-runtime/common/variables.go:11: File is not `gofmt`-ed with `-s` (gofmt)\n\ninterface/cli/spider/cmd/connection.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewConnectionCmd - Connection Config 관리 기능을 수행하는 Cobra Command 생성\nfunc NewConnectionCmd() *cobra.Command {\n\n\tconnectionCmd := &cobra.Command{\n\t\tUse:   \"connection\",\n\t\tShort: \"This is a manageable command for connection config\",\n\t\tLong:  \"This is a manageable command for connection config\",\n\t}\n\n\t//  Adds the commands for application.\n\tconnectionCmd.AddCommand(NewConnectionCreateCmd())\n\tconnectionCmd.AddCommand(NewConnectionListCmd())\n\tconnectionCmd.AddCommand(NewConnectionGetCmd())\n\tconnectionCmd.AddCommand(NewConnectionDeleteCmd())\n\n\treturn connectionCmd\n}\n\n// NewConnectionCreateCmd - Connection Config 생성 기능을 수행하는 Cobra Command 생성\nfunc NewConnectionCreateCmd() *cobra.Command {\n\n\tcreateCmd := &cobra.Command{\n\t\tUse:   \"create\",\n\t\tShort: \"This is create command for connection config\",\n\t\tLong:  \"This is create command for connection config\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tcreateCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\tcreateCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn createCmd\n}\n\n// NewConnectionListCmd - Connection Config 목록 기능을 수행하는 Cobra Command 생성\nfunc NewConnectionListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for connection config\",\n\t\tLong:  \"This is list command for connection config\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\treturn listCmd\n}\n\n// NewConnectionGetCmd - Connection Config 조회 기능을 수행하는 Cobra Command 생성\nfunc NewConnectionGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for connection config\",\n\t\tLong:  \"This is get command for connection config\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif configName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", configName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&configName, \"name\", \"n\", \"\", \"config name\")\n\n\treturn getCmd\n}\n\n// NewConnectionDeleteCmd - Connection Config 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewConnectionDeleteCmd() *cobra.Command {\n\n\tdeleteCmd := &cobra.Command{\n\t\tUse:   \"delete\",\n\t\tShort: \"This is delete command for connection config\",\n\t\tLong:  \"This is delete command for connection config\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif configName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", configName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCmd.PersistentFlags().StringVarP(&configName, \"name\", \"n\", \"\", \"config name\")\n\n\treturn deleteCmd\n}\ninterface/cli/spider/cmd/driver.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewDriverCmd - Cloud Driver 관리 기능을 수행하는 Cobra Command 생성\nfunc NewDriverCmd() *cobra.Command {\n\n\tdriverCmd := &cobra.Command{\n\t\tUse:   \"driver\",\n\t\tShort: \"This is a manageable command for cloud driver\",\n\t\tLong:  \"This is a manageable command for cloud driver\",\n\t}\n\n\t//  Adds the commands for application.\n\tdriverCmd.AddCommand(NewDriverCreateCmd())\n\tdriverCmd.AddCommand(NewDriverListCmd())\n\tdriverCmd.AddCommand(NewDriverGetCmd())\n\tdriverCmd.AddCommand(NewDriverDeleteCmd())\n\n\treturn driverCmd\n}\n\n// NewDriverCreateCmd - Cloud Driver 생성 기능을 수행하는 Cobra Command 생성\nfunc NewDriverCreateCmd() *cobra.Command {\n\n\tcreateCmd := &cobra.Command{\n\t\tUse:   \"create\",\n\t\tShort: \"This is create command for cloud driver\",\n\t\tLong:  \"This is create command for cloud driver\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tcreateCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\tcreateCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn createCmd\n}\n\n// NewDriverListCmd - Cloud Driver 목록 기능을 수행하는 Cobra Command 생성\nfunc NewDriverListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for cloud driver\",\n\t\tLong:  \"This is list command for cloud driver\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\treturn listCmd\n}\n\n// NewDriverGetCmd - Cloud Driver 조회 기능을 수행하는 Cobra Command 생성\nfunc NewDriverGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for cloud driver\",\n\t\tLong:  \"This is get command for cloud driver\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif driverName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", driverName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&driverName, \"name\", \"n\", \"\", \"driver name\")\n\n\treturn getCmd\n}\n\n// NewDriverDeleteCmd - Cloud Driver 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewDriverDeleteCmd() *cobra.Command {\n\n\tdeleteCmd := &cobra.Command{\n\t\tUse:   \"delete\",\n\t\tShort: \"This is delete command for cloud driver\",\n\t\tLong:  \"This is delete command for cloud driver\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif driverName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", driverName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCmd.PersistentFlags().StringVarP(&driverName, \"name\", \"n\", \"\", \"driver name\")\n\n\treturn deleteCmd\n}\ninterface/cli/spider/cmd/gclient.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\t\"github.com/cloud-barista/poc-cicd-spider/interface/api\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\nfunc readInDataFromFile() {\n\tlogger := logger.NewLogger()\n\tif inData == \"\" {\n\t\tif inFile != \"\" {\n\t\t\tdat, err := ioutil.ReadFile(inFile)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Error(\"failed to read file : \", inFile)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tinData = string(dat)\n\t\t}\n\t}\n}\n\n// ===== [ Public Functions ] =====\n\n// SetupAndRun - SPIDER GRPC CLI 구동\nfunc SetupAndRun(cmd *cobra.Command, args []string) {\n\tlogger := logger.NewLogger()\n\n\tvar (\n\t\tresult string\n\t\terr    error\n\n\t\tcim *api.CIMApi = nil\n\t\tccm *api.CCMApi = nil\n\t)\n\n\t// panic 처리\n\tdefer func() {\n\t\tif r := recover(); r != nil {\n\t\t\tlogger.Error(\"spider is stopped : \", r)\n\t\t}\n\t}()\n\n\tif cmd.Parent().Name() == \"os\" || cmd.Parent().Name() == \"driver\" || cmd.Parent().Name() == \"credential\" ||\n\t\tcmd.Parent().Name() == \"region\" || cmd.Parent().Name() == \"connection\" {\n\n\t\t// CIM API 설정\n\t\tcim = api.NewCloudInfoManager()\n\t\terr = cim.SetConfigPath(configFile)\n\t\tif err != nil {\n\t\t\tlogger.Error(\"failed to set config : \", err)\n\t\t\treturn\n\t\t}\n\t\terr = cim.Open()\n\t\tif err != nil {\n\t\t\tlogger.Error(\"cim api open failed : \", err)\n\t\t\treturn\n\t\t}\n\t\tdefer cim.Close()\n\n\t} else {\n\n\t\t// CCM API 설정\n\t\tccm = api.NewCloudResourceHandler()\n\t\terr = ccm.SetConfigPath(configFile)\n\t\tif err != nil {\n\t\t\tlogger.Error(\"failed to set config : \", err)\n\t\t\treturn\n\t\t}\n\t\terr = ccm.Open()\n\t\tif err != nil {\n\t\t\tlogger.Error(\"cim api open failed : \", err)\n\t\t\treturn\n\t\t}\n\t\tdefer ccm.Close()\n\n\t}\n\n\t// 입력 파라미터 처리\n\tif outType != \"json\" && outType != \"yaml\" {\n\t\tlogger.Error(\"failed to validate --output parameter : \", outType)\n\t\treturn\n\t}\n\tif inType != \"json\" && inType != \"yaml\" {\n\t\tlogger.Error(\"failed to validate --input parameter : \", inType)\n\t\treturn\n\t}\n\n\tif cmd.Parent().Name() == \"os\" || cmd.Parent().Name() == \"driver\" || cmd.Parent().Name() == \"credential\" ||\n\t\tcmd.Parent().Name() == \"region\" || cmd.Parent().Name() == \"connection\" {\n\t\tcim.SetInType(inType)\n\t\tcim.SetOutType(outType)\n\t} else {\n\t\tccm.SetInType(inType)\n\t\tccm.SetOutType(outType)\n\t}\n\n\tlogger.Debug(\"--input parameter value : \", inType)\n\tlogger.Debug(\"--output parameter value : \", outType)\n\n\tresult = \"\"\n\terr = nil\n\n\tswitch cmd.Parent().Name() {\n\tcase \"os\":\n\t\tswitch cmd.Name() {\n\t\tcase \"list\":\n\t\t\tresult, err = cim.ListCloudOS()\n\t\t}\n\tcase \"driver\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = cim.CreateCloudDriver(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = cim.ListCloudDriver()\n\t\tcase \"get\":\n\t\t\tresult, err = cim.GetCloudDriverByParam(driverName)\n\t\tcase \"delete\":\n\t\t\tresult, err = cim.DeleteCloudDriverByParam(driverName)\n\t\t}\n\tcase \"credential\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = cim.CreateCredential(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = cim.ListCredential()\n\t\tcase \"get\":\n\t\t\tresult, err = cim.GetCredentialByParam(credentialName)\n\t\tcase \"delete\":\n\t\t\tresult, err = cim.DeleteCredentialByParam(credentialName)\n\t\t}\n\tcase \"region\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = cim.CreateRegion(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = cim.ListRegion()\n\t\tcase \"get\":\n\t\t\tresult, err = cim.GetRegionByParam(regionName)\n\t\tcase \"delete\":\n\t\t\tresult, err = cim.DeleteRegionByParam(regionName)\n\t\t}\n\tcase \"connection\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = cim.CreateConnectionConfig(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = cim.ListConnectionConfig()\n\t\tcase \"get\":\n\t\t\tresult, err = cim.GetConnectionConfigByParam(configName)\n\t\tcase \"delete\":\n\t\t\tresult, err = cim.DeleteConnectionConfigByParam(configName)\n\t\t}\n\tcase \"image\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = ccm.CreateImage(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = ccm.ListImageByParam(connectionName)\n\t\tcase \"get\":\n\t\t\tresult, err = ccm.GetImageByParam(connectionName, imageName)\n\t\tcase \"delete\":\n\t\t\tresult, err = ccm.DeleteImageByParam(connectionName, imageName)\n\t\t}\n\tcase \"vmspec\":\n\t\tswitch cmd.Name() {\n\t\tcase \"list\":\n\t\t\tresult, err = ccm.ListVMSpecByParam(connectionName)\n\t\tcase \"get\":\n\t\t\tresult, err = ccm.GetVMSpecByParam(connectionName, specName)\n\t\tcase \"listorg\":\n\t\t\tresult, err = ccm.ListOrgVMSpecByParam(connectionName)\n\t\tcase \"getorg\":\n\t\t\tresult, err = ccm.GetOrgVMSpecByParam(connectionName, specName)\n\t\t}\n\tcase \"vpc\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = ccm.CreateVPC(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = ccm.ListVPCByParam(connectionName)\n\t\tcase \"get\":\n\t\t\tresult, err = ccm.GetVPCByParam(connectionName, vpcName)\n\t\tcase \"delete\":\n\t\t\tresult, err = ccm.DeleteVPCByParam(connectionName, vpcName, force)\n\t\tcase \"listall\":\n\t\t\tresult, err = ccm.ListAllVPCByParam(connectionName)\n\t\tcase \"deletecsp\":\n\t\t\tresult, err = ccm.DeleteCSPVPCByParam(connectionName, cspID)\n\t\tcase \"add-subnet\":\n\t\t\tresult, err = ccm.AddSubnet(inData)\n\t\tcase \"remove-subnet\":\n\t\t\tresult, err = ccm.RemoveSubnetByParam(connectionName, vpcName, subnetName, force)\n\t\tcase \"removecsp-subnet\":\n\t\t\tresult, err = ccm.RemoveCSPSubnetByParam(connectionName, vpcName, cspID)\n\t\t}\n\tcase \"security\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = ccm.CreateSecurity(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = ccm.ListSecurityByParam(connectionName)\n\t\tcase \"get\":\n\t\t\tresult, err = ccm.GetSecurityByParam(connectionName, securityName)\n\t\tcase \"delete\":\n\t\t\tresult, err = ccm.DeleteSecurityByParam(connectionName, securityName, force)\n\t\tcase \"listall\":\n\t\t\tresult, err = ccm.ListAllSecurityByParam(connectionName)\n\t\tcase \"deletecsp\":\n\t\t\tresult, err = ccm.DeleteCSPSecurityByParam(connectionName, cspID)\n\t\t}\n\tcase \"keypair\":\n\t\tswitch cmd.Name() {\n\t\tcase \"create\":\n\t\t\tresult, err = ccm.CreateKey(inData)\n\t\tcase \"list\":\n\t\t\tresult, err = ccm.ListKeyByParam(connectionName)\n\t\tcase \"get\":\n\t\t\tresult, err = ccm.GetKeyByParam(connectionName, keypairName)\n\t\tcase \"delete\":\n\t\t\tresult, err = ccm.DeleteKeyByParam(connectionName, keypairName, force)\n\t\tcase \"listall\":\n\t\t\tresult, err = ccm.ListAllKeyByParam(connectionName)\n\t\tcase \"deletecsp\":\n\t\t\tresult, err = ccm.DeleteCSPKeyByParam(connectionName, cspID)\n\t\t}\n\tcase \"vm\":\n\t\tswitch cmd.Name() {\n\t\tcase \"start\":\n\t\t\tresult, err = ccm.StartVM(inData)\n\t\tcase \"control\":\n\t\t\tresult, err = ccm.ControlVMByParam(connectionName, vmName, action)\n\t\tcase \"liststatus\":\n\t\t\tresult, err = ccm.ListVMStatusByParam(connectionName)\n\t\tcase \"getstatus\":\n\t\t\tresult, err = ccm.GetVMStatusByParam(connectionName, vmName)\n\t\tcase \"list\":\n\t\t\tresult, err = ccm.ListVMByParam(connectionName)\n\t\tcase \"get\":\n\t\t\tresult, err = ccm.GetVMByParam(connectionName, vmName)\n\t\tcase \"terminate\":\n\t\t\tresult, err = ccm.TerminateVMByParam(connectionName, vmName, force)\n\t\tcase \"listall\":\n\t\t\tresult, err = ccm.ListAllVMByParam(connectionName)\n\t\tcase \"terminatecsp\":\n\t\t\tresult, err = ccm.TerminateCSPVMByParam(connectionName, cspID)\n\t\t}\n\tcase \"ssh\":\n\t\tswitch cmd.Name() {\n\t\tcase \"run\":\n\t\t\tresult, err = ccm.SSHRun(inData)\n\t\t}\n\t}\n\n\tif err != nil {\n\t\tif outType == \"yaml\" {\n\t\t\tfmt.Fprintf(cmd.OutOrStdout(), \"message: %v\\n\", err)\n\t\t} else {\n\t\t\tfmt.Fprintf(cmd.OutOrStdout(), \"{\\\"message\\\": \\\"%v\\\"}\\n\", err)\n\t\t}\n\t} else {\n\t\tfmt.Fprintf(cmd.OutOrStdout(), \"%s\\n\", result)\n\t}\n}\ninterface/cli/spider/cmd/image.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewImageCmd - Image 관리 기능을 수행하는 Cobra Command 생성\nfunc NewImageCmd() *cobra.Command {\n\n\timageCmd := &cobra.Command{\n\t\tUse:   \"image\",\n\t\tShort: \"This is a manageable command for image\",\n\t\tLong:  \"This is a manageable command for image\",\n\t}\n\n\t//  Adds the commands for application.\n\timageCmd.AddCommand(NewImageCreateCmd())\n\timageCmd.AddCommand(NewImageListCmd())\n\timageCmd.AddCommand(NewImageGetCmd())\n\timageCmd.AddCommand(NewImageDeleteCmd())\n\n\treturn imageCmd\n}\n\n// NewImageCreateCmd - Image 생성 기능을 수행하는 Cobra Command 생성\nfunc NewImageCreateCmd() *cobra.Command {\n\n\tcreateCmd := &cobra.Command{\n\t\tUse:   \"create\",\n\t\tShort: \"This is create command for image\",\n\t\tLong:  \"This is create command for image\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tcreateCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\tcreateCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn createCmd\n}\n\n// NewImageListCmd - Image 목록 기능을 수행하는 Cobra Command 생성\nfunc NewImageListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for image\",\n\t\tLong:  \"This is list command for image\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listCmd\n}\n\n// NewImageGetCmd - Image 조회 기능을 수행하는 Cobra Command 생성\nfunc NewImageGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for image\",\n\t\tLong:  \"This is get command for image\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif imageName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", imageName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tgetCmd.PersistentFlags().StringVarP(&imageName, \"name\", \"n\", \"\", \"image name\")\n\n\treturn getCmd\n}\n\n// NewImageDeleteCmd - Image 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewImageDeleteCmd() *cobra.Command {\n\n\tdeleteCmd := &cobra.Command{\n\t\tUse:   \"delete\",\n\t\tShort: \"This is delete command for image\",\n\t\tLong:  \"This is delete command for image\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif imageName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", imageName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tdeleteCmd.PersistentFlags().StringVarP(&imageName, \"name\", \"n\", \"\", \"image name\")\n\n\treturn deleteCmd\n}\ninterface/cli/spider/cmd/keypair.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewKeyPairCmd - KeyPair 관리 기능을 수행하는 Cobra Command 생성\nfunc NewKeyPairCmd() *cobra.Command {\n\n\tkeyPairCmd := &cobra.Command{\n\t\tUse:   \"keypair\",\n\t\tShort: \"This is a manageable command for keypair\",\n\t\tLong:  \"This is a manageable command for keypair\",\n\t}\n\n\t//  Adds the commands for application.\n\tkeyPairCmd.AddCommand(NewKeyPairCreateCmd())\n\tkeyPairCmd.AddCommand(NewKeyPairListCmd())\n\tkeyPairCmd.AddCommand(NewKeyPairGetCmd())\n\tkeyPairCmd.AddCommand(NewKeyPairDeleteCmd())\n\tkeyPairCmd.AddCommand(NewKeyPairListAllCmd())\n\tkeyPairCmd.AddCommand(NewKeyPairDeleteCSPCmd())\n\n\treturn keyPairCmd\n}\n\n// NewKeyPairCreateCmd - KeyPair 생성 기능을 수행하는 Cobra Command 생성\nfunc NewKeyPairCreateCmd() *cobra.Command {\n\n\tcreateCmd := &cobra.Command{\n\t\tUse:   \"create\",\n\t\tShort: \"This is create command for keypair\",\n\t\tLong:  \"This is create command for keypair\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tcreateCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\tcreateCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn createCmd\n}\n\n// NewKeyPairListCmd - KeyPair 목록 기능을 수행하는 Cobra Command 생성\nfunc NewKeyPairListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for keypair\",\n\t\tLong:  \"This is list command for keypair\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listCmd\n}\n\n// NewKeyPairGetCmd - KeyPair 조회 기능을 수행하는 Cobra Command 생성\nfunc NewKeyPairGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for keypair\",\n\t\tLong:  \"This is get command for keypair\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif keypairName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", keypairName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tgetCmd.PersistentFlags().StringVarP(&keypairName, \"name\", \"n\", \"\", \"keypair name\")\n\n\treturn getCmd\n}\n\n// NewKeyPairDeleteCmd - KeyPair 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewKeyPairDeleteCmd() *cobra.Command {\n\n\tdeleteCmd := &cobra.Command{\n\t\tUse:   \"delete\",\n\t\tShort: \"This is delete command for keypair\",\n\t\tLong:  \"This is delete command for keypair\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif keypairName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", keypairName)\n\t\t\tlogger.Debug(\"--force parameter value : \", force)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tdeleteCmd.PersistentFlags().StringVarP(&keypairName, \"name\", \"n\", \"\", \"keypair name\")\n\tdeleteCmd.PersistentFlags().StringVarP(&force, \"force\", \"\", \"false\", \"force flg (true/false)\")\n\n\treturn deleteCmd\n}\n\n// NewKeyPairListAllCmd - 관리 KeyPair 목록 기능을 수행하는 Cobra Command 생성\nfunc NewKeyPairListAllCmd() *cobra.Command {\n\n\tlistAllCmd := &cobra.Command{\n\t\tUse:   \"listall\",\n\t\tShort: \"This is list all command for keypair\",\n\t\tLong:  \"This is list all command for keypair\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistAllCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listAllCmd\n}\n\n// NewKeyPairDeleteCSPCmd - 관리 KeyPair 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewKeyPairDeleteCSPCmd() *cobra.Command {\n\n\tdeleteCSPCmd := &cobra.Command{\n\t\tUse:   \"deletecsp\",\n\t\tShort: \"This is delete csp command for keypair\",\n\t\tLong:  \"This is delete csp command for keypair\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif cspID == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --id parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--id parameter value : \", cspID)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCSPCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tdeleteCSPCmd.PersistentFlags().StringVarP(&cspID, \"id\", \"\", \"\", \"csp id\")\n\n\treturn deleteCSPCmd\n}\ninterface/cli/spider/cmd/region.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewRegionCmd - Region 관리 기능을 수행하는 Cobra Command 생성\nfunc NewRegionCmd() *cobra.Command {\n\n\tregionCmd := &cobra.Command{\n\t\tUse:   \"region\",\n\t\tShort: \"This is a manageable command for region\",\n\t\tLong:  \"This is a manageable command for region\",\n\t}\n\n\t//  Adds the commands for application.\n\tregionCmd.AddCommand(NewRegionCreateCmd())\n\tregionCmd.AddCommand(NewRegionListCmd())\n\tregionCmd.AddCommand(NewRegionGetCmd())\n\tregionCmd.AddCommand(NewRegionDeleteCmd())\n\n\treturn regionCmd\n}\n\n// NewRegionCreateCmd - Region 생성 기능을 수행하는 Cobra Command 생성\nfunc NewRegionCreateCmd() *cobra.Command {\n\n\tcreateCmd := &cobra.Command{\n\t\tUse:   \"create\",\n\t\tShort: \"This is create command for region\",\n\t\tLong:  \"This is create command for region\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tcreateCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\tcreateCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn createCmd\n}\n\n// NewRegionListCmd - Region 목록 기능을 수행하는 Cobra Command 생성\nfunc NewRegionListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for region\",\n\t\tLong:  \"This is list command for region\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\treturn listCmd\n}\n\n// NewRegionGetCmd - Region 조회 기능을 수행하는 Cobra Command 생성\nfunc NewRegionGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for region\",\n\t\tLong:  \"This is get command for region\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif regionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", regionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&regionName, \"name\", \"n\", \"\", \"region name\")\n\n\treturn getCmd\n}\n\n// NewRegionDeleteCmd - Region 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewRegionDeleteCmd() *cobra.Command {\n\n\tdeleteCmd := &cobra.Command{\n\t\tUse:   \"delete\",\n\t\tShort: \"This is delete command for region\",\n\t\tLong:  \"This is delete command for region\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif regionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--name parameter value : \", regionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCmd.PersistentFlags().StringVarP(&regionName, \"name\", \"n\", \"\", \"region name\")\n\n\treturn deleteCmd\n}\ninterface/cli/spider/cmd/root.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\n// Package cmd - 어플리케이션 실행을 위한 Cobra 기반의 CLI Commands 기능 제공\npackage cmd\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config\"\n\t\"github.com/spf13/cobra\"\n)\n\n// ===== [ Constants and Variables ] =====\n\nvar (\n\tVersion   string = \"latest\"\n\tCommitSHA string = \"development build\"\n\tTime      string = \"\"\n\tUser      string = \"\"\n)\n\nvar (\n\tconfigFile string\n\tinData     string\n\tinFile     string\n\tinType     string\n\toutType    string\n\n\tdriverName     string\n\tcredentialName string\n\tregionName     string\n\tconfigName     string\n\n\tconnectionName string\n\timageName      string\n\tspecName       string\n\tvpcName        string\n\tsubnetName     string\n\tsecurityName   string\n\tkeypairName    string\n\tvmName         string\n\taction         string\n\tcspID          string\n\tforce          string\n\n\tparser config.Parser\n)\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewRootCmd - 어플리케이션 진입점으로 사용할 Root Cobra Command 생성\nfunc NewRootCmd() *cobra.Command {\n\n\trootCmd := &cobra.Command{\n\t\tUse:     \"spctl\",\n\t\tVersion: fmt.Sprintf(\"%s, build %s\", Version, CommitSHA),\n\t\tShort:   \"spctl is an cb-spider grpc cli tool\",\n\t\tLong:    \"This is a lightweight cb-spider grpc cli tool for Cloud-Barista Spider\",\n\t}\n\n\t// 옵션 플래그 설정\n\trootCmd.PersistentFlags().StringVarP(&configFile, \"config\", \"c\", \"./grpc_conf.yaml\", \"config file\")\n\trootCmd.PersistentFlags().StringVarP(&inType, \"input\", \"i\", \"yaml\", \"input format (json/yaml)\")\n\trootCmd.PersistentFlags().StringVarP(&outType, \"output\", \"o\", \"yaml\", \"output format (json/yaml)\")\n\n\t// Viper 를 사용하는 설정 파서 생성\n\tparser = config.MakeParser()\n\n\t//  Adds the commands for application.\n\trootCmd.AddCommand(NewVersionCmd())\n\n\trootCmd.AddCommand(NewOsCmd())\n\trootCmd.AddCommand(NewDriverCmd())\n\trootCmd.AddCommand(NewCredentialCmd())\n\trootCmd.AddCommand(NewRegionCmd())\n\trootCmd.AddCommand(NewConnectionCmd())\n\n\trootCmd.AddCommand(NewImageCmd())\n\trootCmd.AddCommand(NewVMSpecCmd())\n\trootCmd.AddCommand(NewVPCCmd())\n\trootCmd.AddCommand(NewSecurityCmd())\n\trootCmd.AddCommand(NewKeyPairCmd())\n\trootCmd.AddCommand(NewVMCmd())\n\n\trootCmd.AddCommand(NewSSHCmd())\n\n\treturn rootCmd\n}\ninterface/cli/spider/cmd/security.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewSecurityCmd - Security 관리 기능을 수행하는 Cobra Command 생성\nfunc NewSecurityCmd() *cobra.Command {\n\n\tsecurityCmd := &cobra.Command{\n\t\tUse:   \"security\",\n\t\tShort: \"This is a manageable command for security\",\n\t\tLong:  \"This is a manageable command for security\",\n\t}\n\n\t//  Adds the commands for application.\n\tsecurityCmd.AddCommand(NewSecurityCreateCmd())\n\tsecurityCmd.AddCommand(NewSecurityListCmd())\n\tsecurityCmd.AddCommand(NewSecurityGetCmd())\n\tsecurityCmd.AddCommand(NewSecurityDeleteCmd())\n\tsecurityCmd.AddCommand(NewSecurityListAllCmd())\n\tsecurityCmd.AddCommand(NewSecurityDeleteCSPCmd())\n\n\treturn securityCmd\n}\n\n// NewSecurityCreateCmd - Security 생성 기능을 수행하는 Cobra Command 생성\nfunc NewSecurityCreateCmd() *cobra.Command {\n\n\tcreateCmd := &cobra.Command{\n\t\tUse:   \"create\",\n\t\tShort: \"This is create command for security\",\n\t\tLong:  \"This is create command for security\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tcreateCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\tcreateCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn createCmd\n}\n\n// NewSecurityListCmd - Security 목록 기능을 수행하는 Cobra Command 생성\nfunc NewSecurityListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for security\",\n\t\tLong:  \"This is list command for security\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listCmd\n}\n\n// NewSecurityGetCmd - Security 조회 기능을 수행하는 Cobra Command 생성\nfunc NewSecurityGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for security\",\n\t\tLong:  \"This is get command for security\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif securityName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", securityName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tgetCmd.PersistentFlags().StringVarP(&securityName, \"name\", \"n\", \"\", \"security name\")\n\n\treturn getCmd\n}\n\n// NewSecurityDeleteCmd - Security 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewSecurityDeleteCmd() *cobra.Command {\n\n\tdeleteCmd := &cobra.Command{\n\t\tUse:   \"delete\",\n\t\tShort: \"This is delete command for security\",\n\t\tLong:  \"This is delete command for security\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif securityName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", securityName)\n\t\t\tlogger.Debug(\"--force parameter value : \", force)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tdeleteCmd.PersistentFlags().StringVarP(&securityName, \"name\", \"n\", \"\", \"security name\")\n\tdeleteCmd.PersistentFlags().StringVarP(&force, \"force\", \"\", \"false\", \"force flg (true/false)\")\n\n\treturn deleteCmd\n}\n\n// NewSecurityListAllCmd - 관리 Security 목록 기능을 수행하는 Cobra Command 생성\nfunc NewSecurityListAllCmd() *cobra.Command {\n\n\tlistAllCmd := &cobra.Command{\n\t\tUse:   \"listall\",\n\t\tShort: \"This is list all command for security\",\n\t\tLong:  \"This is list all command for security\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistAllCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listAllCmd\n}\n\n// NewSecurityDeleteCSPCmd - 관리 Security 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewSecurityDeleteCSPCmd() *cobra.Command {\n\n\tdeleteCSPCmd := &cobra.Command{\n\t\tUse:   \"deletecsp\",\n\t\tShort: \"This is delete csp command for security\",\n\t\tLong:  \"This is delete csp command for security\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif cspID == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --id parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--id parameter value : \", cspID)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCSPCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tdeleteCSPCmd.PersistentFlags().StringVarP(&cspID, \"id\", \"\", \"\", \"csp id\")\n\n\treturn deleteCSPCmd\n}\ninterface/cli/spider/cmd/ssh.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\t\"github.com/spf13/cobra\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewSSHCmd - SSH 관리 기능을 수행하는 Cobra Command 생성\nfunc NewSSHCmd() *cobra.Command {\n\n\tsshCmd := &cobra.Command{\n\t\tUse:   \"ssh\",\n\t\tShort: \"This is a manageable command for ssh\",\n\t\tLong:  \"This is a manageable command for ssh\",\n\t}\n\n\t//  Adds the commands for application.\n\tsshCmd.AddCommand(NewSSHRunCmd())\n\n\treturn sshCmd\n}\n\n// NewSSHRunCmd - SSH 실행 기능을 수행하는 Cobra Command 생성\nfunc NewSSHRunCmd() *cobra.Command {\n\n\trunCmd := &cobra.Command{\n\t\tUse:   \"run\",\n\t\tShort: \"This is run command for ssh\",\n\t\tLong:  \"This is run command for ssh\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\trunCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\trunCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn runCmd\n}\ninterface/cli/spider/cmd/vm.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewVMCmd - VM 관리 기능을 수행하는 Cobra Command 생성\nfunc NewVMCmd() *cobra.Command {\n\n\tvmCmd := &cobra.Command{\n\t\tUse:   \"vm\",\n\t\tShort: \"This is a manageable command for vm\",\n\t\tLong:  \"This is a manageable command for vm\",\n\t}\n\n\t//  Adds the commands for application.\n\tvmCmd.AddCommand(NewVMStartCmd())\n\t//vmCmd.AddCommand(NewVMControlCmd())\n\tvmCmd.AddCommand(NewVMListStatusCmd())\n\tvmCmd.AddCommand(NewVMGetStatusCmd())\n\tvmCmd.AddCommand(NewVMListCmd())\n\tvmCmd.AddCommand(NewVMGetCmd())\n\tvmCmd.AddCommand(NewVMTerminateCmd())\n\tvmCmd.AddCommand(NewVMListAllCmd())\n\tvmCmd.AddCommand(NewVMTerminateCSPCmd())\n\n\treturn vmCmd\n}\n\n// NewVMStartCmd - VM 시작 기능을 수행하는 Cobra Command 생성\nfunc NewVMStartCmd() *cobra.Command {\n\n\tstartCmd := &cobra.Command{\n\t\tUse:   \"start\",\n\t\tShort: \"This is start command for vm\",\n\t\tLong:  \"This is start command for vm\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tstartCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\tstartCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn startCmd\n}\n\n// NewVMControlCmd - VM 제어 기능을 수행하는 Cobra Command 생성\nfunc NewVMControlCmd() *cobra.Command {\n\n\tcontrolCmd := &cobra.Command{\n\t\tUse:   \"control\",\n\t\tShort: \"This is control command for vm\",\n\t\tLong:  \"This is control command for vm\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif vmName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif action == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --action parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", vmName)\n\t\t\tlogger.Debug(\"--action parameter value : \", action)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tcontrolCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tcontrolCmd.PersistentFlags().StringVarP(&vmName, \"name\", \"n\", \"\", \"vm name\")\n\tcontrolCmd.PersistentFlags().StringVarP(&action, \"action\", \"a\", \"\", \"action name\")\n\n\treturn controlCmd\n}\n\n// NewVMListStatusCmd - VM 상태 목록 기능을 수행하는 Cobra Command 생성\nfunc NewVMListStatusCmd() *cobra.Command {\n\n\tlistStatusCmd := &cobra.Command{\n\t\tUse:   \"liststatus\",\n\t\tShort: \"This is list status command for vm\",\n\t\tLong:  \"This is list status command for vm\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistStatusCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listStatusCmd\n}\n\n// NewVMGetStatusCmd - VM 상태 조회 기능을 수행하는 Cobra Command 생성\nfunc NewVMGetStatusCmd() *cobra.Command {\n\n\tgetStatusCmd := &cobra.Command{\n\t\tUse:   \"getstatus\",\n\t\tShort: \"This is get status command for vm\",\n\t\tLong:  \"This is get status command for vm\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif vmName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", vmName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetStatusCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tgetStatusCmd.PersistentFlags().StringVarP(&vmName, \"name\", \"n\", \"\", \"vm name\")\n\n\treturn getStatusCmd\n}\n\n// NewVMListCmd - VM 목록 기능을 수행하는 Cobra Command 생성\nfunc NewVMListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for vm\",\n\t\tLong:  \"This is list command for vm\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listCmd\n}\n\n// NewVMGetCmd - VM 조회 기능을 수행하는 Cobra Command 생성\nfunc NewVMGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for vm\",\n\t\tLong:  \"This is get command for vm\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif vmName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", vmName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tgetCmd.PersistentFlags().StringVarP(&vmName, \"name\", \"n\", \"\", \"vm name\")\n\n\treturn getCmd\n}\n\n// NewVMTerminateCmd - VM 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewVMTerminateCmd() *cobra.Command {\n\n\tterminateCmd := &cobra.Command{\n\t\tUse:   \"terminate\",\n\t\tShort: \"This is terminate command for vm\",\n\t\tLong:  \"This is terminate command for vm\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif vmName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", vmName)\n\t\t\tlogger.Debug(\"--force parameter value : \", force)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tterminateCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tterminateCmd.PersistentFlags().StringVarP(&vmName, \"name\", \"n\", \"\", \"vm name\")\n\tterminateCmd.PersistentFlags().StringVarP(&force, \"force\", \"\", \"false\", \"force flg (true/false)\")\n\n\treturn terminateCmd\n}\n\n// NewVMListAllCmd - 관리 VM 목록 기능을 수행하는 Cobra Command 생성\nfunc NewVMListAllCmd() *cobra.Command {\n\n\tlistAllCmd := &cobra.Command{\n\t\tUse:   \"listall\",\n\t\tShort: \"This is list all command for vm\",\n\t\tLong:  \"This is list all command for vm\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistAllCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listAllCmd\n}\n\n// NewVMTerminateCSPCmd - 관리 VM 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewVMTerminateCSPCmd() *cobra.Command {\n\n\tterminateCSPCmd := &cobra.Command{\n\t\tUse:   \"terminatecsp\",\n\t\tShort: \"This is terminate csp command for vm\",\n\t\tLong:  \"This is terminate csp command for vm\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif cspID == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --id parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--id parameter value : \", cspID)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tterminateCSPCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tterminateCSPCmd.PersistentFlags().StringVarP(&cspID, \"id\", \"\", \"\", \"csp id\")\n\n\treturn terminateCSPCmd\n}\ninterface/cli/spider/cmd/vmspec.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewVMSpecCmd - VM Spec 관리 기능을 수행하는 Cobra Command 생성\nfunc NewVMSpecCmd() *cobra.Command {\n\n\tvmSpecCmd := &cobra.Command{\n\t\tUse:   \"vmspec\",\n\t\tShort: \"This is a manageable command for vm spec\",\n\t\tLong:  \"This is a manageable command for vm spec\",\n\t}\n\n\t//  Adds the commands for application.\n\tvmSpecCmd.AddCommand(NewVMSpecListCmd())\n\tvmSpecCmd.AddCommand(NewVMSpecGetCmd())\n\tvmSpecCmd.AddCommand(NewVMSpecListOrgCmd())\n\tvmSpecCmd.AddCommand(NewVMSpecGetOrgCmd())\n\n\treturn vmSpecCmd\n}\n\n// NewVMSpecListCmd - VM Spec 목록 기능을 수행하는 Cobra Command 생성\nfunc NewVMSpecListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for vm spec\",\n\t\tLong:  \"This is list command for vm spec\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listCmd\n}\n\n// NewVMSpecGetCmd - VM Spec 조회 기능을 수행하는 Cobra Command 생성\nfunc NewVMSpecGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for vm spec\",\n\t\tLong:  \"This is get command for vm spec\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif specName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", specName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tgetCmd.PersistentFlags().StringVarP(&specName, \"name\", \"n\", \"\", \"spec name\")\n\n\treturn getCmd\n}\n\n// NewVMSpecListOrgCmd - 클라우드의 원래 VM Spec 목록 기능을 수행하는 Cobra Command 생성\nfunc NewVMSpecListOrgCmd() *cobra.Command {\n\n\tlistOrgCmd := &cobra.Command{\n\t\tUse:   \"listorg\",\n\t\tShort: \"This is original list command for vm spec\",\n\t\tLong:  \"This is original list command for vm spec\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistOrgCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listOrgCmd\n}\n\n// NewVMSpecGetOrgCmd - 클라우드의 원래 VM Spec 조회 기능을 수행하는 Cobra Command 생성\nfunc NewVMSpecGetOrgCmd() *cobra.Command {\n\n\tgetOrgCmd := &cobra.Command{\n\t\tUse:   \"getorg\",\n\t\tShort: \"This is original get command for vm spec\",\n\t\tLong:  \"This is original get command for vm spec\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif specName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", specName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetOrgCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tgetOrgCmd.PersistentFlags().StringVarP(&specName, \"name\", \"n\", \"\", \"spec name\")\n\n\treturn getOrgCmd\n}\ninterface/cli/spider/cmd/vpc.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewVPCCmd - VPC 관리 기능을 수행하는 Cobra Command 생성\nfunc NewVPCCmd() *cobra.Command {\n\n\tvpcCmd := &cobra.Command{\n\t\tUse:   \"vpc\",\n\t\tShort: \"This is a manageable command for vpc\",\n\t\tLong:  \"This is a manageable command for vpc\",\n\t}\n\n\t//  Adds the commands for application.\n\tvpcCmd.AddCommand(NewVPCCreateCmd())\n\tvpcCmd.AddCommand(NewVPCListCmd())\n\tvpcCmd.AddCommand(NewVPCGetCmd())\n\tvpcCmd.AddCommand(NewVPCDeleteCmd())\n\tvpcCmd.AddCommand(NewVPCListAllCmd())\n\tvpcCmd.AddCommand(NewVPCDeleteCSPCmd())\n\tvpcCmd.AddCommand(NewSubnetAddCmd())\n\tvpcCmd.AddCommand(NewSubnetRemoveCmd())\n\tvpcCmd.AddCommand(NewSubnetRemoveCSPCmd())\n\n\treturn vpcCmd\n}\n\n// NewVPCCreateCmd - VPC 생성 기능을 수행하는 Cobra Command 생성\nfunc NewVPCCreateCmd() *cobra.Command {\n\n\tcreateCmd := &cobra.Command{\n\t\tUse:   \"create\",\n\t\tShort: \"This is create command for vpc\",\n\t\tLong:  \"This is create command for vpc\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tcreateCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\tcreateCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn createCmd\n}\n\n// NewVPCListCmd - VPC 목록 기능을 수행하는 Cobra Command 생성\nfunc NewVPCListCmd() *cobra.Command {\n\n\tlistCmd := &cobra.Command{\n\t\tUse:   \"list\",\n\t\tShort: \"This is list command for vpc\",\n\t\tLong:  \"This is list command for vpc\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listCmd\n}\n\n// NewVPCGetCmd - VPC 조회 기능을 수행하는 Cobra Command 생성\nfunc NewVPCGetCmd() *cobra.Command {\n\n\tgetCmd := &cobra.Command{\n\t\tUse:   \"get\",\n\t\tShort: \"This is get command for vpc\",\n\t\tLong:  \"This is get command for vpc\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif vpcName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", vpcName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tgetCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tgetCmd.PersistentFlags().StringVarP(&vpcName, \"name\", \"n\", \"\", \"vpc name\")\n\n\treturn getCmd\n}\n\n// NewVPCDeleteCmd - VPC 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewVPCDeleteCmd() *cobra.Command {\n\n\tdeleteCmd := &cobra.Command{\n\t\tUse:   \"delete\",\n\t\tShort: \"This is delete command for vpc\",\n\t\tLong:  \"This is delete command for vpc\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif vpcName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --name parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--name parameter value : \", vpcName)\n\t\t\tlogger.Debug(\"--force parameter value : \", force)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tdeleteCmd.PersistentFlags().StringVarP(&vpcName, \"name\", \"n\", \"\", \"vpc name\")\n\tdeleteCmd.PersistentFlags().StringVarP(&force, \"force\", \"\", \"false\", \"force flg (true/false)\")\n\n\treturn deleteCmd\n}\n\n// NewVPCListAllCmd - 관리 VPC 목록 기능을 수행하는 Cobra Command 생성\nfunc NewVPCListAllCmd() *cobra.Command {\n\n\tlistAllCmd := &cobra.Command{\n\t\tUse:   \"listall\",\n\t\tShort: \"This is list all command for vpc\",\n\t\tLong:  \"This is list all command for vpc\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tlistAllCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\n\treturn listAllCmd\n}\n\n// NewVPCDeleteCSPCmd - 관리 VPC 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewVPCDeleteCSPCmd() *cobra.Command {\n\n\tdeleteCSPCmd := &cobra.Command{\n\t\tUse:   \"deletecsp\",\n\t\tShort: \"This is delete csp command for vpc\",\n\t\tLong:  \"This is delete csp command for vpc\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif cspID == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --id parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--id parameter value : \", cspID)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tdeleteCSPCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tdeleteCSPCmd.PersistentFlags().StringVarP(&cspID, \"id\", \"\", \"\", \"csp id\")\n\n\treturn deleteCSPCmd\n}\n\n// NewSubnetAddCmd - Subnet 추가 기능을 수행하는 Cobra Command 생성\nfunc NewSubnetAddCmd() *cobra.Command {\n\n\taddCmd := &cobra.Command{\n\t\tUse:   \"add-subnet\",\n\t\tShort: \"This is add command for vpc subnet\",\n\t\tLong:  \"This is add command for vpc subnet\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\treadInDataFromFile()\n\t\t\tif inData == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --indata parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--indata parameter value : \\n\", inData)\n\t\t\tlogger.Debug(\"--infile parameter value : \", inFile)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\taddCmd.PersistentFlags().StringVarP(&inData, \"indata\", \"d\", \"\", \"input string data\")\n\taddCmd.PersistentFlags().StringVarP(&inFile, \"infile\", \"f\", \"\", \"input file path\")\n\n\treturn addCmd\n}\n\n// NewSubnetRemoveCmd - Subnet 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewSubnetRemoveCmd() *cobra.Command {\n\n\tremoveCmd := &cobra.Command{\n\t\tUse:   \"remove-subnet\",\n\t\tShort: \"This is remove command for vpc subnet\",\n\t\tLong:  \"This is remove command for vpc subnet\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif vpcName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --vname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif subnetName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --sname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--vname parameter value : \", vpcName)\n\t\t\tlogger.Debug(\"--sname parameter value : \", subnetName)\n\t\t\tlogger.Debug(\"--force parameter value : \", force)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tremoveCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tremoveCmd.PersistentFlags().StringVarP(&vpcName, \"vname\", \"\", \"\", \"vpc name\")\n\tremoveCmd.PersistentFlags().StringVarP(&subnetName, \"sname\", \"\", \"\", \"subnet name\")\n\tremoveCmd.PersistentFlags().StringVarP(&force, \"force\", \"\", \"false\", \"force flg (true/false)\")\n\n\treturn removeCmd\n}\n\n// NewSubnetRemoveCSPCmd - CSP Subnet 삭제 기능을 수행하는 Cobra Command 생성\nfunc NewSubnetRemoveCSPCmd() *cobra.Command {\n\n\tremoveCSPCmd := &cobra.Command{\n\t\tUse:   \"removecsp-subnet\",\n\t\tShort: \"This is remove csp command for vpc subnet\",\n\t\tLong:  \"This is remove csp command for vpc subnet\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tlogger := logger.NewLogger()\n\t\t\tif connectionName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --cname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif vpcName == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --vname parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif cspID == \"\" {\n\t\t\t\tlogger.Error(\"failed to validate --id parameter\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlogger.Debug(\"--cname parameter value : \", connectionName)\n\t\t\tlogger.Debug(\"--vname parameter value : \", vpcName)\n\t\t\tlogger.Debug(\"--id parameter value : \", cspID)\n\n\t\t\tSetupAndRun(cmd, args)\n\t\t},\n\t}\n\n\tremoveCSPCmd.PersistentFlags().StringVarP(&connectionName, \"cname\", \"\", \"\", \"connection name\")\n\tremoveCSPCmd.PersistentFlags().StringVarP(&vpcName, \"vname\", \"\", \"\", \"vpc name\")\n\tremoveCSPCmd.PersistentFlags().StringVarP(&cspID, \"id\", \"\", \"\", \"csp id\")\n\n\treturn removeCSPCmd\n}\napi-runtime/grpc-runtime/common/cbconnection.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage common\n\nimport (\n\t\"errors\"\n\t\"io\"\n\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer\"\n\t\"github.com/opentracing/opentracing-go\"\n\n\tgrpc_accesslog \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog\"\n\tgrpc_authjwt \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt\"\n\tgrpc_middleware \"github.com/grpc-ecosystem/go-grpc-middleware\"\n\tgrpc_opentracing \"github.com/grpc-ecosystem/go-grpc-middleware/tracing/opentracing\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// CBConnection - CB-GRPC에서 사용하는 grpc 클라이언트를 위한 Wrapper 구조\ntype CBConnection struct {\n\tConn *grpc.ClientConn\n}\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewCBConnection - 초기화된 grpc 클라이언트의 인스턴스 생성\nfunc NewCBConnection(gConf *config.GrpcClientConfig) (*CBConnection, io.Closer, error) {\n\n\tvar (\n\t\ttracer opentracing.Tracer = nil\n\t\tcloser io.Closer          = nil\n\t)\n\n\tif gConf == nil {\n\t\treturn nil, nil, errors.New(\"grpc connection config is null\")\n\t}\n\n\tif gConf.ServerAddr == \"\" {\n\t\treturn nil, nil, errors.New(\"server addr is empty\")\n\t}\n\n\topts := []grpc.DialOption{}\n\n\t// TLS 설정\n\tif gConf.TLS != nil {\n\t\tcreds, err := credentials.NewClientTLSFromFile(gConf.TLS.TLSCA, \"\")\n\t\tif err != nil {\n\t\t\treturn nil, nil, err\n\t\t}\n\t\topts = append(opts, grpc.WithTransportCredentials(creds))\n\t} else {\n\t\topts = append(opts, grpc.WithInsecure())\n\t}\n\n\t// 인터셉터 설정\n\tunaryIntercepters := []grpc.UnaryClientInterceptor{}\n\tstreamIntercepters := []grpc.StreamClientInterceptor{}\n\n\t// access 로그 인터셉터 기본 설정\n\tunaryIntercepters = append(unaryIntercepters, grpc_accesslog.UnaryClientInterceptor())\n\tstreamIntercepters = append(streamIntercepters, grpc_accesslog.StreamClientInterceptor())\n\n\tif gConf.Interceptors != nil {\n\n\t\t// AuthJWT 인터셉터 설정\n\t\tif gConf.Interceptors.AuthJWT != nil {\n\t\t\tunaryIntercepters = append(unaryIntercepters, grpc_authjwt.UnaryClientInterceptor(gConf.Interceptors.AuthJWT.JWTToken))\n\t\t\tstreamIntercepters = append(streamIntercepters, grpc_authjwt.StreamClientInterceptor(gConf.Interceptors.AuthJWT.JWTToken))\n\t\t}\n\n\t\t// Opentracing 인터셉터 설정\n\t\tif gConf.Interceptors.Opentracing != nil {\n\t\t\ttracer, closer = jaegertracer.InitJaeger(gConf.Interceptors.Opentracing.Jaeger)\n\n\t\t\ttracingOpts := []grpc_opentracing.Option{}\n\t\t\ttracingOpts = append(tracingOpts, grpc_opentracing.WithTracer(tracer))\n\n\t\t\tunaryIntercepters = append(unaryIntercepters, grpc_opentracing.UnaryClientInterceptor(tracingOpts...))\n\t\t\tstreamIntercepters = append(streamIntercepters, grpc_opentracing.StreamClientInterceptor(tracingOpts...))\n\t\t}\n\n\t}\n\n\topts = append(opts, grpc.WithUnaryInterceptor(grpc_middleware.ChainUnaryClient(unaryIntercepters...)))\n\topts = append(opts, grpc.WithStreamInterceptor(grpc_middleware.ChainStreamClient(streamIntercepters...)))\n\tconn, err := grpc.Dial(gConf.ServerAddr, opts...)\n\n\treturn &CBConnection{Conn: conn}, closer, err\n}\napi-runtime/grpc-runtime/common/cbmessage.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage common\n\nimport (\n\t\"encoding/json\"\n\t\"strings\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n\n\t\"gopkg.in/yaml.v2\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====s\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// ConvertToMessage - 입력 데이터를 grpc 메시지로 변환\nfunc ConvertToMessage(inType string, inData string, obj interface{}) error {\n\tlogger := logger.NewLogger()\n\n\tif inType == \"yaml\" {\n\t\terr := yaml.Unmarshal([]byte(inData), obj)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tlogger.Debug(\"yaml Unmarshal: \\n\", obj)\n\t}\n\n\tif inType == \"json\" {\n\t\terr := json.Unmarshal([]byte(inData), obj)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tlogger.Debug(\"json Unmarshal: \\n\", obj)\n\t}\n\n\treturn nil\n}\n\n// ConvertToOutput - grpc 메시지를 출력포맷으로 변환\nfunc ConvertToOutput(outType string, obj interface{}) (string, error) {\n\tlogger := logger.NewLogger()\n\n\tif outType == \"yaml\" {\n\t\t// 메시지 포맷에서 불필요한 필드(XXX_로 시작하는 필드)를 제거하기 위해 json 태그를 이용하여 마샬링\n\t\tj, err := json.Marshal(obj)\n\t\tif err != nil {\n\t\t\treturn \"\", err\n\t\t}\n\n\t\t// yaml 에서 지원하지 않는 control character 제거\n\t\tcleanStr := strings.Map(func(value rune) rune {\n\t\t\tswitch {\n\t\t\tcase value == 0x09:\n\t\t\t\treturn value\n\t\t\tcase value == 0x0A:\n\t\t\t\treturn value\n\t\t\tcase value == 0x0D:\n\t\t\t\treturn value\n\t\t\tcase value >= 0x20 && value <= 0x7E:\n\t\t\t\treturn value\n\t\t\tcase value == 0x85:\n\t\t\t\treturn value\n\t\t\tcase value >= 0xA0 && value <= 0xD7FF:\n\t\t\t\treturn value\n\t\t\tcase value >= 0xE000 && value <= 0xFFFD:\n\t\t\t\treturn value\n\t\t\tcase value >= 0x10000 && value <= 0x10FFFF:\n\t\t\t\treturn value\n\t\t\tdefault:\n\t\t\t\treturn -1 // control characters are not allowed\n\t\t\t}\n\t\t}, string(j))\n\n\t\t// 필드를 소팅하지 않고 지정된 순서대로 출력하기 위해 MapSlice 이용\n\t\tjsonObj := yaml.MapSlice{}\n\t\terr2 := yaml.Unmarshal([]byte(cleanStr), &jsonObj)\n\t\tif err2 != nil {\n\t\t\treturn \"\", err2\n\t\t}\n\n\t\t// yaml 마샬링\n\t\ty, err3 := yaml.Marshal(jsonObj)\n\t\tif err3 != nil {\n\t\t\treturn \"\", err3\n\t\t}\n\t\tlogger.Debug(\"yaml Marshal: \\n\", string(y))\n\n\t\treturn string(y), nil\n\t}\n\n\tif outType == \"json\" {\n\t\tj, err := json.MarshalIndent(obj, \"\", \"  \")\n\t\tif err != nil {\n\t\t\treturn \"\", err\n\t\t}\n\t\toutStr := string(j)\n\n\t\t// json.Marshal 함수는  <,>, & 문자를 escape 함.. 다시 원래대로 변환\n\t\toutStr = strings.Replace(outStr, \"\\\\u003c\", \"<\", -1)\n\t\toutStr = strings.Replace(outStr, \"\\\\u003e\", \">\", -1)\n\t\toutStr = strings.Replace(outStr, \"\\\\u0026\", \"&\", -1)\n\n\t\tlogger.Debug(\"json Marshal: \\n\", outStr)\n\t\treturn outStr, nil\n\t}\n\n\treturn \"\", nil\n}\n\n// CopySrcToDest - 소스에서 타켓으로 데이터 복사\nfunc CopySrcToDest(src interface{}, dest interface{}) error {\n\tlogger := logger.NewLogger()\n\n\tj, err := json.MarshalIndent(src, \"\", \"  \")\n\tif err != nil {\n\t\treturn err\n\t}\n\tlogger.Debug(\"source value : \\n\", string(j))\n\n\terr = json.Unmarshal(j, dest)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tj, err = json.MarshalIndent(dest, \"\", \"  \")\n\tif err != nil {\n\t\treturn err\n\t}\n\tlogger.Debug(\"target value : \\n\", string(j))\n\n\treturn nil\n}\napi-runtime/grpc-runtime/common/cbserver.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage common\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"net/http\"\n\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer\"\n\n\tgrpc_accesslog \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog\"\n\tgrpc_authjwt \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt\"\n\tgrpc_middleware \"github.com/grpc-ecosystem/go-grpc-middleware\"\n\tgrpc_recovery \"github.com/grpc-ecosystem/go-grpc-middleware/recovery\"\n\tgrpc_opentracing \"github.com/grpc-ecosystem/go-grpc-middleware/tracing/opentracing\"\n\n\tgrpc_prometheus \"github.com/grpc-ecosystem/go-grpc-prometheus\"\n\t\"github.com/prometheus/client_golang/prometheus\"\n\t\"github.com/prometheus/client_golang/prometheus/promhttp\"\n\n\topentracing \"github.com/opentracing/opentracing-go\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// CBServer - CB-GRPC에서 사용하는 grpc 서버를 위한 Wrapper 구조\ntype CBServer struct {\n\tServer *grpc.Server\n}\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// NewCBServer - 초기화된 grpc 서버의 인스턴스 생성\nfunc NewCBServer(gConf *config.GrpcServerConfig) (*CBServer, io.Closer, error) {\n\n\tvar (\n\t\ttracer      opentracing.Tracer             = nil\n\t\tcloser      io.Closer                      = nil\n\t\treg         *prometheus.Registry           = nil\n\t\tgrpcMetrics *grpc_prometheus.ServerMetrics = nil\n\t)\n\n\tif gConf == nil {\n\t\treturn nil, nil, errors.New(\"grpc server config is null\")\n\t}\n\n\topts := []grpc.ServerOption{}\n\n\t// TLS 설정\n\tif gConf.TLS != nil {\n\t\tcreds, err := credentials.NewServerTLSFromFile(gConf.TLS.TLSCert, gConf.TLS.TLSKey)\n\t\tif err != nil {\n\t\t\treturn nil, nil, err\n\t\t}\n\t\topts = append(opts, grpc.Creds(creds))\n\t}\n\n\t// 인터셉터 설정\n\tunaryIntercepters := []grpc.UnaryServerInterceptor{}\n\tstreamIntercepters := []grpc.StreamServerInterceptor{}\n\n\t// access 로그 인터셉터 기본 설정\n\tunaryIntercepters = append(unaryIntercepters, grpc_accesslog.UnaryServerInterceptor())\n\tstreamIntercepters = append(streamIntercepters, grpc_accesslog.StreamServerInterceptor())\n\n\tif gConf.Interceptors != nil {\n\n\t\t// AuthJWT 인터셉터 설정\n\t\tif gConf.Interceptors.AuthJWT != nil {\n\t\t\tunaryIntercepters = append(unaryIntercepters, grpc_authjwt.UnaryServerInterceptor(gConf.Interceptors.AuthJWT.JWTKey))\n\t\t\tstreamIntercepters = append(streamIntercepters, grpc_authjwt.StreamServerInterceptor(gConf.Interceptors.AuthJWT.JWTKey))\n\t\t}\n\n\t\t// Opentracing 인터셉터 설정\n\t\tif gConf.Interceptors.Opentracing != nil {\n\t\t\tif gConf.Interceptors.Opentracing.Jaeger != nil {\n\t\t\t\ttracer, closer = jaegertracer.InitJaeger(gConf.Interceptors.Opentracing.Jaeger)\n\n\t\t\t\ttracingOpts := []grpc_opentracing.Option{}\n\t\t\t\ttracingOpts = append(tracingOpts, grpc_opentracing.WithTracer(tracer))\n\n\t\t\t\tunaryIntercepters = append(unaryIntercepters, grpc_opentracing.UnaryServerInterceptor(tracingOpts...))\n\t\t\t\tstreamIntercepters = append(streamIntercepters, grpc_opentracing.StreamServerInterceptor(tracingOpts...))\n\t\t\t}\n\t\t}\n\n\t\t// Prometheus Metrics 인터셉터 설정\n\t\tif gConf.Interceptors.PrometheusMetrics != nil {\n\t\t\tgrpcMetrics = grpc_prometheus.NewServerMetrics()\n\t\t\tgrpcMetrics.EnableHandlingTimeHistogram()\n\n\t\t\treg = prometheus.NewRegistry()\n\t\t\treg.MustRegister(grpcMetrics)\n\t\t\treg.MustRegister(prometheus.NewProcessCollector(prometheus.ProcessCollectorOpts{}))\n\t\t\treg.MustRegister(prometheus.NewGoCollector())\n\n\t\t\tunaryIntercepters = append(unaryIntercepters, grpcMetrics.UnaryServerInterceptor())\n\t\t\tstreamIntercepters = append(streamIntercepters, grpcMetrics.StreamServerInterceptor())\n\t\t}\n\n\t}\n\n\t// recovery 인터셉터 기본 설정\n\tunaryIntercepters = append(unaryIntercepters, grpc_recovery.UnaryServerInterceptor())\n\tstreamIntercepters = append(streamIntercepters, grpc_recovery.StreamServerInterceptor())\n\n\topts = append(opts, grpc.UnaryInterceptor(grpc_middleware.ChainUnaryServer(unaryIntercepters...)))\n\topts = append(opts, grpc.StreamInterceptor(grpc_middleware.ChainStreamServer(streamIntercepters...)))\n\tgs := grpc.NewServer(opts...)\n\n\tif gConf.Interceptors != nil {\n\t\tif gConf.Interceptors.PrometheusMetrics != nil {\n\n\t\t\t// Create a HTTP server for prometheus.\n\t\t\thttpServer := &http.Server{\n\t\t\t\tHandler: promhttp.HandlerFor(reg, promhttp.HandlerOpts{}),\n\t\t\t\tAddr:    fmt.Sprintf(\"0.0.0.0:%d\", gConf.Interceptors.PrometheusMetrics.ListenPort),\n\t\t\t}\n\t\t\t// Initialize all metrics.\n\t\t\tgrpcMetrics.InitializeMetrics(gs)\n\t\t\t// Start your http server for prometheus.\n\t\t\tgo func() {\n\t\t\t\tif err := httpServer.ListenAndServe(); err != nil {\n\t\t\t\t\tlog.Fatal(\"Unable to start a http server for prometheus.\")\n\t\t\t\t}\n\t\t\t}()\n\n\t\t}\n\t}\n\n\treturn &CBServer{Server: gs}, closer, nil\n}\napi-runtime/grpc-runtime/common/grpcstatuserr.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage common\n\nimport (\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/status\"\n\n\t\"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\n\n// ConvGrpcStatusErr - GRPC 상태 코드 에러로 변환\nfunc ConvGrpcStatusErr(err error, tag string, method string) error {\n\tlogger := logger.NewLogger()\n\n\tif err != nil {\n\t\tif errStatus, ok := status.FromError(err); ok {\n\t\t\tlogger.Error(tag, \" error while calling \", method, \" method: \", errStatus.Message())\n\t\t\treturn status.Errorf(errStatus.Code(), \"%s error while calling %s method: %v \", tag, method, errStatus.Message())\n\t\t}\n\t\tlogger.Error(tag, \" error while calling \", method, \" method: \", err)\n\t\treturn status.Errorf(codes.Internal, \"%s error while calling %s method: %v \", tag, method, err)\n\t}\n\n\treturn nil\n}\n\n// NewGrpcStatusErr - GRPC 상태 코드 에러 생성\nfunc NewGrpcStatusErr(msg string, tag string, method string) error {\n\tlogger := logger.NewLogger()\n\n\tlogger.Error(tag, \" error while calling \", method, \" method: \", msg)\n\treturn status.Errorf(codes.Internal, \"%s error while calling %s method: %s \", tag, method, msg)\n}\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMSpecHandler.go:35: File is not `gofmt`-ed with `-s` (gofmt)\n        cblogger := cblog.GetLogger(\"CB-SPIDER\")\n        cblogger.Info(\"Mock Driver: called prepare()!\")\ninterface/api/request/connection.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage request\n\nimport (\n\t\"context\"\n\t\"errors\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateConnectionConfig - Connection Config 생성\nfunc (r *CIMRequest) CreateConnectionConfig() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.ConnectionConfigInfo\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.CreateConnectionConfig(ctx, &pb.ConnectionConfigInfoRequest{Item: &item})\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// ListConnectionConfig - Connection Config 목록\nfunc (r *CIMRequest) ListConnectionConfig() (string, error) {\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListConnectionConfig(ctx, &pb.Empty{})\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// GetConnectionConfig - Connection Config 조회\nfunc (r *CIMRequest) GetConnectionConfig() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.ConnectionConfigQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.GetConnectionConfig(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// DeleteConnectionConfig - Connection Config 삭제\nfunc (r *CIMRequest) DeleteConnectionConfig() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.ConnectionConfigQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.DeleteConnectionConfig(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ninterface/api/request/driver.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage request\n\nimport (\n\t\"context\"\n\t\"errors\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateCloudDriver - Cloud Driver 생성\nfunc (r *CIMRequest) CreateCloudDriver() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.CloudDriverInfo\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.CreateCloudDriver(ctx, &pb.CloudDriverInfoRequest{Item: &item})\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// ListCloudDriver -Cloud Driver 목록\nfunc (r *CIMRequest) ListCloudDriver() (string, error) {\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListCloudDriver(ctx, &pb.Empty{})\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// GetCloudDriver - Cloud Driver 조회\nfunc (r *CIMRequest) GetCloudDriver() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.CloudDriverQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.GetCloudDriver(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// DeleteCloudDriver - Cloud Driver 삭제\nfunc (r *CIMRequest) DeleteCloudDriver() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.CloudDriverQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.DeleteCloudDriver(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ninterface/api/request/image.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage request\n\nimport (\n\t\"context\"\n\t\"errors\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateImage - Image 생성\nfunc (r *CCMRequest) CreateImage() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.ImageCreateRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.CreateImage(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// ListImage - Image 목록\nfunc (r *CCMRequest) ListImage() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.ImageAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListImage(ctx, &item)\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// GetImage - Image 조회\nfunc (r *CCMRequest) GetImage() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.ImageQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.GetImage(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// DeleteImage - Image 삭제\nfunc (r *CCMRequest) DeleteImage() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.ImageQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.DeleteImage(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ninterface/api/request/keypair.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage request\n\nimport (\n\t\"context\"\n\t\"errors\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateKey - Key Pair 생성\nfunc (r *CCMRequest) CreateKey() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.KeyPairCreateRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.CreateKey(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// ListKey - Key Pair 목록\nfunc (r *CCMRequest) ListKey() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.KeyPairAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListKey(ctx, &item)\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// GetKey - Key Pair 조회\nfunc (r *CCMRequest) GetKey() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.KeyPairQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.GetKey(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// DeleteKey - Key Pair 삭제\nfunc (r *CCMRequest) DeleteKey() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.KeyPairQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.DeleteKey(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ListAllKey - 관리 Key Pair 목록\nfunc (r *CCMRequest) ListAllKey() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.KeyPairAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListAllKey(ctx, &item)\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// DeleteCSPKey - 관리 Key Pair 삭제\nfunc (r *CCMRequest) DeleteCSPKey() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.CSPKeyPairQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.DeleteCSPKey(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ninterface/api/request/region.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage request\n\nimport (\n\t\"context\"\n\t\"errors\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateRegion - Region 생성\nfunc (r *CIMRequest) CreateRegion() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.RegionInfo\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.CreateRegion(ctx, &pb.RegionInfoRequest{Item: &item})\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// ListRegion - Region 목록\nfunc (r *CIMRequest) ListRegion() (string, error) {\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListRegion(ctx, &pb.Empty{})\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// GetRegion - Region 조회\nfunc (r *CIMRequest) GetRegion() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.RegionQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.GetRegion(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// DeleteRegion - Region 삭제\nfunc (r *CIMRequest) DeleteRegion() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.RegionQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.DeleteRegion(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ninterface/api/request/request.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage request\n\nimport (\n\t\"time\"\n\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// CIMRequest -\ntype CIMRequest struct {\n\tClient  pb.CIMClient\n\tTimeout time.Duration\n\n\tInType  string\n\tInData  string\n\tOutType string\n}\n\n// CCMRequest -\ntype CCMRequest struct {\n\tClient  pb.CCMClient\n\tTimeout time.Duration\n\n\tInType  string\n\tInData  string\n\tOutType string\n}\n\n// SSHRequest -\ntype SSHRequest struct {\n\tClient  pb.SSHClient\n\tTimeout time.Duration\n\n\tInType  string\n\tInData  string\n\tOutType string\n}\n\n// ===== [ Implementations ] =====\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ninterface/api/request/security.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage request\n\nimport (\n\t\"context\"\n\t\"errors\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateSecurity - Security 생성\nfunc (r *CCMRequest) CreateSecurity() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.SecurityCreateRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.CreateSecurity(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// ListSecurity - Security 목록\nfunc (r *CCMRequest) ListSecurity() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.SecurityAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListSecurity(ctx, &item)\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// GetSecurity - Security 조회\nfunc (r *CCMRequest) GetSecurity() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.SecurityQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.GetSecurity(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// DeleteSecurity - Security 삭제\nfunc (r *CCMRequest) DeleteSecurity() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.SecurityQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.DeleteSecurity(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ListAllSecurity - 관리 Security 목록\nfunc (r *CCMRequest) ListAllSecurity() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.SecurityAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListAllSecurity(ctx, &item)\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// DeleteCSPSecurity - 관리 Security 삭제\nfunc (r *CCMRequest) DeleteCSPSecurity() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.CSPSecurityQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.DeleteCSPSecurity(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ninterface/api/request/ssh.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage request\n\nimport (\n\t\"context\"\n\t\"errors\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// SSHRun - SSH 실행\nfunc (r *SSHRequest) SSHRun() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.SSHRunRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.SSHRun(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ninterface/api/request/vm.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage request\n\nimport (\n\t\"context\"\n\t\"errors\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// StartVM - VM 시작\nfunc (r *CCMRequest) StartVM() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMCreateRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.StartVM(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// ControlVM - VM 제어\nfunc (r *CCMRequest) ControlVM() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMActionRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.ControlVM(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ListVMStatus - VM 상태 목록\nfunc (r *CCMRequest) ListVMStatus() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.ListVMStatus(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// GetVMStatus - VM 상태 조회\nfunc (r *CCMRequest) GetVMStatus() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.GetVMStatus(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ListVM - VM 목록\nfunc (r *CCMRequest) ListVM() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.ListVM(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// GetVM - VM 조회\nfunc (r *CCMRequest) GetVM() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.GetVM(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// TerminateVM - VM 삭제\nfunc (r *CCMRequest) TerminateVM() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.TerminateVM(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ListAllVM - 관리 VM 목록\nfunc (r *CCMRequest) ListAllVM() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.ListAllVM(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// TerminateCSPVM - 관리 VM 삭제\nfunc (r *CCMRequest) TerminateCSPVM() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.CSPVMQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.TerminateCSPVM(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ninterface/api/request/vmspec.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage request\n\nimport (\n\t\"context\"\n\t\"errors\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// ListVMSpec - VM Spec 목록\nfunc (r *CCMRequest) ListVMSpec() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMSpecAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListVMSpec(ctx, &item)\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// GetVMSpec - VM Spec 조회\nfunc (r *CCMRequest) GetVMSpec() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMSpecQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.GetVMSpec(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// ListOrgVMSpec - 클라우드의 원래 VM Spec 목록\nfunc (r *CCMRequest) ListOrgVMSpec() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMSpecAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListOrgVMSpec(ctx, &item)\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\tout := resp.Result\n\treturn out, nil\n}\n\n// GetOrgVMSpec - 클라우드의 원래 VM Spec 조회\nfunc (r *CCMRequest) GetOrgVMSpec() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VMSpecQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.GetOrgVMSpec(ctx, &item)\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\tout := resp.Result\n\treturn out, nil\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ninterface/api/request/vpc.go:1: File is not `gofmt`-ed with `-s` (gofmt)\n// gRPC Runtime of CB-Spider.\n// The CB-Spider is a sub-Framework of the Cloud-Barista Multi-Cloud Project.\n// The CB-Spider Mission is to connect all the clouds with a single interface.\n//\n//      * Cloud-Barista: https://github.com/cloud-barista\n//\n// by CB-Spider Team, 2020.09.\n\npackage request\n\nimport (\n\t\"context\"\n\t\"errors\"\n\n\tgc \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\"\n\tpb \"github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\"\n)\n\n// ===== [ Constants and Variables ] =====\n\n// ===== [ Types ] =====\n\n// ===== [ Implementations ] =====\n\n// CreateVPC - VPC 생성\nfunc (r *CCMRequest) CreateVPC() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VPCCreateRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.CreateVPC(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// ListVPC - VPC 목록\nfunc (r *CCMRequest) ListVPC() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VPCAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListVPC(ctx, &item)\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// GetVPC - VPC 조회\nfunc (r *CCMRequest) GetVPC() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VPCQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.GetVPC(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// DeleteVPC - VPC 삭제\nfunc (r *CCMRequest) DeleteVPC() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VPCQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.DeleteVPC(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ListAllVPC - 관리 VPC 목록\nfunc (r *CCMRequest) ListAllVPC() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.VPCAllQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err := r.Client.ListAllVPC(ctx, &item)\n\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// DeleteCSPVPC - 관리 VPC 삭제\nfunc (r *CCMRequest) DeleteCSPVPC() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.CSPVPCQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.DeleteCSPVPC(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// AddSubnet - Subnet 추가\nfunc (r *CCMRequest) AddSubnet() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.SubnetAddRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.AddSubnet(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp.Item)\n}\n\n// RemoveSubnet - Subnet 삭제\nfunc (r *CCMRequest) RemoveSubnet() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.SubnetQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.RemoveSubnet(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// RemoveCSPSubnet - CSP Subnet 삭제\nfunc (r *CCMRequest) RemoveCSPSubnet() (string, error) {\n\t// 입력데이터 검사\n\tif r.InData == \"\" {\n\t\treturn \"\", errors.New(\"input data required\")\n\t}\n\n\t// 입력데이터 언마샬링\n\tvar item pb.CSPSubnetQryRequest\n\terr := gc.ConvertToMessage(r.InType, r.InData, &item)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// 서버에 요청\n\tctx, cancel := context.WithTimeout(context.Background(), r.Timeout)\n\tdefer cancel()\n\n\tresp, err2 := r.Client.RemoveCSPSubnet(ctx, &item)\n\tif err2 != nil {\n\t\treturn \"\", err2\n\t}\n\n\t// 결과값 마샬링\n\treturn gc.ConvertToOutput(r.OutType, &resp)\n}\n\n// ===== [ Private Functions ] =====\n\n// ===== [ Public Functions ] =====\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:55: File is not `gofmt`-ed with `-s` (gofmt)\n        if tmpcncInfo != nil {\ncloud-info-manager/connection-config-info-manager/InfoStore.go:15: File is not `gofmt`-ed with `-s` (gofmt)\n\t\"github.com/cloud-barista/cb-store/utils\"\n"},"govet":{"run":1,"cnt":371,"details":"cloud-control-manager/cloud-driver/call-log/gen4test/gen_calllog.go:67:7: NCPVPC not declared by package calllog (typecheck)\n\tcall.NCPVPC,\n\t     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/t.go:10:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:333:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:47:34: PublicIPHandler not declared by package resources (typecheck)\n\thandler := ResourceHandler.(irs.PublicIPHandler)\n\t                                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:102:20: PublicIPReqInfo not declared by package resources (typecheck)\n\t\t\t\treqInfo := irs.PublicIPReqInfo{Name: \"mcloud-barista-eip-test\"}\n\t\t\t\t               ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:259:3: unknown field `Id` in struct literal (typecheck)\n\t\tId:   \"ami-047f7b46bd6dd5d84\",\n\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:260:3: unknown field `Name` in struct literal (typecheck)\n\t\tName: \"Test OS Image\",\n\t\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:20:5: `cblogger` redeclared in this block (typecheck)\nvar cblogger *logrus.Logger\n    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:16:5: other declaration of cblogger (typecheck)\nvar cblogger *logrus.Logger\n    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:181:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:605:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:185:6: `Config` redeclared in this block (typecheck)\ntype Config struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:650:6: other declaration of Config (typecheck)\ntype Config struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:212:6: `readConfigFile` redeclared in this block (typecheck)\nfunc readConfigFile() Config {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:684:6: other declaration of readConfigFile (typecheck)\nfunc readConfigFile() Config {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:713:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/Test_Vm.go:210:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/key.go:18:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/parallel-test.go:23:5: `count` redeclared in this block (typecheck)\nvar count = 100\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:19:5: other declaration of count (typecheck)\nvar count = 10\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:24:5: `iidRWLock` redeclared in this block (typecheck)\nvar iidRWLock = new(iidm.IIDRWLOCK)\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:20:5: other declaration of iidRWLock (typecheck)\nvar iidRWLock = new(iidm.IIDRWLOCK)\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:27:5: `cName` redeclared in this block (typecheck)\nvar cName = \"aws-seoul-config\"\t\t// Connection Name\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:21:5: other declaration of cName (typecheck)\nvar cName = \"aws-seoul-config\"\t\t// Connection Name\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:28:5: `rName` redeclared in this block (typecheck)\nvar rName = \"VM\"\t\t\t// Resource Type\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:22:5: other declaration of rName (typecheck)\nvar rName = \"VM\"\t\t\t// Resource Type\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:31:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/list-loop.go:24:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/parallel-test.go:111:6: `list` redeclared in this block (typecheck)\nfunc list() {\n     ^\ncloud-control-manager/iid-manager/test/list-loop.go:36:6: other declaration of list (typecheck)\nfunc list() {\n     ^\ncloud-control-manager/iid-manager/test/simple-test.go:18:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshcopy-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshcopy-keypath-test.go:14:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshrun-keypath-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshrun-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-regions.go:27:5: `cblog` redeclared in this block (typecheck)\nvar cblog *logrus.Logger\n    ^\nutils/import-drv-region-info/import-drivers.go:22:5: other declaration of cblog (typecheck)\nvar cblog *logrus.Logger\n    ^\nutils/import-drv-region-info/import-regions.go:33:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-drivers.go:30:6: other declaration of main (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-drivers.go:44:17: undeclared name: `Cblogger` (typecheck)\n                Cblogger.Error(\"$CBSPIDER_ROOT is not set!!\")\n                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:196:39: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\tkeyValueList = append(keyValueList, irs.KeyValue{k, value})\n\t\t                                    ^\ncloud-control-manager/cloud-driver/drivers/alibaba/connect/AlibabaCloudConnection.go:55:16: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources.AlibabaVPCHandler` composite literal uses unkeyed fields (govet)\n\tvpcHandler := alirs.AlibabaVPCHandler{cloudConn.Region, cloudConn.VpcClient}\n\t              ^\ncloud-control-manager/cloud-driver/drivers/alibaba/connect/AlibabaCloudConnection.go:61:18: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources.AlibabaImageHandler` composite literal uses unkeyed fields (govet)\n\timageHandler := alirs.AlibabaImageHandler{cloudConn.Region, cloudConn.ImageClient}\n\t                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/connect/AlibabaCloudConnection.go:67:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources.AlibabaSecurityHandler` composite literal uses unkeyed fields (govet)\n\tsgHandler := alirs.AlibabaSecurityHandler{cloudConn.Region, cloudConn.SecurityGroupClient}\n\t             ^\ncloud-control-manager/cloud-driver/drivers/alibaba/connect/AlibabaCloudConnection.go:73:20: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources.AlibabaKeyPairHandler` composite literal uses unkeyed fields (govet)\n\tkeyPairHandler := alirs.AlibabaKeyPairHandler{cloudConn.Region, cloudConn.KeyPairClient}\n\t                  ^\ncloud-control-manager/cloud-driver/drivers/alibaba/connect/AlibabaCloudConnection.go:96:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources.AlibabaVMHandler` composite literal uses unkeyed fields (govet)\n\tvmHandler := alirs.AlibabaVMHandler{cloudConn.Region, cloudConn.VMClient}\n\t             ^\ncloud-control-manager/cloud-driver/drivers/alibaba/connect/AlibabaCloudConnection.go:102:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources.AlibabaVmSpecHandler` composite literal uses unkeyed fields (govet)\n\thandler := alirs.AlibabaVmSpecHandler{cloudConn.Region, cloudConn.VmSpecClient}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:348:39: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\tkeyValueList = append(keyValueList, irs.KeyValue{k, value})\n\t\t                                    ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/ImageHandler.go:52:9: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.ImageInfo` composite literal uses unkeyed fields (govet)\n\treturn irs.ImageInfo{imageReqInfo.IId, \"\", \"\", nil}, nil\n\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/ImageHandler.go:157:8: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tIId: irs.IID{*image.ImageId, *image.ImageId},\n\t\t     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/KeyPairHandler.go:158:16: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tIId:         irs.IID{keyPairReqInfo.IId.NameId, *result.KeyName},\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/KeyPairHandler.go:283:8: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tIId: irs.IID{*keyPair.KeyName, *keyPair.KeyName},\n\t\t     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:415:8: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tIId: irs.IID{\"\", *securityGroupResult.GroupId},\n\t\t     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:418:18: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tVpcIID:        irs.IID{\"\", *securityGroupResult.VpcId},\n\t\t               ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:654:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tIId:        irs.IID{\"\", *reservation.Instances[0].InstanceId},\n\t\t            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:655:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tImageIId:   irs.IID{*reservation.Instances[0].ImageId, *reservation.Instances[0].ImageId},\n\t\t            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:657:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tKeyPairIId: irs.IID{*reservation.Instances[0].KeyName, *reservation.Instances[0].KeyName},\n\t\t            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:705:20: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tvmInfo.VpcIID = irs.IID{\"\", *reservation.Instances[0].NetworkInterfaces[0].VpcId}\n\t\t\t                ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:720:64: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tvmInfo.SecurityGroupIIds = append(vmInfo.SecurityGroupIIds, irs.IID{*security.GroupName, *security.GroupId})\n\t\t\t                                                            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:1002:10: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\t\tIId: irs.IID{tmpVmName, *vm.InstanceId},\n\t\t\t\t     ^\ncloud-control-manager/cloud-driver/drivers/aws/connect/AwsCloudConnection.go:52:20: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources.AwsKeyPairHandler` composite literal uses unkeyed fields (govet)\n\tkeyPairHandler := ars.AwsKeyPairHandler{cloudConn.CredentialInfo, cloudConn.Region, cloudConn.KeyPairClient}\n\t                  ^\ncloud-control-manager/cloud-driver/drivers/aws/connect/AwsCloudConnection.go:61:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources.AwsVMHandler` composite literal uses unkeyed fields (govet)\n\tvmHandler := ars.AwsVMHandler{cloudConn.Region, cloudConn.VMClient}\n\t             ^\ncloud-control-manager/cloud-driver/drivers/aws/connect/AwsCloudConnection.go:74:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources.AwsVPCHandler` composite literal uses unkeyed fields (govet)\n\thandler := ars.AwsVPCHandler{cloudConn.Region, cloudConn.VNetworkClient}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/aws/connect/AwsCloudConnection.go:82:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources.AwsImageHandler` composite literal uses unkeyed fields (govet)\n\thandler := ars.AwsImageHandler{cloudConn.Region, cloudConn.ImageClient}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/aws/connect/AwsCloudConnection.go:89:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources.AwsSecurityHandler` composite literal uses unkeyed fields (govet)\n\thandler := ars.AwsSecurityHandler{cloudConn.Region, cloudConn.SecurityClient}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/aws/connect/AwsCloudConnection.go:112:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources.AwsVmSpecHandler` composite literal uses unkeyed fields (govet)\n\thandler := ars.AwsVmSpecHandler{cloudConn.Region, cloudConn.VmSpecClient}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/azure/connect/Azure_CloudConnection.go:50:18: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources.AzureImageHandler` composite literal uses unkeyed fields (govet)\n\timageHandler := azrs.AzureImageHandler{cloudConn.Region, cloudConn.Ctx, cloudConn.ImageClient, cloudConn.VMImageClient}\n\t                ^\ncloud-control-manager/cloud-driver/drivers/azure/connect/Azure_CloudConnection.go:62:16: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources.AzureVPCHandler` composite literal uses unkeyed fields (govet)\n\tvpcHandler := azrs.AzureVPCHandler{cloudConn.Region, cloudConn.Ctx, cloudConn.VNetClient, cloudConn.SubnetClient}\n\t              ^\ncloud-control-manager/cloud-driver/drivers/azure/connect/Azure_CloudConnection.go:68:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources.AzureSecurityHandler` composite literal uses unkeyed fields (govet)\n\tsgHandler := azrs.AzureSecurityHandler{cloudConn.Region, cloudConn.Ctx, cloudConn.SecurityGroupClient}\n\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/connect/Azure_CloudConnection.go:74:20: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources.AzureKeyPairHandler` composite literal uses unkeyed fields (govet)\n\tkeypairHandler := azrs.AzureKeyPairHandler{cloudConn.CredentialInfo, cloudConn.Region}\n\t                  ^\ncloud-control-manager/cloud-driver/drivers/azure/connect/Azure_CloudConnection.go:107:19: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources.AzureVmSpecHandler` composite literal uses unkeyed fields (govet)\n\tvmSpecHandler := azrs.AzureVmSpecHandler{cloudConn.Region, cloudConn.Ctx, cloudConn.VmSpecClient}\n\t                 ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/ImageHandler.go:85:11: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.ImageInfo` composite literal uses unkeyed fields (govet)\n\t\t\treturn irs.ImageInfo{imageReqInfo.IId, osName, \"\", nil}, nil\n\t\t\t       ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/ImageHandler.go:142:34: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.ImageInfo` composite literal uses unkeyed fields (govet)\n                listImages[i] = &irs.ImageInfo{irs.IID{\"\", image.ID}, osName, \"\", nil } \n                                 ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/ImageHandler.go:157:9: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.ImageInfo` composite literal uses unkeyed fields (govet)\n\treturn irs.ImageInfo{imageIID, osName, \"\", nil}, nil\n\t       ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:184:34: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.RegionInfo` composite literal uses unkeyed fields (govet)\n                Region:          irs.RegionInfo {regionInfo.Region, regionInfo.Zone},\n                                 ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:185:14: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tImageIId:\t irs.IID{container.Image, container.Image},\n\t\t         \t ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:289:19: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.VMStatusInfo` composite literal uses unkeyed fields (govet)\n\t\tvmStatusInfo := irs.VMStatusInfo{irs.IID{\"\",container.ID}, getMappedStatus(container.State)}\n\t\t                ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:374:11: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tvmIID := irs.IID{\"\", container.ID}\n\t         ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:380:20: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.RegionInfo` composite literal uses unkeyed fields (govet)\n\t\tRegion:          irs.RegionInfo {regionInfo.Region, regionInfo.Zone},\n\t\t                 ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:381:14: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tImageIId:  irs.IID{container.Image, container.ImageID},\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/docker/connect/DockerCloudConnection.go:38:18: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources.DockerImageHandler` composite literal uses unkeyed fields (govet)\n\timageHandler := dkrs.DockerImageHandler{cloudConn.ConnectionInfo.RegionInfo, cloudConn.Context, cloudConn.Client}\n\t                ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/CommonHandler.go:69:39: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\tkeyValueList = append(keyValueList, irs.KeyValue{k, v.(string)})\n\t\t                                    ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:206:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"Name\", imageInfo.Name},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:208:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"Id\", imageInfo.Id},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:209:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"ImageUrl\", imageInfo.ImageUrl},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:210:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"SourceImage\", imageInfo.SourceImage}, // VM생성 시에는 SourceImage나 SelfLink 값을 이용해야 함.\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:211:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"SourceType\", imageInfo.SourceType},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:212:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"SelfLink\", imageInfo.SelfLink},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:213:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"Family\", imageInfo.Family},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:214:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"ProjectId\", imageInfo.ProjectId},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:652:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"Name\", imageInfo.Name},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:653:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"SourceImage\", imageInfo.SourceImage}, // VM생성 시에는 SourceImage나 SelfLink 값을 이용해야 함.\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:654:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"SourceType\", imageInfo.SourceType},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:655:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"SelfLink\", imageInfo.SelfLink},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:657:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"Family\", imageInfo.Family},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:658:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"DiskSizeGb\", strconv.FormatInt(imageInfo.DiskSizeGb, 10)},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:727:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"SubNetwork\", server.NetworkInterfaces[0].Subnetwork},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:728:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"AccessConfigName\", server.NetworkInterfaces[0].AccessConfigs[0].Name},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:729:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"NetworkTier\", server.NetworkInterfaces[0].AccessConfigs[0].NetworkTier},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:730:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"DiskDeviceName\", server.Disks[0].DeviceName},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:731:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"DiskName\", server.Disks[0].Source},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:468:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"RoutingMode\", infoVPC.RoutingConfig.RoutingMode},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:469:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"Description\", infoVPC.Description},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:470:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"SelfLink\", infoVPC.SelfLink},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:491:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"region\", region},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:492:4: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t{\"subnet\", subnetName},\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/connect/GCP_CloudConnection.go:55:18: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources.GCPImageHandler` composite literal uses unkeyed fields (govet)\n\timageHandler := gcprs.GCPImageHandler{cloudConn.Region, cloudConn.Ctx, cloudConn.ImageClient, cloudConn.Credential}\n\t                ^\ncloud-control-manager/cloud-driver/drivers/gcp/connect/GCP_CloudConnection.go:61:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources.GCPSecurityHandler` composite literal uses unkeyed fields (govet)\n\tsgHandler := gcprs.GCPSecurityHandler{cloudConn.Region, cloudConn.Ctx, cloudConn.SecurityGroupClient, cloudConn.Credential}\n\t             ^\ncloud-control-manager/cloud-driver/drivers/gcp/connect/GCP_CloudConnection.go:67:20: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources.GCPKeyPairHandler` composite literal uses unkeyed fields (govet)\n\tkeypairHandler := gcprs.GCPKeyPairHandler{cloudConn.Credential, cloudConn.Region}\n\t                  ^\ncloud-control-manager/cloud-driver/drivers/gcp/connect/GCP_CloudConnection.go:85:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources.GCPVMHandler` composite literal uses unkeyed fields (govet)\n\tvmHandler := gcprs.GCPVMHandler{cloudConn.Region, cloudConn.Ctx, cloudConn.VMClient, cloudConn.Credential}\n\t             ^\ncloud-control-manager/cloud-driver/drivers/gcp/connect/GCP_CloudConnection.go:91:16: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources.GCPVPCHandler` composite literal uses unkeyed fields (govet)\n\tvpcHandler := gcprs.GCPVPCHandler{cloudConn.Region, cloudConn.Ctx, cloudConn.VMClient, cloudConn.Credential}\n\t              ^\ncloud-control-manager/cloud-driver/drivers/gcp/connect/GCP_CloudConnection.go:97:19: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources.GCPVMSpecHandler` composite literal uses unkeyed fields (govet)\n\tvmSpecHandler := gcprs.GCPVMSpecHandler{cloudConn.Region, cloudConn.Ctx, cloudConn.VMClient, cloudConn.Credential}\n\t                 ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/ImageHandler.go:44:3: composites: `*github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.ImageInfo` composite literal uses unkeyed fields (govet)\n\t\t{irs.IID{\"mock-vmimage-01\", \"mock-vmimage-01\"}, \"TestGuestOS\", \"TestStatus\", nil},\n\t\t^\ncloud-control-manager/cloud-driver/drivers/mock/resources/ImageHandler.go:45:3: composites: `*github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.ImageInfo` composite literal uses unkeyed fields (govet)\n\t\t{irs.IID{\"mock-vmimage-02\", \"mock-vmimage-02\"}, \"TestGuestOS\", \"TestStatus\", nil},\n\t\t^\ncloud-control-manager/cloud-driver/drivers/mock/resources/ImageHandler.go:46:3: composites: `*github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.ImageInfo` composite literal uses unkeyed fields (govet)\n\t\t{irs.IID{\"mock-vmimage-03\", \"mock-vmimage-03\"}, \"TestGuestOS\", \"TestStatus\", nil},\n\t\t^\ncloud-control-manager/cloud-driver/drivers/mock/resources/ImageHandler.go:47:3: composites: `*github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.ImageInfo` composite literal uses unkeyed fields (govet)\n\t\t{irs.IID{\"mock-vmimage-04\", \"mock-vmimage-04\"}, \"TestGuestOS\", \"TestStatus\", nil},\n\t\t^\ncloud-control-manager/cloud-driver/drivers/mock/resources/ImageHandler.go:48:3: composites: `*github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.ImageInfo` composite literal uses unkeyed fields (govet)\n\t\t{irs.IID{\"mock-vmimage-05\", \"mock-vmimage-05\"}, \"TestGuestOS\", \"TestStatus\", nil},\n\t\t^\ncloud-control-manager/cloud-driver/drivers/mock/resources/ImageHandler.go:63:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.ImageInfo` composite literal uses unkeyed fields (govet)\n\timageInfo := irs.ImageInfo{irs.IID{imageReqInfo.IId.NameId, imageReqInfo.IId.SystemId}, \"TestGuestOS\", \"TestStatus\", nil}\n\t             ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/KeyPairHandler.go:42:17: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyPairInfo` composite literal uses unkeyed fields (govet)\n\tkeyPairInfo := irs.KeyPairInfo{keyPairReqInfo.IId,\n\t               ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/SecurityHandler.go:41:18: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.SecurityInfo` composite literal uses unkeyed fields (govet)\n\tsecurityInfo := irs.SecurityInfo{securityReqInfo.IId,\n\t                ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/SecurityHandler.go:77:14: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tIId:       irs.IID{srcInfo.IId.NameId, srcInfo.IId.SystemId},\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/SecurityHandler.go:78:14: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tVpcIID:    irs.IID{srcInfo.VpcIID.NameId, srcInfo.VpcIID.SystemId},\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMHandler.go:116:22: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.RegionInfo` composite literal uses unkeyed fields (govet)\n\t\tRegion:            irs.RegionInfo{vmHandler.Region.Region, vmHandler.Region.Zone},\n\t\t                   ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMHandler.go:145:18: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.VMStatusInfo` composite literal uses unkeyed fields (govet)\n\tvmStatusInfo := irs.VMStatusInfo{vmReqInfo.IId, irs.Running}\n\t                ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMSpecHandler.go:43:17: composites: `*github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.VMSpecInfo` composite literal uses unkeyed fields (govet)\n                {\"default\", \"mock-vmspec-01\", irs.VCpuInfo{\"4\", \"2.7\"}, \"32768\", []irs.GpuInfo{{\"2\", \"NVIDIA\", \"V100\", \"16384MB\"}}, nil},\n                ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMSpecHandler.go:44:17: composites: `*github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.VMSpecInfo` composite literal uses unkeyed fields (govet)\n                {\"default\", \"mock-vmspec-02\", irs.VCpuInfo{\"4\", \"3.2\"}, \"32768\", []irs.GpuInfo{{\"1\", \"NVIDIA\", \"V100\", \"16384MB\"}}, nil},\n                ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMSpecHandler.go:45:17: composites: `*github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.VMSpecInfo` composite literal uses unkeyed fields (govet)\n                {\"default\", \"mock-vmspec-03\", irs.VCpuInfo{\"8\", \"2.7\"}, \"62464\", nil, nil},\n                ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMSpecHandler.go:46:17: composites: `*github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.VMSpecInfo` composite literal uses unkeyed fields (govet)\n                {\"default\", \"mock-vmspec-04\", irs.VCpuInfo{\"8\", \"2.7\"}, \"1024\", nil, nil},\n                ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VPCHandler.go:48:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.VPCInfo` composite literal uses unkeyed fields (govet)\n\tvpcInfo := irs.VPCInfo{\n\t           ^\ncloud-control-manager/cloud-driver/drivers/mock/connect/MockCloudConnection.go:35:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources.MockImageHandler` composite literal uses unkeyed fields (govet)\n\thandler := mkrs.MockImageHandler{cloudConn.MockName}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/mock/connect/MockCloudConnection.go:41:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources.MockVMHandler` composite literal uses unkeyed fields (govet)\n\thandler := mkrs.MockVMHandler{cloudConn.Region, cloudConn.MockName}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/mock/connect/MockCloudConnection.go:47:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources.MockVPCHandler` composite literal uses unkeyed fields (govet)\n\thandler := mkrs.MockVPCHandler{cloudConn.MockName}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/mock/connect/MockCloudConnection.go:53:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources.MockSecurityHandler` composite literal uses unkeyed fields (govet)\n\thandler := mkrs.MockSecurityHandler{cloudConn.MockName}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/mock/connect/MockCloudConnection.go:59:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources.MockKeyPairHandler` composite literal uses unkeyed fields (govet)\n\thandler := mkrs.MockKeyPairHandler{cloudConn.MockName}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/mock/connect/MockCloudConnection.go:65:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources.MockVMSpecHandler` composite literal uses unkeyed fields (govet)\n\thandler := mkrs.MockVMSpecHandler{cloudConn.MockName}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:191:39: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n\t\tkeyValueList = append(keyValueList, irs.KeyValue{k, value})\n\t\t                                    ^\ncloud-control-manager/cloud-driver/drivers/tencent/connect/TencentCloudConnection.go:50:20: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources.TencentKeyPairHandler` composite literal uses unkeyed fields (govet)\n\tkeyPairHandler := trs.TencentKeyPairHandler{cloudConn.Region, cloudConn.KeyPairClient}\n\t                  ^\ncloud-control-manager/cloud-driver/drivers/tencent/connect/TencentCloudConnection.go:58:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources.TencentVMHandler` composite literal uses unkeyed fields (govet)\n\tvmHandler := trs.TencentVMHandler{cloudConn.Region, cloudConn.VMClient}\n\t             ^\ncloud-control-manager/cloud-driver/drivers/tencent/connect/TencentCloudConnection.go:71:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources.TencentVPCHandler` composite literal uses unkeyed fields (govet)\n\thandler := trs.TencentVPCHandler{cloudConn.Region, cloudConn.VNetworkClient}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/tencent/connect/TencentCloudConnection.go:78:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources.TencentImageHandler` composite literal uses unkeyed fields (govet)\n\thandler := trs.TencentImageHandler{cloudConn.Region, cloudConn.ImageClient}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/tencent/connect/TencentCloudConnection.go:85:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources.TencentSecurityHandler` composite literal uses unkeyed fields (govet)\n\thandler := trs.TencentSecurityHandler{cloudConn.Region, cloudConn.SecurityClient}\n\t           ^\ncloud-control-manager/cloud-driver/drivers/tencent/connect/TencentCloudConnection.go:92:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources.TencentVmSpecHandler` composite literal uses unkeyed fields (govet)\n\thandler := trs.TencentVmSpecHandler{cloudConn.Region, cloudConn.VmSpecClient}\n\t           ^\ncloud-info-manager/credential-info-manager/InfoStore.go:99:16: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\tkeyValue := icbs.KeyValue{utils.GetNodeValue(kv.Key, 5), kv.Value}\n\t\t\t            ^\ncloud-info-manager/credential-info-manager/InfoStore.go:109:16: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\tkeyValue := icbs.KeyValue{utils.GetNodeValue(kv.Key, 5), kv.Value}\n\t\t\t            ^\ncloud-info-manager/credential-info-manager/InfoStore.go:164:15: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\tkeyValue := icbs.KeyValue{utils.GetNodeValue(kv.Key, 5), kv.Value}\n\t\t            ^\ncloud-info-manager/region-info-manager/InfoStore.go:98:16: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\tkeyValue := icbs.KeyValue{utils.GetNodeValue(kv.Key, 5), kv.Value}\n\t\t\t            ^\ncloud-info-manager/region-info-manager/InfoStore.go:108:16: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\tkeyValue := icbs.KeyValue{utils.GetNodeValue(kv.Key, 5), kv.Value}\n\t\t\t            ^\ncloud-info-manager/region-info-manager/InfoStore.go:164:29: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n                keyValue := icbs.KeyValue{utils.GetNodeValue(kv.Key, 5), kv.Value}\n                            ^\ncloud-control-manager/iid-manager/InfoStore.go:70:67: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n                iidInfo := &IIDInfo{connectionName, resourceType, resources.IID{utils.GetNodeValue(kv.Key, 5), kv.Value} }\n                                                                  ^\ncloud-control-manager/iid-manager/InfoStore.go:98:54: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tiidInfo := &IIDInfo{connectionName, resourceType, resources.IID{nameId, kv.Value} }\n\t\t\t                                                  ^\ncloud-control-manager/iid-manager/InfoStore.go:122:75: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n                        iidInfo := &IIDInfo{connectionName, resourceType, resources.IID{utils.GetNodeValue(kv.Key, 5), systemId} }\n                                                                          ^\napi-runtime/common-runtime/CCMCommon.go:233:32: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tinfo, err := handler.GetImage(cres.IID{nameID, nameID})\n\t                              ^\napi-runtime/common-runtime/CCMCommon.go:263:59: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tiidInfo, err := iidRWLock.GetIID(connectionName, rsType, cres.IID{nameID, \"\"})\n\t                                                         ^\napi-runtime/common-runtime/CCMCommon.go:306:59: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tiidInfo, err := iidRWLock.GetIID(connectionName, rsType, cres.IID{nameID, \"\"})\n\t                                                         ^\napi-runtime/common-runtime/CCMCommon.go:334:14: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.ImageReqInfo` composite literal uses unkeyed fields (govet)\n\t\treqInfo := cres.ImageReqInfo{info.IId} // @todo\n\t\t           ^\napi-runtime/common-runtime/CCMCommon.go:669:59: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tiidInfo, err := iidRWLock.GetIID(connectionName, rsType, cres.IID{nameID, \"\"})\n\t                                                         ^\napi-runtime/common-runtime/CCMCommon.go:734:61: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tiidVPCInfo, err := iidRWLock.GetIID(connectionName, rsVPC, cres.IID{vpcName, \"\"})\n\t                                                           ^\napi-runtime/common-runtime/CCMCommon.go:1126:59: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tiidInfo, err := iidRWLock.GetIID(connectionName, rsType, cres.IID{nameID, \"\"})\n\t                                                         ^\napi-runtime/common-runtime/CCMCommon.go:1495:59: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tiidInfo, err := iidRWLock.GetIID(connectionName, rsType, cres.IID{nameID, \"\"})\n\t                                                         ^\napi-runtime/common-runtime/CCMCommon.go:1615:59: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tiidInfo, err := iidRWLock.GetIID(connectionName, rsType, cres.IID{nameID, \"\"})\n\t                                                         ^\napi-runtime/common-runtime/CCMCommon.go:1651:59: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tiidInfo, err := iidRWLock.GetIID(connectionName, rsType, cres.IID{nameID, \"\"})\n\t                                                         ^\napi-runtime/common-runtime/CCMCommon.go:1952:59: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tiidInfo, err = iidRWLock.GetIID(connectionName, rsType, cres.IID{nameID, \"\"})\n\t\t                                                        ^\napi-runtime/common-runtime/CCMCommon.go:1963:61: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tiidVPCInfo, err = iidRWLock.GetIID(connectionName, rsVPC, cres.IID{vpcName, \"\"})\n\t\t                                                          ^\napi-runtime/common-runtime/CCMCommon.go:2131:61: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tiidVPCInfo, err = iidRWLock.GetIID(connectionName, rsVPC, cres.IID{vpcName, \"\"})\n\t\t                                                          ^\napi-runtime/common-runtime/CCMCommon.go:2138:9: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tiid := cres.IID{\"\", systemID}\n\t       ^\napi-runtime/grpc-runtime/service/vpc.go:182:40: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\treqSubnetInfo := cres.SubnetInfo{IId: cres.IID{req.Item.Name, \"\"}, IPv4_CIDR: req.Item.Ipv4Cidr}\n\t                                      ^\napi-runtime/meerkat-runtime/momkat/MomKat.go:68:18: composites: `github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common.StatusInfo` composite literal uses unkeyed fields (govet)\n\t\t\tstatusInfo := common.StatusInfo{childKatStatusInfo.RowNumber, childKatStatusInfo.CheckBit, \n\t\t\t              ^\napi-runtime/meerkat-runtime/momkat/MomKat.go:354:18: composites: `github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common.StatusInfo` composite literal uses unkeyed fields (govet)\n\t\t\tstatusInfo := common.StatusInfo{strY, row[0], row[1], row[2], row[3], row[4]}\n\t\t\t              ^\napi-runtime/meerkat-runtime/momkat/MomKat.go:398:37: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.KeyValue` composite literal uses unkeyed fields (govet)\n                        childKat := kv.KeyValue{strY, serverIP}\n                                    ^\napi-runtime/rest-runtime/CCMRest.go:55:8: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tIId: cres.IID{req.ReqInfo.Name, \"\"},\n\t\t     ^\napi-runtime/rest-runtime/CCMRest.go:273:38: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tsubnetInfo := cres.SubnetInfo{IId: cres.IID{info.Name, \"\"}, IPv4_CIDR: info.IPv4_CIDR}\n\t\t                                   ^\napi-runtime/rest-runtime/CCMRest.go:278:19: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tIId:            cres.IID{req.ReqInfo.Name, \"\"},\n\t\t                ^\napi-runtime/rest-runtime/CCMRest.go:434:40: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\treqSubnetInfo := cres.SubnetInfo{IId: cres.IID{req.ReqInfo.Name, \"\"}, IPv4_CIDR: req.ReqInfo.IPv4_CIDR}\n\t                                      ^\napi-runtime/rest-runtime/CCMRest.go:539:18: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tIId:           cres.IID{req.ReqInfo.VPCName + cm.SG_DELIMITER + req.ReqInfo.Name, req.ReqInfo.Name}, // for NCP: fixed NameID => SystemID, Driver: (1)search systemID with fixed NameID (2)replace fixed NameID into SysemID\n\t\t               ^\napi-runtime/rest-runtime/CCMRest.go:540:18: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tVpcIID:        cres.IID{req.ReqInfo.VPCName, \"\"},\n\t\t               ^\napi-runtime/rest-runtime/CCMRest.go:717:8: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tIId: cres.IID{req.ReqInfo.Name, \"\"},\n\t\t     ^\napi-runtime/rest-runtime/CCMRest.go:1144:12: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tsgIID := cres.IID{req.ReqInfo.VPCName + cm.SG_DELIMITER + sgName, \"\"}\n\t\t         ^\napi-runtime/rest-runtime/CCMRest.go:1149:22: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tIId:               cres.IID{req.ReqInfo.Name, \"\"},\n\t\t                   ^\napi-runtime/rest-runtime/CCMRest.go:1150:22: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tImageIID:          cres.IID{req.ReqInfo.ImageName, \"\"},\n\t\t                   ^\napi-runtime/rest-runtime/CCMRest.go:1151:22: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tVpcIID:            cres.IID{req.ReqInfo.VPCName, \"\"},\n\t\t                   ^\napi-runtime/rest-runtime/CCMRest.go:1152:22: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tSubnetIID:         cres.IID{req.ReqInfo.SubnetName, \"\"},\n\t\t                   ^\napi-runtime/rest-runtime/CCMRest.go:1156:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tKeyPairIID: cres.IID{req.ReqInfo.KeyPairName, \"\"},\n\t\t            ^\ncloud-info-manager/credential-info-manager/test/test.go:30:35: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\tkeyValueList := []icbs.KeyValue{ {\"ClientId\", \"value1\"},\n\t                                 ^\ncloud-info-manager/credential-info-manager/test/test.go:31:7: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t\t\t {\"ClientSecret\", \"value2\"},\n\t\t\t\t\t ^\ncloud-info-manager/credential-info-manager/test/test.go:32:7: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t\t\t {\"TenantId\", \"value3\"},\n\t\t\t\t\t ^\ncloud-info-manager/credential-info-manager/test/test.go:33:7: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t\t\t {\"SubscriptionId\", \"value4\"},\n\t\t\t\t\t ^\ncloud-info-manager/credential-info-manager/test/test.go:46:34: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\tkeyValueList = []icbs.KeyValue{ {\"ClientId\", \"value101\"}, \n\t                                ^\ncloud-info-manager/credential-info-manager/test/test.go:47:7: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t\t\t {\"ClientSecret\", \"value102\"},\n\t\t\t\t\t ^\ncloud-info-manager/credential-info-manager/test/test.go:48:7: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t\t\t {\"TenantId\", \"value103\"},\n\t\t\t\t\t ^\ncloud-info-manager/credential-info-manager/test/test.go:49:7: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t\t\t {\"SubscriptionId\", \"value104\"},\n\t\t\t\t\t ^\ncloud-info-manager/credential-info-manager/test/test.go:62:41: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n        keyValueList = []icbs.KeyValue{ {\"IdentityEndpoint\", \"value101\"},\n                                        ^\ncloud-info-manager/credential-info-manager/test/test.go:63:42: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n                                         {\"Username\", \"value202\"},\n                                         ^\ncloud-info-manager/credential-info-manager/test/test.go:64:42: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n                                         {\"Password\", \"value203\"},\n                                         ^\ncloud-info-manager/credential-info-manager/test/test.go:65:42: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n                                         {\"DomainName\", \"value204\"},\n                                         ^\ncloud-info-manager/credential-info-manager/test/test.go:66:42: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n                                         {\"ProjectID\", \"value205\"},\n                                         ^\ncloud-info-manager/region-info-manager/test/test.go:32:35: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\tkeyValueList := []icbs.KeyValue{ {\"region\", \"ap-northeast-2\"},\n\t                                 ^\ncloud-info-manager/region-info-manager/test/test.go:45:34: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\tkeyValueList = []icbs.KeyValue{ {\"region\", \"us-east1\"}, \n\t                                ^\ncloud-info-manager/region-info-manager/test/test.go:46:7: composites: `github.com/cloud-barista/cb-store/interfaces.KeyValue` composite literal uses unkeyed fields (govet)\n\t\t\t\t\t {\"zone\", \"us-east1-c\"},\n\t\t\t\t\t ^\ncloud-control-manager/cloud-driver/drivers/mock/test/image_test.go:48:9: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tIId: irs.IID{info, \"\"},\n\t\t\t     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/image_test.go:65:37: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tone, err := imageHandler.GetImage(irs.IID{imgName, imgName})\n\t\t                                  ^\ncloud-control-manager/cloud-driver/drivers/mock/test/image_test.go:78:37: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tinfo, err := imageHandler.GetImage(irs.IID{imageTestInfoList[0], \"\"})\n\t                                   ^\ncloud-control-manager/cloud-driver/drivers/mock/test/image_test.go:92:40: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\tret, err := imageHandler.DeleteImage(irs.IID{\"\", imgName})\n\t\t                                     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/keypair_test.go:51:10: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tIId : irs.IID{info.Id, \"\"},\n\t\t\t      ^\ncloud-control-manager/cloud-driver/drivers/mock/test/keypair_test.go:77:44: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n        info, err := keyPairHandler.GetKey(irs.IID{keyPairTestInfoList[0].Id, \"\"})\n                                           ^\ncloud-control-manager/cloud-driver/drivers/mock/test/security_test.go:52:10: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tIId : irs.IID{info.IId, \"\"},\n\t\t\t      ^\ncloud-control-manager/cloud-driver/drivers/mock/test/security_test.go:53:13: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tVpcIID : irs.IID{info.VpcIID, \"\"},\n\t\t\t         ^\ncloud-control-manager/cloud-driver/drivers/mock/test/security_test.go:80:50: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n        info, err := securityHandler.GetSecurity(irs.IID{securityTestInfoList[0].IId, \"\"})\n                                                 ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:27:19: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces.RegionInfo` composite literal uses unkeyed fields (govet)\n\t\tRegionInfo:     idrv.RegionInfo{\"default\", \"\", \"\"},\n\t\t                ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:41:9: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tIId: irs.IID{info.ImageIID, \"\"},\n\t\t\t     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:52:20: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tIId:            irs.IID{info.VpcIID, \"\"},\n\t\t\t                ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:54:43: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tSubnetInfoList: []irs.SubnetInfo{{IId: irs.IID{info.SubnetIID, \"\"}, IPv4_CIDR: \"10.0.1.0/24\"}},\n\t\t\t                                       ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:63:20: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\t\tIId:           irs.IID{sgIId, \"\"},\n\t\t\t\t               ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:64:20: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\t\tVpcIID:        irs.IID{info.VpcIID, \"\"},\n\t\t\t\t               ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:74:9: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tIId: irs.IID{info.KeyPairIID, \"\"},\n\t\t\t     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:126:28: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tsgIIDs = append(sgIIDs, irs.IID{sgIId, \"\"})\n\t\t\t                        ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:131:9: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tIId: irs.IID{info.IId, \"\"},\n\t\t\t     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:133:23: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tImageIID:          irs.IID{info.ImageIID, \"\"},\n\t\t\t                   ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:134:23: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tVpcIID:            irs.IID{info.VpcIID, \"\"},\n\t\t\t                   ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:135:23: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tSubnetIID:         irs.IID{info.SubnetIID, \"\"},\n\t\t\t                   ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:139:16: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tKeyPairIID: irs.IID{info.KeyPairIID, \"\"},\n\t\t\t            ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:170:31: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tinfo, err := vmHandler.GetVM(irs.IID{vmTestInfoList[0].IId, \"\"})\n\t                             ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:220:31: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tinfo, err := vmHandler.GetVM(irs.IID{vmTestInfoList[0].IId, \"\"})\n\t                             ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:270:31: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tinfo, err := vmHandler.GetVM(irs.IID{vmTestInfoList[0].IId, \"\"})\n\t                             ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:320:31: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tinfo, err := vmHandler.GetVM(irs.IID{vmTestInfoList[0].IId, \"\"})\n\t                             ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:65:20: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tIId:            irs.IID{info.IId, \"\"},\n\t\t\t                ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:67:43: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tSubnetInfoList: []irs.SubnetInfo{{IId: irs.IID{info.SubnetIID, \"\"}, IPv4_CIDR: info.SubnetCIDR}},\n\t\t\t                                       ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:95:15: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t\tIId:       irs.IID{info.SubnetIID, \"\"},\n\t\t\t           ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:98:34: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t_, err := vpcHandler.AddSubnet(irs.IID{info.VpcIID, \"\"}, subnetInfo)\n\t\t                               ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:105:33: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tinfo, err := vpcHandler.GetVPC(irs.IID{subnetTestInfoList[0].VpcIID, \"\"})\n\t                               ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:124:37: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\t\t_, err := vpcHandler.RemoveSubnet(irs.IID{info.VpcIID, \"\"}, irs.IID{\"\", info.SubnetIID})\n\t\t                                  ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:131:33: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tinfo, err := vpcHandler.GetVPC(irs.IID{subnetTestInfoList[0].VpcIID, \"\"})\n\t                               ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:149:33: composites: `github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources.IID` composite literal uses unkeyed fields (govet)\n\tinfo, err := vpcHandler.GetVPC(irs.IID{vpcTestInfoList[0].IId, \"\"})\n\t                               ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:142:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:169:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:183:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:197:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:211:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:225:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:239:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:253:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:267:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:281:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:295:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:309:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), cspTimeout*time.Second)\n\t     ^\napi-runtime/meerkat-runtime/momkat/MomKat.go:299:14: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n        ctx, _ := context.WithTimeout(context.Background(), common.ChildKatCallTimeout*time.Millisecond)\n             ^\napi-runtime/meerkat-runtime/momkat/MomKat.go:314:14: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n        ctx, _ := context.WithTimeout(context.Background(), common.ChildKatCallTimeout*time.Millisecond)\n             ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:138:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:165:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:179:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:193:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:207:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:221:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:235:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:249:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:263:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:277:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:291:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:305:7: lostcancel: the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak (govet)\n\tctx, _ := context.WithTimeout(context.Background(), 600*time.Second)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/ImageHandler.go:221:16: printf: Infof call has arguments but no formatting directives (govet)\n\tcblogger.Infof(\"imageID : \", imageIID.SystemId)\n\t              ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/SecurityHandler.go:30:16: printf: Infof call has arguments but no formatting directives (govet)\n\tcblogger.Infof(\"securityReqInfo : \", securityReqInfo)\n\t              ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/SecurityHandler.go:42:17: printf: Debugf call has arguments but no formatting directives (govet)\n\tcblogger.Debugf(\"보안 그룹 생성 요청 정보\", request)\n\t               ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:207:2: printf: Info call has possible formatting directive %s (govet)\n\tcblogger.Info(\"==>생성된 VM[%s]의 현재 상태[%s]\", newVmIID, curStatus)\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:591:2: printf: Infof format %s has arg timeLen of wrong type int (govet)\n\tcblogger.Infof(\"======> 생성시간 길이 [%s]\", timeLen)\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:652:3: printf: Info call has possible formatting directive %s (govet)\n\t\tcblogger.Info(\"[%s] ECS 정보 조회\", curInstance.InstanceId)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMSpecHandler.go:74:2: printf: Errorf format %] has unknown verb ] (govet)\n\tcblogger.Errorf(\"[%]의 KeyValue 추출 실패\", instanceTypeInfo.InstanceTypeId)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/ImageHandler.go:145:2: printf: Info call has possible formatting directive %d (govet)\n\tcblogger.Info(\"%d개의 이미지가 조회됨.\", cnt)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/KeyPairHandler.go:357:4: printf: Error call has possible formatting directive %q (govet)\n\t\t\tcblogger.Error(\"Key pair %q does not exist.\", keyIID.SystemId)\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:35:16: printf: Infof call has arguments but no formatting directives (govet)\n\tcblogger.Infof(\"securityReqInfo : \", securityReqInfo)\n\t              ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:62:17: printf: Debugf call has arguments but no formatting directives (govet)\n\tcblogger.Debugf(\"보안 그룹 생성 요청 정보\", input)\n\t               ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:154:2: printf: Debugf format %s has arg userDataBase64 of wrong type *string (govet)\n\tcblogger.Debugf(\"cloud-init data : [%s]\", userDataBase64)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:213:18: printf: Errorf call has arguments but no formatting directives (govet)\n\t\tcblogger.Errorf(\"EC2 인스턴스 생성 실패 : \", err)\n\t\t               ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:824:4: printf: Info call has possible formatting directive %s (govet)\n\t\t\tcblogger.Info(\"[%s] EC2 정보 조회\", *vm.InstanceId)\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:83:3: printf: Errorf format %] has unknown verb ] (govet)\n\t\tcblogger.Errorf(\"[%]의 KeyValue 추출 실패\", *instanceTypeInfo.InstanceType)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:280:4: printf: Errorf format %S has unknown verb S (govet)\n\t\t\tcblogger.Errorf(\"이미 [%S] Subnet이 존재하기 때문에 생성하지 않고 기존 정보와 함께 에러를 리턴함.\", reqSubnetInfo.IId.SystemId)\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:580:2: printf: Infof format %d reads arg #2, but call has 1 arg (govet)\n\tcblogger.Infof(\"[%s] VPC가 최종 삭제될까지 대기 - 리소스 ID : [%d]\", name)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:72:3: printf: Error call has possible formatting directive %s (govet)\n\t\tcblogger.Error(\"Failed to get vpc list, err=%s\", err)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:79:3: printf: Error call has possible formatting directive %s (govet)\n\t\tcblogger.Error(\"Failed to get vpc list, err=%s\", err)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:57:4: printf: Error call has possible formatting directive %s (govet)\n\t\t\tcblogger.Error(\"Failed to get subnet with Id %s, err=%s\", subnetId, err)\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:278:3: printf: Error call has possible formatting directive %s (govet)\n\t\tcblogger.Error(\"Failed to create Subnet with name %s, err=%s\", reqSubnetInfo.IId.NameId, err)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:288:3: printf: Error call has possible formatting directive %s (govet)\n\t\tcblogger.Error(\"Failed to get Subnet with Id %s, err=%s\", subnetIId.SystemId, err)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:298:3: printf: Error call has possible formatting directive %s (govet)\n\t\tcblogger.Error(\"Failed to delete Subnet with Id %s, err=%s\", subnetIId.SystemId, err)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:329:3: printf: Error call has possible formatting directive %s (govet)\n\t\tcblogger.Error(\"Failed to list router, err=%s\", err)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:334:3: printf: Error call has possible formatting directive %s (govet)\n\t\tcblogger.Error(\"Failed to extract router, err=%s\", err)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:338:3: printf: Error call has possible formatting directive %s (govet)\n\t\tcblogger.Error(\"Failed to get router with name %s, err=%s\", routerName)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:350:3: printf: Error call has possible formatting directive %s (govet)\n\t\tcblogger.Error(\"Failed to delete router with Id %s, err=%s\", routerId)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:356:3: printf: Error call has possible formatting directive %s (govet)\n\t\tcblogger.Error(\"Failed to delete router with Id %s, err=%s\", routerId)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/ImageHandler.go:147:3: printf: Errorf format %] has unknown verb ] (govet)\n\t\tcblogger.Errorf(\"[%]의 KeyValue 추출 실패\", *image.ImageId)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/SecurityHandler.go:39:16: printf: Infof call has arguments but no formatting directives (govet)\n\tcblogger.Infof(\"securityReqInfo : \", securityReqInfo)\n\t              ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:215:2: printf: Info call has possible formatting directive %s (govet)\n\tcblogger.Info(\"==>생성된 VM[%s]의 현재 상태[%s]\", newVmIID, curStatus)\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:451:2: printf: Debugf format %s has arg timeLen of wrong type int (govet)\n\tcblogger.Debugf(\"======> 생성시간 길이 [%s]\", timeLen)\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:289:3: printf: Errorf format %] has unknown verb ] (govet)\n\t\tcblogger.Errorf(\"[%]의 KeyValue 추출 실패\", *instanceTypeInfo.InstanceType)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:415:3: printf: Errorf format %S has unknown verb S (govet)\n\t\tcblogger.Errorf(\"이미 [%S] Subnet이 존재하기 때문에 생성하지 않고 기존 정보와 함께 에러를 리턴함.\", subnetInfo.IId.NameId)\n\t\t^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:847:11: printf: Sprintf format %s reads arg #22, but call has 21 args (govet)\n\tstrTR := fmt.Sprintf(`\n\t         ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/conf/Test_Config.go:73:2: printf: Debugf format %] has unknown verb ] (govet)\n\tcblogger.Debugf(\"Test Data 설정파일 : [%]\", rootPath+\"/config/configAli.yaml\")\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:368:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" Security 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:475:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Security 삭제 결과 : [%s]\", securityId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:519:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" 키 페어 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:556:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] 키 페어 삭제 결과 : [%s]\", keyPairName, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:650:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" VPC 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:671:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"VPC 생성 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:680:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VPC 조회 실패 : \", reqVpcId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:690:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VPC 삭제 실패 : \", reqVpcId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:692:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VPC 삭제 결과 : [%s]\", reqVpcId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:701:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"Subnet 추가 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:710:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Subnet 삭제 실패 : \", reqSubnetId.SystemId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:712:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Subnet 삭제 결과 : [%s]\", reqSubnetId.SystemId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:758:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" Image 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:777:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"Image 생성 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:786:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 조회 실패 : \", imageReqInfo.IId.NameId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:796:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 삭제 실패 : \", imageReqInfo.IId.NameId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:798:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 삭제 결과 : [%s]\", imageReqInfo.IId.NameId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:77:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" Security 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:192:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Security 삭제 결과 : [%s]\", securityId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:271:17: printf: Infof call has arguments but no formatting directives (govet)\n\t\tcblogger.Infof(\"보안 그룹 조회 실패 : \", err)\n\t\t              ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:414:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" 키 페어 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:448:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] 키 페어 삭제 결과 : [%s]\", keyPairName, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:613:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" VNetwork 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:634:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"VNetwork 생성 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:643:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VNetwork 조회 실패 : \", reqSubnetId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:653:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VNetwork 삭제 실패 : \", reqSubnetId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:655:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VNetwork 삭제 결과 : [%s]\", reqSubnetId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:664:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"VNetwork 생성 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:673:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Subnet 삭제 실패 : \", reqSubnetId.SystemId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:675:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Subnet 삭제 결과 : [%s]\", reqSubnetId.SystemId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:720:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" Image 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:739:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"Image 생성 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:748:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 조회 실패 : \", imageReqInfo.IId.NameId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:758:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 삭제 실패 : \", imageReqInfo.IId.NameId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:760:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 삭제 결과 : [%s]\", imageReqInfo.IId.NameId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:1280:2: printf: Infof format %] has unknown verb ] (govet)\n\tcblogger.Infof(\"Test Data 설정파일 : [%]\", rootPath+\"/config/config.yaml\")\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:109:17: printf: Infof call has arguments but no formatting directives (govet)\n\t\tcblogger.Infof(\"보안 그룹 조회 실패 : \", err)\n\t\t              ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:157:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" Security 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:287:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Security 삭제 결과 : [%s]\", securityId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:338:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" Image 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:358:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"Image 생성 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:367:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 조회 실패 : \", imageReqInfo.IId.NameId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:377:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 삭제 실패 : \", imageReqInfo.IId.NameId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:379:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 삭제 결과 : [%s]\", imageReqInfo.IId.NameId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:485:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" VPC 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:506:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"VPC 생성 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:515:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VPC 조회 실패 : \", reqVpcId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:526:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VPC 삭제 실패 : \", reqVpcId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:528:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VPC 삭제 결과 : [%s]\", reqVpcId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:537:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"VNetwork 생성 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:546:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Subnet 삭제 실패 : \", reqSubnetId.SystemId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:548:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Subnet 삭제 결과 : [%s]\", reqSubnetId.SystemId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:593:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" 키 페어 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:630:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] 키 페어 삭제 결과 : [%s]\", keyPairName, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:674:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" 키 페어 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:712:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] 키 페어 삭제 결과 : [%s]\", keyPairName, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/conf/Test_Config.go:53:2: printf: Debugf format %] has unknown verb ] (govet)\n\tcblogger.Debugf(\"Test Data 설정파일 : [%]\", testFilePath)\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:168:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" Security 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:282:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Security 삭제 결과 : [%s]\", securityId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:326:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" 키 페어 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:367:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] 키 페어 삭제 결과 : [%s]\", keyPairName, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:440:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" VPC 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:464:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"VPC 생성 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:473:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VPC 조회 실패 : \", reqVpcId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:483:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VPC 삭제 실패 : \", reqVpcId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:485:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] VPC 삭제 결과 : [%s]\", reqVpcId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:494:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"Subnet 추가 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:503:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Subnet 삭제 실패 : \", reqSubnetId.SystemId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:505:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Subnet 삭제 결과 : [%s]\", reqSubnetId.SystemId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:549:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\" Image 목록 조회 실패 : \", err)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:568:20: printf: Infof call has arguments but no formatting directives (govet)\n\t\t\t\t\tcblogger.Infof(\"Image 생성 결과 : \", result)\n\t\t\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:577:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 조회 실패 : \", imageReqInfo.IId.NameId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:587:6: printf: Infof call needs 1 arg but has 2 args (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 삭제 실패 : \", imageReqInfo.IId.NameId, err)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:589:6: printf: Infof format %s has arg result of wrong type bool (govet)\n\t\t\t\t\tcblogger.Infof(\"[%s] Image 삭제 결과 : [%s]\", imageReqInfo.IId.NameId, result)\n\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:117:10: shadow: declaration of \"err\" shadows declaration at line 76 (govet)\n\t\t\tif n, err := strconv.ParseInt(ip.FromPort, 10, 64); err == nil {\n\t\t\t      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:128:10: shadow: declaration of \"err\" shadows declaration at line 76 (govet)\n\t\t\tif n, err := strconv.ParseInt(ip.ToPort, 10, 64); err == nil {\n\t\t\t      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:184:10: shadow: declaration of \"err\" shadows declaration at line 76 (govet)\n\t\t\tif n, err := strconv.ParseInt(ip.FromPort, 10, 64); err == nil {\n\t\t\t      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:195:10: shadow: declaration of \"err\" shadows declaration at line 76 (govet)\n\t\t\tif n, err := strconv.ParseInt(ip.ToPort, 10, 64); err == nil {\n\t\t\t      ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/KeyPairHandler.go:61:8: shadow: declaration of \"err\" shadows declaration at line 50 (govet)\n\tif _, err := os.Stat(savePrivateFileTo); err == nil {\n\t      ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:127:14: shadow: declaration of \"err\" shadows declaration at line 50 (govet)\n\t\tpublicKey, err := GetPublicKey(vmHandler.CredentialInfo, vmReqInfo.KeyPairIID.NameId)\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VPCHandler.go:103:11: shadow: declaration of \"err\" shadows declaration at line 82 (govet)\n\t\tfuture, err := vpcHandler.SubnetClient.CreateOrUpdate(vpcHandler.Ctx, vpcHandler.Region.ResourceGroup, vpcReqInfo.IId.NameId, subnet.IId.NameId, subnetCreateOpts)\n\t\t        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/KeyPairHandler.go:62:8: shadow: declaration of \"err\" shadows declaration at line 51 (govet)\n\tif _, err := os.Stat(savePrivateFileTo); err == nil {\n\t      ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:164:11: shadow: declaration of \"err\" shadows declaration at line 63 (govet)\n\t\tvmInfo, err := server.Get(vmHandler.Client, creatingVm.ID, &requestOpts)\n\t\t        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:202:6: shadow: declaration of \"err\" shadows declaration at line 63 (govet)\n\t\t_, err := RunCommand(vmInfo.PublicIP, SSHDefaultPort, VMDefaultUser, VMDefaultPassword, \"echo test\")\n\t\t   ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:107:12: shadow: declaration of \"err\" shadows declaration at line 101 (govet)\n        if err := vmHandler.Client.ContainerStart(vmHandler.Context, resp.ID, types.ContainerStartOptions{}); err != nil {\n           ^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:259:14: shadow: declaration of \"err\" shadows declaration at line 251 (govet)\n        case err := <-errCh:\n             ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/KeyPairHandler.go:90:8: shadow: declaration of \"err\" shadows declaration at line 75 (govet)\n\tif _, err := os.Stat(savePrivateFileTo); err == nil {\n\t      ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/KeyPairHandler.go:239:8: shadow: declaration of \"err\" shadows declaration at line 215 (govet)\n\tif _, err := os.Stat(privateKeyPath); err != nil {\n\t      ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/KeyPairHandler.go:293:8: shadow: declaration of \"err\" shadows declaration at line 282 (govet)\n\tif _, err := os.Stat(privateKeyPath); err != nil {\n\t      ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/SecurityHandler.go:146:6: shadow: declaration of \"err\" shadows declaration at line 85 (govet)\n\t\t_, err := rules.Create(securityHandler.NetworkClient, createRuleOpts).Extract()\n\t\t   ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:208:11: shadow: declaration of \"err\" shadows declaration at line 52 (govet)\n\t\t\tif ok, err := vmHandler.AssociatePublicIP(serverResult.ID); !ok {\n\t\t\t       ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:328:3: shadow: declaration of \"err\" shadows declaration at line 300 (govet)\n\t\terr := floatingips.Delete(vmHandler.Client, publicIPId).ExtractErr()\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:115:6: shadow: declaration of \"err\" shadows declaration at line 84 (govet)\n\t\t_, err := vpcHandler.CreateSubnet(vpc.ID, subnet)\n\t\t   ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:227:10: shadow: declaration of \"err\" shadows declaration at line 211 (govet)\n\t\tif ok, err := vpcHandler.DeleteInterface(subnet.IId.SystemId, *routerId); !ok {\n\t\t       ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:58:7: shadow: declaration of \"err\" shadows declaration at line 47 (govet)\n\t\t\t_, err := deleteInfo(configName)\n\t\t\t   ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:179:3: shadow: declaration of \"err\" shadows declaration at line 174 (govet)\n\t\terr := fmt.Errorf(\"decryption: \" + \"ciphertext too short\")\n\t\t^\napi-runtime/common-runtime/CCMCommon.go:545:8: shadow: declaration of \"err\" shadows declaration at line 543 (govet)\n\t\t\t\t_, err := iidRWLock.DeleteIID(connectionName, SUBNET_PREFIX+info.IId.NameId, subnetInfo.IId)\n\t\t\t\t   ^\napi-runtime/common-runtime/CCMCommon.go:1999:17: shadow: declaration of \"err\" shadows declaration at line 1891 (govet)\n\t\tproviderName, err := ccm.GetProviderNameByConnectionName(connectionName)\n\t\t              ^\ncloud-control-manager/cloud-driver/drivers/mock/test/keypair_test.go:91:8: shadow: declaration of \"err\" shadows declaration at line 77 (govet)\n\t\tret, err := keyPairHandler.DeleteKey(info.IId)\n\t\t     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/security_test.go:94:8: shadow: declaration of \"err\" shadows declaration at line 80 (govet)\n\t\tret, err := securityHandler.DeleteSecurity(info.IId)\n\t\t     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:184:8: shadow: declaration of \"err\" shadows declaration at line 170 (govet)\n\t\tret, err := vmHandler.SuspendVM(info.IId)\n\t\t     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:234:8: shadow: declaration of \"err\" shadows declaration at line 220 (govet)\n\t\tret, err := vmHandler.ResumeVM(info.IId)\n\t\t     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:284:8: shadow: declaration of \"err\" shadows declaration at line 270 (govet)\n\t\tret, err := vmHandler.RebootVM(info.IId)\n\t\t     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vm_test.go:334:8: shadow: declaration of \"err\" shadows declaration at line 320 (govet)\n\t\tret, err := vmHandler.TerminateVM(info.IId)\n\t\t     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:163:8: shadow: declaration of \"err\" shadows declaration at line 149 (govet)\n\t\tret, err := vpcHandler.DeleteVPC(info.IId)\n\t\t     ^\ntest/interface-test/cli-scenario/cobra_call.go:33:8: shadow: declaration of \"err\" shadows declaration at line 20 (govet)\n\t\tout, err := ioutil.ReadAll(e)\n\t\t     ^\ntest/interface-test/cli-scenario/setup.go:43:2: shadow: declaration of \"nullOut\" shadows declaration at line 32 (govet)\n\tnullOut, _ := os.Open(os.DevNull)\n\t^\ntest/interface-test/go-scenario/method_call.go:41:7: shadow: declaration of \"err\" shadows declaration at line 36 (govet)\n\t\trv, err := Call(tc.Instance, tc.Method, tc.Args)\n\t\t    ^\ntest/interface-test/go-scenario/setup.go:51:2: shadow: declaration of \"nullOut\" shadows declaration at line 38 (govet)\n\tnullOut, _ := os.Open(os.DevNull)\n\t^\ntest/interface-test/go-scenario/setup.go:91:6: shadow: declaration of \"err\" shadows declaration at line 75 (govet)\n\t\tif err := gs.Serve(listener); err != nil {\n\t\t   ^\ntest/interface-test/rest-scenario/echo_call.go:137:8: shadow: declaration of \"err\" shadows declaration at line 117 (govet)\n\t\tres, err := Call(funcs, tc.EchoFunc, c)\n\t\t     ^\ntest/interface-test/rest-scenario/setup.go:39:2: shadow: declaration of \"nullOut\" shadows declaration at line 29 (govet)\n\tnullOut, _ := os.Open(os.DevNull)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/KeyPairHandler.go:261:3: unreachable: unreachable code (govet)\n\t\treturn irs.KeyPairInfo{}, nil\n\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:235:2: unreachable: unreachable code (govet)\n\treturn nil\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:296:2: unreachable: unreachable code (govet)\n\treturn nil\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:355:2: unreachable: unreachable code (govet)\n\treturn nil\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Sample/test.go:57:2: unreachable: unreachable code (govet)\n\tconfig := testconf.ReadConfigFile()\n\t^\n"},"gocyclo":{"run":1,"cnt":102,"details":"api-runtime/grpc-runtime/config/config.go:118:1: cyclomatic complexity 19 of func `(*GrpcConfig).initGlobalParams` is high (> 10) (gocyclo)\nfunc (gConf *GrpcConfig) initGlobalParams() {\n^\ncloud-info-manager/connection-config-info-manager/test/test.go:17:1: cyclomatic complexity 11 of func `main` is high (> 10) (gocyclo)\nfunc main() {\n^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:649:1: cyclomatic complexity 14 of func `testVMSpecHandler` is high (> 10) (gocyclo)\nfunc testVMSpecHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:324:1: cyclomatic complexity 14 of func `testSecurityHandler` is high (> 10) (gocyclo)\nfunc testSecurityHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:185:1: cyclomatic complexity 14 of func `testKeyPairHandler` is high (> 10) (gocyclo)\nfunc testKeyPairHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:99:1: cyclomatic complexity 14 of func `testVPCHandler` is high (> 10) (gocyclo)\nfunc testVPCHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:27:1: cyclomatic complexity 14 of func `testImageHandler` is high (> 10) (gocyclo)\nfunc testImageHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:790:1: cyclomatic complexity 13 of func `main` is high (> 10) (gocyclo)\nfunc main() {\n^\napi-runtime/meerkat-runtime/momkat/MomKat.go:167:1: cyclomatic complexity 12 of func `GetAndSetStatus` is high (> 10) (gocyclo)\nfunc GetAndSetStatus(statusInfo common.StatusInfo) {\n^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:431:1: cyclomatic complexity 27 of func `(*TencentVMHandler).ExtractDescribeInstances` is high (> 10) (gocyclo)\nfunc (vmHandler *TencentVMHandler) ExtractDescribeInstances(curVm *cvm.Instance) (irs.VMInfo, error) {\n^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:60:1: cyclomatic complexity 25 of func `testVMHandler` is high (> 10) (gocyclo)\nfunc testVMHandler() {\n^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/SecurityHandler.go:37:1: cyclomatic complexity 28 of func `(*GCPSecurityHandler).CreateSecurity` is high (> 10) (gocyclo)\nfunc (securityHandler *GCPSecurityHandler) CreateSecurity(securityReqInfo irs.SecurityReqInfo) (irs.SecurityInfo, error) {\n^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:38:1: cyclomatic complexity 11 of func `(*GCPVPCHandler).CreateVPC` is high (> 10) (gocyclo)\nfunc (vVPCHandler *GCPVPCHandler) CreateVPC(vpcReqInfo irs.VPCReqInfo) (irs.VPCInfo, error) {\n^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:71:1: cyclomatic complexity 17 of func `testVMHandler` is high (> 10) (gocyclo)\nfunc testVMHandler() {\n^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:23:1: cyclomatic complexity 14 of func `testImageHandler` is high (> 10) (gocyclo)\nfunc testImageHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:477:1: cyclomatic complexity 14 of func `testKeypairHandler` is high (> 10) (gocyclo)\nfunc testKeypairHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:410:1: cyclomatic complexity 14 of func `testVmSpecHandler` is high (> 10) (gocyclo)\nfunc testVmSpecHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:252:1: cyclomatic complexity 14 of func `testVPCHandler` is high (> 10) (gocyclo)\nfunc testVPCHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:165:1: cyclomatic complexity 14 of func `testSecurityHandler` is high (> 10) (gocyclo)\nfunc testSecurityHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:605:1: cyclomatic complexity 12 of func `main` is high (> 10) (gocyclo)\nfunc main() {\n^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:814:1: cyclomatic complexity 25 of func `handleVM` is high (> 10) (gocyclo)\nfunc handleVM() {\n^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:387:1: cyclomatic complexity 19 of func `handleVPC` is high (> 10) (gocyclo)\nfunc handleVPC() {\n^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:117:1: cyclomatic complexity 15 of func `handleSecurity` is high (> 10) (gocyclo)\nfunc handleSecurity() {\n^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:295:1: cyclomatic complexity 15 of func `handleImage` is high (> 10) (gocyclo)\nfunc handleImage() {\n^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:720:1: cyclomatic complexity 15 of func `handleVMSpec` is high (> 10) (gocyclo)\nfunc handleVMSpec() {\n^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:637:1: cyclomatic complexity 15 of func `handleKeyPair` is high (> 10) (gocyclo)\nfunc handleKeyPair() {\n^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:556:1: cyclomatic complexity 14 of func `handleKeyPairOld` is high (> 10) (gocyclo)\nfunc handleKeyPairOld() {\n^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:46:1: cyclomatic complexity 31 of func `(*ClouditVMHandler).StartVM` is high (> 10) (gocyclo)\nfunc (vmHandler *ClouditVMHandler) StartVM(vmReqInfo irs.VMReqInfo) (irs.VMInfo, error) {\n^\ncloud-control-manager/CloudDriverHandler_static.go:199:1: cyclomatic complexity 13 of func `GetRegionNameByRegionInfo` is high (> 10) (gocyclo)\nfunc GetRegionNameByRegionInfo(rgnInfo *rim.RegionInfo) (string, string, error) {\n^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:34:1: cyclomatic complexity 22 of func `(*AwsSecurityHandler).CreateSecurity` is high (> 10) (gocyclo)\nfunc (securityHandler *AwsSecurityHandler) CreateSecurity(securityReqInfo irs.SecurityReqInfo) (irs.SecurityInfo, error) {\n^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:642:1: cyclomatic complexity 17 of func `(*AwsVMHandler).ExtractDescribeInstances` is high (> 10) (gocyclo)\nfunc (vmHandler *AwsVMHandler) ExtractDescribeInstances(reservation *ec2.Reservation) irs.VMInfo {\n^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:32:1: cyclomatic complexity 13 of func `(*AwsVPCHandler).CreateVPC` is high (> 10) (gocyclo)\nfunc (VPCHandler *AwsVPCHandler) CreateVPC(vpcReqInfo irs.VPCReqInfo) (irs.VPCInfo, error) {\n^\ncloud-info-manager/credential-info-manager/test/test.go:18:1: cyclomatic complexity 15 of func `main` is high (> 10) (gocyclo)\nfunc main() {\n^\napi-runtime/grpc-runtime/CBSpiderGRPCRuntime.go:88:1: cyclomatic complexity 16 of func `configLoad` is high (> 10) (gocyclo)\nfunc configLoad(cf string) (config.GrpcConfig, error) {\n^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:597:1: cyclomatic complexity 25 of func `handleVM` is high (> 10) (gocyclo)\nfunc handleVM() {\n^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:374:1: cyclomatic complexity 20 of func `handleVPC` is high (> 10) (gocyclo)\nfunc handleVPC() {\n^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:513:1: cyclomatic complexity 15 of func `handleImage` is high (> 10) (gocyclo)\nfunc handleImage() {\n^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:289:1: cyclomatic complexity 15 of func `handleKeyPair` is high (> 10) (gocyclo)\nfunc handleKeyPair() {\n^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:129:1: cyclomatic complexity 15 of func `handleSecurity` is high (> 10) (gocyclo)\nfunc handleSecurity() {\n^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:33:1: cyclomatic complexity 14 of func `handleVMSpec` is high (> 10) (gocyclo)\nfunc handleVMSpec() {\n^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:806:1: cyclomatic complexity 25 of func `handleVM` is high (> 10) (gocyclo)\nfunc handleVM() {\n^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:585:1: cyclomatic complexity 19 of func `handleVPC` is high (> 10) (gocyclo)\nfunc handleVPC() {\n^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:720:1: cyclomatic complexity 15 of func `handleImage` is high (> 10) (gocyclo)\nfunc handleImage() {\n^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:482:1: cyclomatic complexity 15 of func `handleKeyPair` is high (> 10) (gocyclo)\nfunc handleKeyPair() {\n^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:330:1: cyclomatic complexity 15 of func `handleSecurity` is high (> 10) (gocyclo)\nfunc handleSecurity() {\n^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:145:1: cyclomatic complexity 14 of func `handleVMSpec` is high (> 10) (gocyclo)\nfunc handleVMSpec() {\n^\ncloud-info-manager/region-info-manager/test/test.go:18:1: cyclomatic complexity 11 of func `main` is high (> 10) (gocyclo)\nfunc main() {\n^\ncloud-info-manager/driver-info-manager/test/test.go:17:1: cyclomatic complexity 11 of func `main` is high (> 10) (gocyclo)\nfunc main() {\n^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:54:1: cyclomatic complexity 13 of func `(*AzureDriver).ConnectCloud` is high (> 10) (gocyclo)\nfunc (driver *AzureDriver) ConnectCloud(connectionInfo idrv.ConnectionInfo) (icon.CloudConnection, error) {\n^\ntest/interface-test/cli-scenario/cobra_call.go:16:1: cyclomatic complexity 13 of func `SpiderCmdTest` is high (> 10) (gocyclo)\nfunc SpiderCmdTest(t *testing.T, tc TestCases) (string, error) {\n^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:39:1: cyclomatic complexity 17 of func `handlePublicIP` is high (> 10) (gocyclo)\nfunc handlePublicIP() {\n^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:247:1: cyclomatic complexity 15 of func `handleImage` is high (> 10) (gocyclo)\nfunc handleImage() {\n^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:147:1: cyclomatic complexity 13 of func `handleVMSpec` is high (> 10) (gocyclo)\nfunc handleVMSpec() {\n^\ninterface/cli/spider/cmd/gclient.go:46:1: cyclomatic complexity 90 of func `SetupAndRun` is high (> 10) (gocyclo)\nfunc SetupAndRun(cmd *cobra.Command, args []string) {\n^\napi-runtime/grpc-runtime/common/cbmessage.go:54:1: cyclomatic complexity 19 of func `ConvertToOutput` is high (> 10) (gocyclo)\nfunc ConvertToOutput(outType string, obj interface{}) (string, error) {\n^\napi-runtime/grpc-runtime/common/cbserver.go:54:1: cyclomatic complexity 12 of func `NewCBServer` is high (> 10) (gocyclo)\nfunc NewCBServer(gConf *config.GrpcServerConfig) (*CBServer, io.Closer, error) {\n^\ninterface/cli/cbadm/proc/connectinfos.go:74:1: cyclomatic complexity 13 of func `ListConnectInfos` is high (> 10) (gocyclo)\nfunc ListConnectInfos(cim *api.CIMApi) (string, error) {\n^\ninterface/cli/cbadm/proc/connectinfos.go:161:1: cyclomatic complexity 11 of func `GetConnectInfos` is high (> 10) (gocyclo)\nfunc GetConnectInfos(cim *api.CIMApi, configName string) (string, error) {\n^\ntest/interface-test/go-scenario/method_call.go:32:1: cyclomatic complexity 13 of func `MethodTest` is high (> 10) (gocyclo)\nfunc MethodTest(t *testing.T, tc TestCases) (string, error) {\n^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:1064:1: cyclomatic complexity 12 of func `VM` is high (> 10) (gocyclo)\nfunc VM(c echo.Context) error {\n^\ninterface/api/cim.go:159:1: cyclomatic complexity 14 of func `(*CIMApi).SetConfigPath` is high (> 10) (gocyclo)\nfunc (cim *CIMApi) SetConfigPath(configFile string) error {\n^\ninterface/api/ccm.go:223:1: cyclomatic complexity 14 of func `(*CCMApi).SetConfigPath` is high (> 10) (gocyclo)\nfunc (ccm *CCMApi) SetConfigPath(configFile string) error {\n^\ntest/interface-test/rest-scenario/echo_call.go:113:1: cyclomatic complexity 21 of func `EchoTest` is high (> 10) (gocyclo)\nfunc EchoTest(t *testing.T, tc TestCases) (string, error) {\n^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMHandler.go:35:1: cyclomatic complexity 13 of func `(*MockVMHandler).StartVM` is high (> 10) (gocyclo)\nfunc (vmHandler *MockVMHandler) StartVM(vmReqInfo irs.VMReqInfo) (irs.VMInfo, error) {\n^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:50:1: cyclomatic complexity 13 of func `(*AzureDriver).ConnectCloud` is high (> 10) (gocyclo)\nfunc (driver *AzureDriver) ConnectCloud(connectionInfo idrv.ConnectionInfo) (icon.CloudConnection, error) {\n^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/Test_Vm.go:33:1: cyclomatic complexity 24 of func `handleVM` is high (> 10) (gocyclo)\nfunc handleVM() {\n^\nutils/import-drv-region-info/import-regions.go:55:1: cyclomatic complexity 12 of func `InsertRegionInfos` is high (> 10) (gocyclo)\nfunc InsertRegionInfos(resourceGroup string) ([]rim.RegionInfo) {\n^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:859:1: cyclomatic complexity 25 of func `handleVM` is high (> 10) (gocyclo)\nfunc handleVM() {\n^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:547:1: cyclomatic complexity 19 of func `handleVPC` is high (> 10) (gocyclo)\nfunc handleVPC() {\n^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:39:1: cyclomatic complexity 15 of func `handleSecurity` is high (> 10) (gocyclo)\nfunc handleSecurity() {\n^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:683:1: cyclomatic complexity 15 of func `handleImage` is high (> 10) (gocyclo)\nfunc handleImage() {\n^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:379:1: cyclomatic complexity 14 of func `handleKeyPair` is high (> 10) (gocyclo)\nfunc handleKeyPair() {\n^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:1018:1: cyclomatic complexity 14 of func `handleVMSpec` is high (> 10) (gocyclo)\nfunc handleVMSpec() {\n^\napi-runtime/common-runtime/CCMCommon.go:1686:1: cyclomatic complexity 50 of func `ListAllResource` is high (> 10) (gocyclo)\nfunc ListAllResource(connectionName string, rsType string) (AllResourceList, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:1888:1: cyclomatic complexity 47 of func `DeleteResource` is high (> 10) (gocyclo)\nfunc DeleteResource(connectionName string, rsType string, nameID string, force string) (bool, cres.VMStatus, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:2095:1: cyclomatic complexity 23 of func `DeleteCSPResource` is high (> 10) (gocyclo)\nfunc DeleteCSPResource(connectionName string, rsType string, systemID string) (bool, cres.VMStatus, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:561:1: cyclomatic complexity 16 of func `ListVPC` is high (> 10) (gocyclo)\nfunc ListVPC(connectionName string, rsType string) ([]*cres.VPCInfo, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:1337:1: cyclomatic complexity 16 of func `ListVM` is high (> 10) (gocyclo)\nfunc ListVM(connectionName string, rsType string) ([]*cres.VMInfo, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:473:1: cyclomatic complexity 14 of func `CreateVPC` is high (> 10) (gocyclo)\nfunc CreateVPC(connectionName string, rsType string, reqInfo cres.VPCReqInfo) (*cres.VPCInfo, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:861:1: cyclomatic complexity 13 of func `ListSecurity` is high (> 10) (gocyclo)\nfunc ListSecurity(connectionName string, rsType string) ([]*cres.SecurityInfo, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:1198:1: cyclomatic complexity 13 of func `StartVM` is high (> 10) (gocyclo)\nfunc StartVM(connectionName string, rsType string, reqInfo cres.VMReqInfo) (*cres.VMInfo, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:706:1: cyclomatic complexity 12 of func `AddSubnet` is high (> 10) (gocyclo)\nfunc AddSubnet(connectionName string, rsType string, vpcName string, reqInfo cres.SubnetInfo) (*cres.VPCInfo, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:1535:1: cyclomatic complexity 12 of func `ListVMStatus` is high (> 10) (gocyclo)\nfunc ListVMStatus(connectionName string, rsType string) ([]*cres.VMStatusInfo, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:1046:1: cyclomatic complexity 12 of func `ListKey` is high (> 10) (gocyclo)\nfunc ListKey(connectionName string, rsType string) ([]*cres.KeyPairInfo, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:154:1: cyclomatic complexity 12 of func `ListRegisterImage` is high (> 10) (gocyclo)\nfunc ListRegisterImage(connectionName string, rsType string) ([]*cres.ImageInfo, error) {\n^\napi-runtime/common-runtime/CCMCommon.go:781:1: cyclomatic complexity 11 of func `CreateSecurity` is high (> 10) (gocyclo)\nfunc CreateSecurity(connectionName string, rsType string, reqInfo cres.SecurityReqInfo) (*cres.SecurityInfo, error) {\n^\ncloud-control-manager/iid-manager/test/simple-test.go:18:1: cyclomatic complexity 15 of func `main` is high (> 10) (gocyclo)\nfunc main() {\n^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/RestClient.go:162:1: cyclomatic complexity 23 of func `(*RestClient).Request` is high (> 10) (gocyclo)\nfunc (client *RestClient) Request(method, url string, options RequestOpts) (*http.Response, error) {\n^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:537:1: cyclomatic complexity 14 of func `testVmSpecHandler` is high (> 10) (gocyclo)\nfunc testVmSpecHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:466:1: cyclomatic complexity 14 of func `testKeypairHandler` is high (> 10) (gocyclo)\nfunc testKeypairHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:381:1: cyclomatic complexity 14 of func `testVPCHandler` is high (> 10) (gocyclo)\nfunc testVPCHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:154:1: cyclomatic complexity 14 of func `testSecurityHandler` is high (> 10) (gocyclo)\nfunc testSecurityHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:668:1: cyclomatic complexity 12 of func `main` is high (> 10) (gocyclo)\nfunc main() {\n^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:23:1: cyclomatic complexity 12 of func `testImageHandler` is high (> 10) (gocyclo)\nfunc testImageHandler(config Config) {\n^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:445:1: cyclomatic complexity 17 of func `(*AzureVMHandler).mappingServerInfo` is high (> 10) (gocyclo)\nfunc (vmHandler *AzureVMHandler) mappingServerInfo(server compute.VirtualMachine) irs.VMInfo {\n^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:45:1: cyclomatic complexity 13 of func `(*AzureVMHandler).StartVM` is high (> 10) (gocyclo)\nfunc (vmHandler *AzureVMHandler) StartVM(vmReqInfo irs.VMReqInfo) (irs.VMInfo, error) {\n^\ncloud-control-manager/cloud-driver/drivers/azure/resources/ImageHandler.go:129:1: cyclomatic complexity 11 of func `(*AzureImageHandler).ListImage` is high (> 10) (gocyclo)\nfunc (imageHandler *AzureImageHandler) ListImage() ([]*irs.ImageInfo, error) {\n^\ninterface/api/test/test_api.go:130:1: cyclomatic complexity 12 of func `DocTypeCIMApiTest` is high (> 10) (gocyclo)\nfunc DocTypeCIMApiTest() {\n^\ninterface/cli/cbadm/cmd/gclient.go:47:1: cyclomatic complexity 30 of func `SetupAndRun` is high (> 10) (gocyclo)\nfunc SetupAndRun(cmd *cobra.Command, args []string) {\n^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:509:1: cyclomatic complexity 19 of func `(*OpenStackVMHandler).mappingServerInfo` is high (> 10) (gocyclo)\nfunc (vmHandler *OpenStackVMHandler) mappingServerInfo(server servers.Server) irs.VMInfo {\n^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:47:1: cyclomatic complexity 15 of func `(*OpenStackVMHandler).StartVM` is high (> 10) (gocyclo)\nfunc (vmHandler *OpenStackVMHandler) StartVM(vmReqInfo irs.VMReqInfo) (irs.VMInfo, error) {\n^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:78:1: cyclomatic complexity 11 of func `(*OpenStackVPCHandler).CreateVPC` is high (> 10) (gocyclo)\nfunc (vpcHandler *OpenStackVPCHandler) CreateVPC(vpcReqInfo irs.VPCReqInfo) (irs.VPCInfo, error) {\n^\n"},"golint":{"run":1,"cnt":629,"details":"cloud-control-manager/cloud-driver/call-log/gen4test/gen_calllog.go:67:7: NCPVPC not declared by package calllog (typecheck)\n\tcall.NCPVPC,\n\t     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/t.go:10:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:333:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:47:34: PublicIPHandler not declared by package resources (typecheck)\n\thandler := ResourceHandler.(irs.PublicIPHandler)\n\t                                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:102:20: PublicIPReqInfo not declared by package resources (typecheck)\n\t\t\t\treqInfo := irs.PublicIPReqInfo{Name: \"mcloud-barista-eip-test\"}\n\t\t\t\t               ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:259:3: unknown field `Id` in struct literal (typecheck)\n\t\tId:   \"ami-047f7b46bd6dd5d84\",\n\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:260:3: unknown field `Name` in struct literal (typecheck)\n\t\tName: \"Test OS Image\",\n\t\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:20:5: `cblogger` redeclared in this block (typecheck)\nvar cblogger *logrus.Logger\n    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:16:5: other declaration of cblogger (typecheck)\nvar cblogger *logrus.Logger\n    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:181:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:605:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:185:6: `Config` redeclared in this block (typecheck)\ntype Config struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:650:6: other declaration of Config (typecheck)\ntype Config struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_VM.go:212:6: `readConfigFile` redeclared in this block (typecheck)\nfunc readConfigFile() Config {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/main/Test_Resources.go:684:6: other declaration of readConfigFile (typecheck)\nfunc readConfigFile() Config {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:713:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/Test_Vm.go:210:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/key.go:18:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/parallel-test.go:23:5: `count` redeclared in this block (typecheck)\nvar count = 100\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:19:5: other declaration of count (typecheck)\nvar count = 10\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:24:5: `iidRWLock` redeclared in this block (typecheck)\nvar iidRWLock = new(iidm.IIDRWLOCK)\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:20:5: other declaration of iidRWLock (typecheck)\nvar iidRWLock = new(iidm.IIDRWLOCK)\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:27:5: `cName` redeclared in this block (typecheck)\nvar cName = \"aws-seoul-config\"\t\t// Connection Name\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:21:5: other declaration of cName (typecheck)\nvar cName = \"aws-seoul-config\"\t\t// Connection Name\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:28:5: `rName` redeclared in this block (typecheck)\nvar rName = \"VM\"\t\t\t// Resource Type\n    ^\ncloud-control-manager/iid-manager/test/list-loop.go:22:5: other declaration of rName (typecheck)\nvar rName = \"VM\"\t\t\t// Resource Type\n    ^\ncloud-control-manager/iid-manager/test/parallel-test.go:31:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/list-loop.go:24:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/iid-manager/test/parallel-test.go:111:6: `list` redeclared in this block (typecheck)\nfunc list() {\n     ^\ncloud-control-manager/iid-manager/test/list-loop.go:36:6: other declaration of list (typecheck)\nfunc list() {\n     ^\ncloud-control-manager/iid-manager/test/simple-test.go:18:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshcopy-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshcopy-keypath-test.go:14:6: other declaration of main (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshrun-keypath-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\ncloud-control-manager/vm-ssh/test/sshrun-test.go:14:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-regions.go:27:5: `cblog` redeclared in this block (typecheck)\nvar cblog *logrus.Logger\n    ^\nutils/import-drv-region-info/import-drivers.go:22:5: other declaration of cblog (typecheck)\nvar cblog *logrus.Logger\n    ^\nutils/import-drv-region-info/import-regions.go:33:6: `main` redeclared in this block (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-drivers.go:30:6: other declaration of main (typecheck)\nfunc main() {\n     ^\nutils/import-drv-region-info/import-drivers.go:44:17: undeclared name: `Cblogger` (typecheck)\n                Cblogger.Error(\"$CBSPIDER_ROOT is not set!!\")\n                ^\ncloud-control-manager/cloud-driver/drivers/ibmcloud-vpc/IBMCloudDriver.go:1:1: don't use an underscore in package name (golint)\npackage ibmcloud_vpc\n^\ncloud-control-manager/cloud-driver/interfaces/resources/IId.go:15:9: struct field `NameId` should be `NameID` (golint)\n        NameId     string // NameID by user\n        ^\ncloud-control-manager/cloud-driver/interfaces/resources/IId.go:16:9: struct field `SystemId` should be `SystemID` (golint)\n        SystemId   string // SystemID by CloudOS\n        ^\ncloud-control-manager/cloud-driver/interfaces/resources/VMHandler.go:29:2: struct field `VMUserId` should be `VMUserID` (golint)\n\tVMUserId     string\n\t^\ncloud-control-manager/cloud-driver/interfaces/resources/VMHandler.go:35:2: struct field `VmStatus` should be `VMStatus` (golint)\n\tVmStatus VMStatus\n\t^\ncloud-control-manager/cloud-driver/interfaces/resources/VMHandler.go:76:2: struct field `VMUserId` should be `VMUserID` (golint)\n\tVMUserId     string // ex) user1\n\t^\ncloud-control-manager/cloud-driver/interfaces/resources/VPCHandler.go:17:2: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (golint)\n\tIPv4_CIDR string \n\t^\ncloud-control-manager/cloud-driver/interfaces/resources/VPCHandler.go:23:2: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (golint)\n\tIPv4_CIDR string \n\t^\ncloud-control-manager/cloud-driver/interfaces/resources/VPCHandler.go:31:2: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (golint)\n\tIPv4_CIDR string \n\t^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:18:2: don't use ALL_CAPS in Go names; use CamelCase (golint)\n\tFIXED_SUBNET_CIDR bool // support: true, do not support: false\n\t^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:19:2: don't use ALL_CAPS in Go names; use CamelCase (golint)\n\tVPC_CIDR          bool // support: true, do not support: false\n\t^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:34:2: struct field `ClientId` should be `ClientID` (golint)\n\tClientId         string // Azure Credential\n\t^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:36:2: struct field `TenantId` should be `TenantID` (golint)\n\tTenantId         string // Azure Credential\n\t^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:37:2: struct field `SubscriptionId` should be `SubscriptionID` (golint)\n\tSubscriptionId   string // Azure Credential\n\t^\ncloud-control-manager/cloud-driver/interfaces/CloudDriver.go:49:2: struct field `ApiKey` should be `APIKey` (golint)\n\tApiKey\t\t\t string // Ibm\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/resources/ImageHandler.go:104:37: error strings should not be capitalized or end with punctuation or a newline (golint)\n\treturn irs.ImageInfo{}, fmt.Errorf(\"%s image does not exist!!\", imageIID.NameId)\n\t                                   ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/KeyPairHandler.go:18:2: a blank import should be only in a main or test package, or have a comment justifying it (golint)\n\t_ \"github.com/sirupsen/logrus\"\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/resources/KeyPairHandler.go:84:39: error strings should not be capitalized or end with punctuation or a newline (golint)\n\treturn irs.KeyPairInfo{}, fmt.Errorf(\"%s keypair does not exist!!\", iid.NameId)\n\t                                     ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/SecurityHandler.go:119:40: error strings should not be capitalized or end with punctuation or a newline (golint)\n\treturn irs.SecurityInfo{}, fmt.Errorf(\"%s SecurityGroup does not exist!!\", iid.NameId)\n\t                                      ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VMSpecHandler.go:89:38: error strings should not be capitalized or end with punctuation or a newline (golint)\n\treturn irs.VMSpecInfo{}, fmt.Errorf(\"%s VMSpec does not exist!!\", Name)\n\t                                    ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VPCHandler.go:18:2: a blank import should be only in a main or test package, or have a comment justifying it (golint)\n\t_ \"github.com/sirupsen/logrus\"\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VPCHandler.go:93:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n\treturn irs.VPCInfo{}, fmt.Errorf(\"%s VPCGroup does not exist!!\", iid.NameId)\n\t                                 ^\ncloud-control-manager/cloud-driver/drivers/mock/resources/VPCHandler.go:135:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n\treturn irs.VPCInfo{}, fmt.Errorf(\"%s VPCGroup does not exist!!\", iid.NameId)\n\t                                 ^\ncloud-info-manager/CloudOSList.go:10:2: a blank import should be only in a main or test package, or have a comment justifying it (golint)\n\t_ \"fmt\"\n\t^\ncloud-info-manager/CloudOSList.go:24:6: type name will be used as cloudos.CloudOSList by other packages, and that stutters; consider calling this List (golint)\ntype CloudOSList struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/mock/MockDriver.go:25:6: type name will be used as mock.MockDriver by other packages, and that stutters; consider calling this Driver (golint)\ntype MockDriver struct{}\n     ^\ncloud-control-manager/vm-ssh/sshrun.go:145:6: func name will be used as sshrun.SSHRunByKeyPath by other packages, and that stutters; consider calling this ByKeyPath (golint)\nfunc SSHRunByKeyPath(sshInfo SSHKeyPathInfo, cmd string) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/mock/test/image_test.go:34:7: don't use ALL_CAPS in Go names; use CamelCase (golint)\nconst BUILTIN_IMG_NUM int = 5\n      ^\ncloud-control-manager/cloud-driver/drivers/mock/test/keypair_test.go:36:2: struct field `Id` should be `ID` (golint)\n\tId string\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:111:2: don't use underscores in Go names; var `true_num` should be `trueNum` (golint)\n\ttrue_num := 3\n\t^\ncloud-control-manager/cloud-driver/drivers/mock/test/vpc_test.go:137:2: don't use underscores in Go names; var `true_num` should be `trueNum` (golint)\n\ttrue_num := 1\n\t^\ncloud-control-manager/cloud-driver/call-log/calllogger.go:30:6: don't use ALL_CAPS in Go names; use CamelCase (golint)\ntype CLOUD_OS string\n     ^\ncloud-control-manager/cloud-driver/call-log/calllogger.go:31:6: don't use ALL_CAPS in Go names; use CamelCase (golint)\ntype RES_TYPE string\n     ^\ncloud-control-manager/cloud-driver/call-log/config.go:27:6: type name will be used as calllog.CALLLOGCONFIG by other packages, and that stutters; consider calling this CONFIG (golint)\ntype CALLLOGCONFIG struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet/Request.go:25:6: type name will be used as subnet.SubnetInfo by other packages, and that stutters; consider calling this Info (golint)\ntype SubnetInfo struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet/Request.go:27:2: struct field `TenantId` should be `TenantID` (golint)\n\tTenantId    string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet/Request.go:73:41: func parameter `subnetId` should be `subnetID` (golint)\nfunc Get(restClient *client.RestClient, subnetId string, requestOpts *client.RequestOpts) (*SubnetInfo, error) {\n                                        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:16:6: type name will be used as image.ImageReqInfo by other packages, and that stutters; consider calling this ReqInfo (golint)\ntype ImageReqInfo struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:18:2: struct field `VolumeId` should be `VolumeID` (golint)\n\tVolumeId     string `json:\"volumeId\" required:\"true\"`   // 정지된 서버 볼륨을 기준으로 이미지 템플릿 생성\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:19:2: struct field `SnapshotId` should be `SnapshotID` (golint)\n\tSnapshotId   string `json:\"snapshotId\" required:\"true\"` // 서버 스냅샷을 기준으로 이미지 템플릿 생성\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:25:2: struct field `PoolId` should be `PoolID` (golint)\n\tPoolId       string `json:\"poolId\" required:\"false\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:29:6: type name will be used as image.ImageInfo by other packages, and that stutters; consider calling this Info (golint)\ntype ImageInfo struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:53:2: struct field `Url` should be `URL` (golint)\n\tUrl           string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:75:41: func parameter `templateId` should be `templateID` (golint)\nfunc Get(restClient *client.RestClient, templateId string, requestOpts *client.RequestOpts) (*ImageInfo, error) {\n                                        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image/Request.go:107:44: func parameter `templateId` should be `templateID` (golint)\nfunc Delete(restClient *client.RestClient, templateId string, requestOpts *client.RequestOpts) error {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:22:6: type name will be used as securitygroup.SecurityGroupRules by other packages, and that stutters; consider calling this Rules (golint)\ntype SecurityGroupRules struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:34:6: type name will be used as securitygroup.SecurityGroupInfo by other packages, and that stutters; consider calling this Info (golint)\ntype SecurityGroupInfo struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:64:46: func parameter `securitygroupId` should be `securitygroupID` (golint)\nfunc ListRule(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts) (*[]SecurityGroupRules, error) {\n                                             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:80:41: func parameter `securitygroupId` should be `securitygroupID` (golint)\nfunc Get(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts) (*SecurityGroupInfo, error) {\n                                        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:112:44: func parameter `securitygroupId` should be `securitygroupID` (golint)\nfunc Delete(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts) error {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:123:51: func parameter `securitygroupId` should be `securitygroupID` (golint)\nfunc ListRulesinSG(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts) (*[]SecurityGroupRules, error) {\n                                                  ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:139:45: func parameter `securitygroupId` should be `securitygroupID` (golint)\nfunc AddRule(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts, rule string) (*SecurityGroupRules, error) {\n                                            ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup/Request.go:155:48: func parameter `securitygroupId` should be `securitygroupID` (golint)\nfunc DeleteRule(restClient *client.RestClient, securitygroupId string, requestOpts *client.RequestOpts, ruleID string) error {\n                                               ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip/Request.go:32:6: type name will be used as adaptiveip.AdaptiveIPInfo by other packages, and that stutters; consider calling this Info (golint)\ntype AdaptiveIPInfo struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip/Request.go:37:2: struct field `TenantId` should be `TenantID` (golint)\n\tTenantId    string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip/Request.go:41:2: struct field `PrivateIp` should be `PrivateIP` (golint)\n\tPrivateIp   string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip/Request.go:44:2: struct field `VmName` should be `VMName` (golint)\n\tVmName      string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs/Request.go:17:2: struct field `Id` should be `ID` (golint)\n\tId      string `json:\"id\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs/Request.go:19:2: struct field `Cpu` should be `CPU` (golint)\n\tCpu     int    `json:\"cpu\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:18:2: struct field `Id` should be `ID` (golint)\n\tId string `json:\"id\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:22:2: struct field `TemplateId` should be `TemplateID` (golint)\n\tTemplateId   string         `json:\"templateId\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:23:2: struct field `SpecId` should be `SpecID` (golint)\n\tSpecId       string         `json:\"specId\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:33:6: type name will be used as server.ServerInfo by other packages, and that stutters; consider calling this Info (golint)\ntype ServerInfo struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:35:2: struct field `VmNicInfoList` should be `VMNicInfoList` (golint)\n\tVmNicInfoList  interface{}\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:47:2: struct field `AdaptiveIpMapInfo` should be `AdaptiveIPMapInfo` (golint)\n\tAdaptiveIpMapInfo []struct {\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:54:2: struct field `CpuNum` should be `CPUNum` (golint)\n\tCpuNum            float32\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:59:2: struct field `NodeIp` should be `NodeIP` (golint)\n\tNodeIp            string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:64:2: struct field `IsoId` should be `IsoID` (golint)\n\tIsoId             string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:73:2: struct field `VolumeId` should be `VolumeID` (golint)\n\tVolumeId          string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:78:2: struct field `SpecId` should be `SpecID` (golint)\n\tSpecId            string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:80:2: struct field `PoolId` should be `PoolID` (golint)\n\tPoolId            string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:84:2: struct field `MigrationIp` should be `MigrationIP` (golint)\n\tMigrationIp       string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:88:2: struct field `PrivateIp` should be `PrivateIP` (golint)\n\tPrivateIp         string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:89:2: struct field `AdaptiveIp` should be `AdaptiveIP` (golint)\n\tAdaptiveIp        string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:91:2: struct field `ClusterId` should be `ClusterID` (golint)\n\tClusterId         string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:95:2: struct field `Ip` should be `IP` (golint)\n\tIp                string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:97:2: struct field `DeviceId` should be `DeviceID` (golint)\n\tDeviceId          string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:100:2: struct field `GpuId` should be `GpuID` (golint)\n\tGpuId             string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:106:2: struct field `SshKeyName` should be `SSHKeyName` (golint)\n\tSshKeyName        string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:107:2: struct field `SshPublicKey` should be `SSHPublicKey` (golint)\n\tSshPublicKey      string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server/Request.go:110:2: struct field `VmStatInfo` should be `VMStatInfo` (golint)\n\tVmStatInfo        string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:19:2: struct field `VmId` should be `VMID` (golint)\n\tVmId       string                             `json:\"vmId\" required:\"true\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:25:6: type `VmNicInfo` should be `VMNicInfo` (golint)\ntype VmNicInfo struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:26:2: struct field `TenantId` should be `TenantID` (golint)\n\tTenantId        string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:27:2: struct field `VmId` should be `VMID` (golint)\n\tVmId            string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:31:2: struct field `Ip` should be `IP` (golint)\n\tIp              string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:35:2: struct field `VmName` should be `VMName` (golint)\n\tVmName          string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:37:2: struct field `AdaptiveIp` should be `AdaptiveIP` (golint)\n\tAdaptiveIp      string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:41:2: struct field `CpuNum` should be `CPUNum` (golint)\n\tCpuNum          string\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:50:2: struct field `Id` should be `ID` (golint)\n\tId         string `json:\"secgroup_id\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:52:2: struct field `TenantId` should be `TenantID` (golint)\n\tTenantId   string `json:\"tenant_id\"`\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:58:42: func parameter `serverId` should be `serverID` (golint)\nfunc List(restClient *client.RestClient, serverId string, requestOpts *client.RequestOpts) (*[]VmNicInfo, error) {\n                                         ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:74:41: func parameter `serverId` should be `serverID` (golint)\nfunc Get(restClient *client.RestClient, serverId string, macAddr string, requestOpts *client.RequestOpts) (*VmNicInfo, error) {\n                                        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:90:44: func parameter `serverId` should be `serverID` (golint)\nfunc Create(restClient *client.RestClient, serverId string, requestOpts *client.RequestOpts) (*VmNicInfo, error) {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:101:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:106:44: func parameter `serverId` should be `serverID` (golint)\nfunc Delete(restClient *client.RestClient, serverId string, macAddr string, requestOpts *client.RequestOpts) error {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic/Request.go:117:41: func parameter `serverId` should be `serverID` (golint)\nfunc Put(restClient *client.RestClient, serverId string, requestOpts *client.RequestOpts, nicMac string) {\n                                        ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/CommonClouditFunc.go:93:75: func parameter `vmId` should be `vmID` (golint)\nfunc ListVNic(authHeader map[string]string, reqClient *client.RestClient, vmId string) (*[]nic.VmNicInfo, error) {\n                                                                          ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/CommonClouditFunc.go:131:19: func parameter `serverIp` should be `serverIP` (golint)\nfunc GetSSHClient(serverIp string, serverPort int, username string, password string) (scp.Client, error) {\n                  ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/CommonClouditFunc.go:141:17: func parameter `serverIp` should be `serverIP` (golint)\nfunc RunCommand(serverIp string, serverPort int, username string, password string, command string) (string, error) {\n                ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/ImageHandler.go:157:10: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\terr := errors.New(fmt.Sprintf(\"failed to find image with name %s\", imageName))\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/SecurityHandler.go:70:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"SecurityGroup with name %s already exist\", securityReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/SecurityHandler.go:246:10: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\terr := errors.New(fmt.Sprintf(\"failed to find security group with name %s\", securityName))\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:51:2: var `vmId` should be `vmID` (golint)\n\tvmId, _ := vmHandler.getVmIdByName(vmReqInfo.IId.NameId)\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:53:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"VirtualMachine with name %s already exist\", vmReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:65:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to get image, err : %s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:77:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to get virtual network, err : %s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:112:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to add extra inbound rule to SG, err : %s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:119:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to add extra outbound rule to SG, err : %s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:125:2: var `vmSpecId` should be `vmSpecID` (golint)\n\tvmSpecId, err := GetVMSpecByName(vmHandler.Client.AuthenticatedHeaders(), vmHandler.Client, vmReqInfo.VMSpecName)\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:127:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to get vm spec, err : %s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:152:2: var `creatingVm` should be `creatingVM` (golint)\n\tcreatingVm, err := server.Start(vmHandler.Client, &requestOpts)\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:182:25: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\t\treturn irs.VMInfo{}, errors.New(fmt.Sprintf(\"failed to start vm, exceeded maximum retry count %d\", maxRetryCnt))\n\t\t\t                     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:194:2: var `loginUserId` should be `loginUserID` (golint)\n\tloginUserId := SSHDefaultUser\n\t^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:274:17: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\t\tdeleteErr := errors.New(fmt.Sprintf(\"failed to delete extra rules, err : %s\", err.Error()))\n\t\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:524:69: method parameter `vmIp` should be `vmIP` (golint)\nfunc (vmHandler *ClouditVMHandler) AssociatePublicIP(vmName string, vmIp string) (bool, error) {\n                                                                    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:536:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:538:19: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\t\tallocateErr := errors.New(fmt.Sprintf(\"There is no PublicIPs to allocate\"))\n\t\t\t               ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:540:10: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t\t} else {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:576:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:646:36: method getVmIdByName should be getVMIDByName (golint)\nfunc (vmHandler *ClouditVMHandler) getVmIdByName(vmNameID string) (string, error) {\n                                   ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:647:6: var `vmId` should be `vmID` (golint)\n\tvar vmId string\n\t    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:665:10: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\terr := errors.New(fmt.Sprintf(\"failed to find vm with name %s\", vmNameID))\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMHandler.go:671:6: func getVmStatus should be getVMStatus (golint)\nfunc getVmStatus(vmStatus string) irs.VMStatus {\n     ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMSpecHandler.go:62:15: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tgetError := errors.New(fmt.Sprintf(\"failed to get VM spec list, err : %s\", err.Error()))\n\t\t            ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMSpecHandler.go:82:18: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tnotFoundErr := errors.New(fmt.Sprintf(\"failed to get VM spec, err : %s\", err.Error()))\n\t\t               ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMSpecHandler.go:105:13: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tgetErr := errors.New(fmt.Sprintf(\"failed to get VM spec list, err : %s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMSpecHandler.go:133:18: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tnotFoundErr := errors.New(fmt.Sprintf(\"failed to get VM spec, err : %s\", err.Error()))\n\t\t               ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VMSpecHandler.go:172:10: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\terr := errors.New(fmt.Sprintf(\"failed to find vmSpec with name %s\", specName))\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:163:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:167:10: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t\t} else {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:259:10: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\terr := errors.New(fmt.Sprintf(\"failed to find subnet with name %s\", subnetName))\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:271:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"virtualNetwork with name %s already exist\", subnetInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:288:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/VPCHandler.go:293:10: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t\t} else {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:80:13: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get vpc list, err=%s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:85:14: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\treturn \"\", errors.New(fmt.Sprintf(\"Failed to get vpc list, external vpc not exist\"))\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:97:6: func GetCBVNetId should be GetCBVNetID (golint)\nfunc GetCBVNetId(client *gophercloud.ServiceClient) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:102:6: var `vNetworkId` should be `vNetworkID` (golint)\n\tvar vNetworkId string\n\t    ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:135:13: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\treturn \"\", errors.New(fmt.Sprintf(\"could not found Flavor with name %s \", flavorName))\n\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:153:14: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\treturn nil, errors.New(fmt.Sprintf(\"could not found SecurityGroups with name %s \", securityName))\n\t            ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:171:14: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\treturn nil, errors.New(fmt.Sprintf(\"could not found SecurityGroups with name %s \", networkName))\n\t            ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:174:62: func parameter `subnetId` should be `subnetID` (golint)\nfunc GetSubnetByID(networkClient *gophercloud.ServiceClient, subnetId string) (*subnets.Subnet, error) {\n                                                             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:197:14: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\treturn nil, errors.New(fmt.Sprintf(\"could not found SecurityGroups with name %s \", deviceID))\n\t            ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/ImageHandler.go:77:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Image files in path %s not exist\", imageFilePath))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/ImageHandler.go:148:2: var `imageId` should be `imageID` (golint)\n\timageId, err := imageHandler.IDFromName(imageHandler.Client, imageIID.NameId)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/ImageHandler.go:169:2: var `imageId` should be `imageID` (golint)\n\timageId, err := imageHandler.IDFromName(imageHandler.Client, imageIID.NameId)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/ImageHandler.go:195:14: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\treturn \"\", errors.New(fmt.Sprintf(\"found multiple images with name %s\", imageName))\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/ImageHandler.go:197:14: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\treturn \"\", errors.New(fmt.Sprintf(\"could not found image with name %s\", imageName))\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/SecurityHandler.go:92:17: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\t\tcreateErr := errors.New(fmt.Sprintf(\"Security Group with name %s already exist\", securityReqInfo.IId.NameId))\n\t\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:54:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to get vm with name %s\", vmReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:60:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to extract vm information with name %s\", vmReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:65:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"VirtualMachine with name %s already exist\", vmReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:133:2: var `vmSpecId` should be `vmSpecID` (golint)\n\tvmSpecId, err := GetFlavorByName(vmHandler.Client, vmReqInfo.VMSpecName)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:151:2: var `sgIdArr` should be `sgIDArr` (golint)\n\tsgIdArr := make([]string, len(vmReqInfo.SecurityGroupIIDs))\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:221:25: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\t\treturn irs.VMInfo{}, errors.New(fmt.Sprintf(\"failed to start vm, exceeded maximum retry count %d\", maxRetryCnt))\n\t\t\t                     ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:484:18: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\t\treturn false, errors.New(fmt.Sprintf(\"failed to associate floating ip to vm, exceeded maximum retry count %d\", maxRetryCnt))\n\t\t\t              ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:491:6: func getVmStatus should be getVMStatus (golint)\nfunc getVmStatus(vmStatus string) irs.VMStatus {\n     ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:537:3: var `imageId` should be `imageID` (golint)\n\t\timageId := server.Image[\"id\"].(string)\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:548:2: var `flavorId` should be `flavorID` (golint)\n\tflavorId := server.Flavor[\"id\"].(string)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:556:3: var `securityGroupIdArr` should be `securityGroupIDArr` (golint)\n\t\tsecurityGroupIdArr := make([]irs.IID, len(server.SecurityGroups))\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMSpecHandler.go:66:2: var `vmSpecId` should be `vmSpecID` (golint)\n\tvmSpecId, err := vmSpecHandler.getIDFromName(vmSpecHandler.Client, Name)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMSpecHandler.go:121:2: var `vmSpecId` should be `vmSpecID` (golint)\n\tvmSpecId, err := vmSpecHandler.getIDFromName(vmSpecHandler.Client, Name)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMSpecHandler.go:164:14: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\treturn \"\", errors.New(fmt.Sprintf(\"found multiple images with name %s\", imageName))\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMSpecHandler.go:166:14: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\treturn \"\", errors.New(fmt.Sprintf(\"could not found image with name %s\", imageName))\n\t\t           ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:54:9: range var `subnetId` should be `subnetID` (golint)\n\tfor i, subnetId := range nvpc.Subnets {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:95:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"VPC with name %s already exist\", vpcReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:129:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to get vpc with Id %s, err=%s\", vpc.ID, err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:136:2: var `routerId` should be `routerID` (golint)\n\trouterId, err := vpcHandler.CreateRouter(vpcReqInfo.IId.NameId)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:138:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to get create router, err=%s\", err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:147:17: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to get create router interface, err=%s\", err.Error()))\n\t\t\t             ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:166:13: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get vpc list, err=%s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:175:13: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get vpc list, err=%s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:197:13: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get vpc with Id %s, err=%s\", vpcIID.SystemId, err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:213:13: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get vpc with Id %s, err=%s\", vpcIID.SystemId, err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:220:2: var `routerId` should be `routerID` (golint)\n\trouterId, err := vpcHandler.GetRouter(vpcIID.NameId)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:222:13: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get router, err=%s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:228:14: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to delete router interface, err=%s\", err.Error()))\n\t\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:239:14: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to delete router, err=%s\", err.Error()))\n\t\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:259:13: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to delete vpc, err=%s\", err.Error()))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:268:53: method parameter `vpcId` should be `vpcID` (golint)\nfunc (vpcHandler *OpenStackVPCHandler) CreateSubnet(vpcId string, reqSubnetInfo irs.SubnetInfo) (irs.SubnetInfo, error) {\n                                                    ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:342:2: var `routerId` should be `routerID` (golint)\n\trouterId := routerList[0].ID\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:348:2: var `routerId` should be `routerID` (golint)\n\trouterId, err := vpcHandler.GetRouter(vpcName)\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:362:53: method parameter `subnetId` should be `subnetID` (golint)\nfunc (vpcHandler *OpenStackVPCHandler) AddInterface(subnetId string, routerId string) (bool, error) {\n                                                    ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:375:56: method parameter `subnetId` should be `subnetID` (golint)\nfunc (vpcHandler *OpenStackVPCHandler) DeleteInterface(subnetId string, routerId string) (bool, error) {\n                                                       ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VPCHandler.go:403:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to create Subnet with name %s, err=%s\", subnetCreateOpts.Name, err.Error()))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/CommonAzureFunc.go:137:6: func GetVNicIdByName should be GetVNicIDByName (golint)\nfunc GetVNicIdByName(credentialInfo idrv.CredentialInfo, regionInfo idrv.RegionInfo, vNicName string) string {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/CommonAzureFunc.go:145:6: func GetSecGroupIdByName should be GetSecGroupIDByName (golint)\nfunc GetSecGroupIdByName(credentialInfo idrv.CredentialInfo, regionInfo idrv.RegionInfo, secGroupName string) string {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/ImageHandler.go:44:2: var `imageIdArr` should be `imageIDArr` (golint)\n\timageIdArr := strings.Split(*image.ID, \"/\")\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/ImageHandler.go:59:2: var `imageIdArr` should be `imageIDArr` (golint)\n\timageIdArr := strings.Split(*image.ID, \"/\")\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/ImageHandler.go:78:3: struct field `DiskId` should be `DiskID` (golint)\n\t\tDiskId string\n\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/ImageHandler.go:168:7: var `imageIdArr` should be `imageIDArr` (golint)\n\t\t\t\t\t\timageIdArr := strings.Split(*version.ID, \"/\")\n\t\t\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/SecurityHandler.go:80:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Security Group with name %s already exist\", securityReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:52:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"virtualMachine with name %s already exist\", vmReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:338:4: var `vmIdArr` should be `vmIDArr` (golint)\n\t\t\tvmIdArr := strings.Split(*s.ID, \"/\")\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:409:6: func getVmStatus should be getVMStatus (golint)\nfunc getVmStatus(instanceView compute.VirtualMachineInstanceView) irs.VMStatus {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:476:6: var `VNicId` should be `VNicID` (golint)\n\tvar VNicId string\n\t    ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:484:2: var `nicIdArr` should be `nicIDArr` (golint)\n\tnicIdArr := strings.Split(VNicId, \"/\")\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:490:2: var `sgGroupIdArr` should be `sgGroupIDArr` (golint)\n\tsgGroupIdArr := strings.Split(*vNic.NetworkSecurityGroup.ID, \"/\")\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:516:4: var `subnetIdArr` should be `subnetIDArr` (golint)\n\t\t\tsubnetIdArr := strings.Split(*ip.InterfaceIPConfigurationPropertiesFormat.Subnet.ID, \"/\")\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:521:4: var `vpcIdArr` should be `vpcIDArr` (golint)\n\t\t\tvpcIdArr := subnetIdArr[:len(subnetIdArr)-2]\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:595:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to create PublicIP, error=%s\", err))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:600:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"Failed to create PublicIP, error=%s\", err))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:607:13: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tgetErr := errors.New(fmt.Sprintf(\"Failed to get PublicIP, error=%s\", err))\n\t\t          ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:653:2: var `secGroupId` should be `secGroupID` (golint)\n\tsecGroupId := GetSecGroupIdByName(vmHandler.CredentialInfo, vmHandler.Region, vmReqInfo.SecurityGroupIIDs[0].NameId)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMSpecHandler.go:21:6: type `AzureVmSpecHandler` should be `AzureVMSpecHandler` (golint)\ntype AzureVmSpecHandler struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMSpecHandler.go:27:6: func setterVmSpec should be setterVMSpec (golint)\nfunc setterVmSpec(region string, vmSpec compute.VirtualMachineSize) *irs.VMSpecInfo {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMSpecHandler.go:77:12: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\tgetErr := errors.New(fmt.Sprintf(\"failed to get VM spec, err : %s\", err))\n\t          ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMSpecHandler.go:124:15: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\t\t\tgetErr := errors.New(fmt.Sprintf(\"failed to get VM spec, err : %s\", err))\n\t\t\t\t          ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VPCHandler.go:65:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"vpc with name %s already exist\", vpcReqInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VPCHandler.go:184:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"vpc with name %s not exist\", vpcIID.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VPCHandler.go:196:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to create subnet with name %s\", subnetInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VPCHandler.go:202:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to create subnet with name %s\", subnetInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VPCHandler.go:208:16: should replace `errors.New(fmt.Sprintf(...))` with `fmt.Errorf(...)` (golint)\n\t\tcreateErr := errors.New(fmt.Sprintf(\"failed to create subnet with name %s\", subnetInfo.IId.NameId))\n\t\t             ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:33:2: const `CBDefaultVmUserName` should be `CBDefaultVMUserName` (golint)\n\tCBDefaultVmUserName = \"cb-user\"\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:63:2: struct field `VpcId` should be `VpcID` (golint)\n\tVpcId     string\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:69:2: struct field `SubnetId` should be `SubnetID` (golint)\n\tSubnetId   string\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:90:37: func parameter `resourceId` should be `resourceID` (golint)\nfunc SetNameTag(Client *ecs.Client, resourceId string, resourceType string, value string) bool {\n                                    ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:125:6: func ConvertJsonString should be ConvertJSONString (golint)\nfunc ConvertJsonString(v interface{}) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:126:13: var `errJson` should be `errJSON` (golint)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/CommonAlibabaFunc.go:171:13: var `errJson` should be `errJSON` (golint)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/SecurityHandler.go:80:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/SecurityHandler.go:93:71: method parameter `securityGroupId` should be `securityGroupID` (golint)\nfunc (securityHandler *AlibabaSecurityHandler) AuthorizeSecurityRules(securityGroupId string, vpcId string, securityRuleInfos *[]irs.SecurityRuleInfo) (*[]irs.SecurityRuleInfo, error) {\n                                                                      ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/SecurityHandler.go:281:72: method parameter `securityGroupId` should be `securityGroupID` (golint)\nfunc (securityHandler *AlibabaSecurityHandler) ExtractSecurityRuleInfo(securityGroupId string) ([]irs.SecurityRuleInfo, error) {\n                                                                       ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:118:9: range var `sgId` should be `sgID` (golint)\n\tfor _, sgId := range vmReqInfo.SecurityGroupIIDs {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:191:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.VMInfo{}, errors.New(\"No errors have occurred, but no VMs have been created.\")\n\t\t                                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:197:2: var `newVmIID` should be `newVMIID` (golint)\n\tnewVmIID := irs.IID{SystemId: response.InstanceIdSets.InstanceIdSet[0]}\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:210:10: var `errVmInfo` should be `errVMInfo` (golint)\n\tvmInfo, errVmInfo := vmHandler.GetVM(newVmIID)\n\t        ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:653:11: var `errVmInfo` should be `errVMInfo` (golint)\n\t\tvmInfo, errVmInfo := vmHandler.GetVM(irs.IID{SystemId: curInstance.InstanceId})\n\t\t        ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:722:44: error strings should not be capitalized or end with punctuation or a newline (golint)\n\treturn irs.VMStatus(\"Failed\"), errors.New(\"No status information found.\")\n\t                                          ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMHandler.go:823:3: var `curVmStatusInfo` should be `curVMStatusInfo` (golint)\n\t\tcurVmStatusInfo := irs.VMStatusInfo{IId: irs.IID{SystemId: vm.InstanceId}, VmStatus: vmStatus}\n\t\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMSpecHandler.go:17:6: type `AlibabaVmSpecHandler` should be `AlibabaVMSpecHandler` (golint)\ntype AlibabaVmSpecHandler struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMSpecHandler.go:33:2: var `vCpuInfo` should be `vCPUInfo` (golint)\n\tvCpuInfo := irs.VCpuInfo{\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMSpecHandler.go:218:14: var `errJson` should be `errJSON` (golint)\n\tjsonString, errJson := ConvertJsonString(resp.InstanceTypes)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VMSpecHandler.go:266:6: var `errJson` should be `errJSON` (golint)\n\tvar errJson error\n\t    ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VPCHandler.go:108:51: method parameter `vpcId` should be `vpcID` (golint)\nfunc (VPCHandler *AlibabaVPCHandler) CreateSubnet(vpcId string, reqSubnetInfo irs.SubnetInfo) (irs.SubnetInfo, error) {\n                                                  ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VPCHandler.go:229:49: method parameter `vpcId` should be `vpcID` (golint)\nfunc (VPCHandler *AlibabaVPCHandler) WaitForRun(vpcId string) error {\n                                                ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VPCHandler.go:262:23: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\t\t\treturn errors.New(\"Unknown VPC Status value.\")\n\t\t\t\t                  ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VPCHandler.go:437:48: method parameter `reqSubnetId` should be `reqSubnetID` (golint)\nfunc (VPCHandler *AlibabaVPCHandler) GetSubnet(reqSubnetId string) (irs.SubnetInfo, error) {\n                                               ^\ncloud-control-manager/cloud-driver/drivers/alibaba/resources/VPCHandler.go:476:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/cloudit/ClouditDriver.go:11:6: type name will be used as cloudit.ClouditDriver by other packages, and that stutters; consider calling this Driver (golint)\ntype ClouditDriver struct{}\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/connect/Azure_CloudConnection.go:45:2: struct field `VmSpecClient` should be `VMSpecClient` (golint)\n\tVmSpecClient        *compute.VirtualMachineSizesClient\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/connect/AlibabaCloudConnection.go:43:2: struct field `VmSpecClient` should be `VMSpecClient` (golint)\n\tVmSpecClient *ecs.Client\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/OpenStackDriver.go:23:6: type name will be used as openstack.OpenStackDriver by other packages, and that stutters; consider calling this Driver (golint)\ntype OpenStackDriver struct{}\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:29:6: type name will be used as azure.AzureDriver by other packages, and that stutters; consider calling this Driver (golint)\ntype AzureDriver struct{}\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:109:7: var `VmSpecClient` should be `VMSpecClient` (golint)\n\tCtx, VmSpecClient, err := getVmSpecClient(connectionInfo.CredentialInfo)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:300:6: func getVmSpecClient should be getVMSpecClient (golint)\nfunc getVmSpecClient(credential idrv.CredentialInfo) (context.Context, *compute.VirtualMachineSizesClient, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/alibaba/AlibabaDriver.go:31:6: type name will be used as alibaba.AlibabaDriver by other packages, and that stutters; consider calling this Driver (golint)\ntype AlibabaDriver struct{}\n     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:105:7: var `VmSpecClient` should be `VMSpecClient` (golint)\n\tCtx, VmSpecClient, err := getVmSpecClient(connectionInfo.CredentialInfo)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:296:6: func getVmSpecClient should be getVMSpecClient (golint)\nfunc getVmSpecClient(credential idrv.CredentialInfo) (context.Context, *compute.VirtualMachineSizesClient, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:31:2: var `vpcId` should be `vpcID` (golint)\n\tvpcId := \"5943bba1-237f-4ab1-bac5-70a8e08a1584\"\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:32:2: var `securityId` should be `securityID` (golint)\n\tsecurityId := \"1220bb01-e93d-4d39-9475-523f519322a2\"\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:133:5: var `vmId` should be `vmID` (golint)\n\t\t\t\tvmId, err := createVM(config, vmHandler)\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:212:3: struct field `ImageId` should be `ImageID` (golint)\n\t\tImageId          string `yaml:\"image_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:213:3: struct field `FlavorId` should be `FlavorID` (golint)\n\t\tFlavorId         string `yaml:\"flavor_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:214:3: struct field `NetworkId` should be `NetworkID` (golint)\n\t\tNetworkId        string `yaml:\"network_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/old/Test_VM.go:218:3: struct field `ServerId` should be `ServerID` (golint)\n\t\tServerId   string `yaml:\"server_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:42:2: var `imageId` should be `imageID` (golint)\n\timageId := irs.IID{\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:114:2: var `vpcId` should be `vpcID` (golint)\n\tvpcId := irs.IID{NameId: \"CB-VNet\", SystemId: \"af8010c9-4769-4545-9770-a31e9bb8b645\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:664:6: var `vmSpecId` should be `vmSpecID` (golint)\n\tvar vmSpecId string\n\t    ^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:848:3: struct field `ImageId` should be `ImageID` (golint)\n\t\tImageId          string `yaml:\"image_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:849:3: struct field `FlavorId` should be `FlavorID` (golint)\n\t\tFlavorId         string `yaml:\"flavor_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:850:3: struct field `NetworkId` should be `NetworkID` (golint)\n\t\tNetworkId        string `yaml:\"network_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:854:3: struct field `ServerId` should be `ServerID` (golint)\n\t\tServerId string `yaml:\"server_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:877:4: struct field `Id` should be `ID` (golint)\n\t\t\tId string `yaml:\"id\"`\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/openstack/main/Test_Resources.go:882:4: struct field `GateWayId` should be `GateWayID` (golint)\n\t\t\tGateWayId    string `yaml:\"gateway_id\"`\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:38:2: var `imageId` should be `imageID` (golint)\n\timageId := \"Canonical:UbuntuServer:18.04-LTS:18.04.201804262\"\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:396:2: var `vpcId` should be `vpcID` (golint)\n\tvpcId := irs.IID{NameId: \"CB-VNet\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:537:6: func testVmSpecHandler should be testVMSpecHandler (golint)\nfunc testVmSpecHandler(config Config) {\n     ^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:717:3: struct field `ClientId` should be `ClientID` (golint)\n\t\tClientId       string `yaml:\"client_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:719:3: struct field `TenantId` should be `TenantID` (golint)\n\t\tTenantId       string `yaml:\"tenant_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/azure/main/Test_Resources.go:742:3: struct field `ServerId` should be `ServerID` (golint)\n\t\tServerId string `yaml:\"server_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:33:7: const `CBDefaultVmUserName` should be `CBDefaultVMUserName` (golint)\nconst CBDefaultVmUserName string = \"cb-user\" // default VM User Name\n      ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:37:2: struct field `VpcId` should be `VpcID` (golint)\n\tVpcId     string\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:43:2: struct field `SubnetId` should be `SubnetID` (golint)\n\tSubnetId   string\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:46:7: don't use ALL_CAPS in Go names; use CamelCase (golint)\nconst CUSTOM_ERR_CODE_TOOMANY string = \"600\"  //awserr.New(\"600\", \"n개 이상의 xxxx 정보가 존재합니다.\", nil)\n      ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:47:7: don't use ALL_CAPS in Go names; use CamelCase (golint)\nconst CUSTOM_ERR_CODE_NOTFOUND string = \"404\" //awserr.New(\"404\", \"XXX 정보가 존재하지 않습니다.\", nil)\n      ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:64:34: func parameter `Id` should be `ID` (golint)\nfunc SetNameTag(Client *ec2.EC2, Id string, value string) bool {\n                                 ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:94:6: func ConvertJsonStringNoEscape should be ConvertJSONStringNoEscape (golint)\nfunc ConvertJsonStringNoEscape(v interface{}) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:100:2: var `errJson` should be `errJSON` (golint)\n\terrJson := encoder.Encode(v)\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:119:6: func ConvertJsonString should be ConvertJSONString (golint)\nfunc ConvertJsonString(v interface{}) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:120:13: var `errJson` should be `errJSON` (golint)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/CommonTencentFunc.go:165:13: var `errJson` should be `errJSON` (golint)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/ImageHandler.go:191:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:19:2: a blank import should be only in a main or test package, or have a comment justifying it (golint)\n\t_ \"github.com/davecgh/go-spew/spew\"\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:304:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:305:40: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.KeyPairInfo{}, errors.New(\"정보를 찾을 수 없습니다.\")\n\t\t                                     ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:310:46: method GetLocalKeyId should be GetLocalKeyID (golint)\nfunc (keyPairHandler *TencentKeyPairHandler) GetLocalKeyId(keyIID irs.IID) (string, error) {\n                                             ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:322:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/KeyPairHandler.go:330:2: var `keyPairId` should be `keyPairID` (golint)\n\tkeyPairId, errGet := keyPairHandler.GetLocalKeyId(keyIID)\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/SecurityHandler.go:231:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:70:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := vmHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:208:2: var `newVmIID` should be `newVMIID` (golint)\n\tnewVmIID := irs.IID{SystemId: *response.Response.InstanceIdSet[0]}\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:217:10: var `errVmInfo` should be `errVMInfo` (golint)\n\tvmInfo, errVmInfo := vmHandler.GetVM(newVmIID)\n\t        ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:426:10: var `errVmInfo` should be `errVMInfo` (golint)\n\tvmInfo, errVmInfo := vmHandler.ExtractDescribeInstances(response.Response.InstanceSet[0])\n\t        ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:431:61: method parameter `curVm` should be `curVM` (golint)\nfunc (vmHandler *TencentVMHandler) ExtractDescribeInstances(curVm *cvm.Instance) (irs.VMInfo, error) {\n                                                            ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:503:10: range var `curSecurityGroupId` should be `curSecurityGroupID` (golint)\n\t\tfor _, curSecurityGroupId := range curVm.SecurityGroupIds {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:593:9: range var `curVm` should be `curVM` (golint)\n\tfor _, curVm := range response.Response.InstanceSet {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMHandler.go:675:9: range var `curVm` should be `curVM` (golint)\n\tfor _, curVm := range response.Response.InstanceStatusSet {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:16:6: type `TencentVmSpecHandler` should be `TencentVMSpecHandler` (golint)\ntype TencentVmSpecHandler struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:25:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:30:26: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn nil, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:83:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:88:39: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.VMSpecInfo{}, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                                    ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:133:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:141:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:146:25: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn \"\", errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                      ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:183:14: var `errJson` should be `errJSON` (golint)\n\tjsonString, errJson := ConvertJsonString(response.Response.InstanceTypeConfigSet)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:196:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:201:25: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn \"\", errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                      ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:243:15: var `errJson` should be `errJSON` (golint)\n\t\tjsonString, errJson := ConvertJsonString(response.Response.InstanceTypeConfigSet[0])\n\t\t            ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:250:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VMSpecHandler.go:260:2: var `vCpuInfo` should be `vCPUInfo` (golint)\n\tvCpuInfo := irs.VCpuInfo{}\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:46:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := VPCHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:50:36: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.VPCInfo{}, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:86:2: var `newVpcId` should be `newVpcID` (golint)\n\tnewVpcId := *response.Response.Vpc.VpcId // Subnet이 포함된 정보를 전달해야 하기 때문에 생성된 VPC Id를 보관함.\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:302:49: method parameter `reqVpcId` should be `reqVpcID` (golint)\nfunc (VPCHandler *TencentVPCHandler) ListSubnet(reqVpcId string) ([]irs.SubnetInfo, error) {\n                                                ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:364:52: method parameter `reqSubnetNameId` should be `reqSubnetNameID` (golint)\nfunc (VPCHandler *TencentVPCHandler) isExistSubnet(reqSubnetNameId string) (bool, error) {\n                                                   ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:394:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := VPCHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:398:36: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.VPCInfo{}, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/tencent/resources/VPCHandler.go:402:36: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.VPCInfo{}, errors.New(\"생성할 SubnetId 정보가 없습니다.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/conf/Test_Config.go:11:1: don't use MixedCaps in package name; AliTestConfig should be alitestconfig (golint)\npackage AliTestConfig\n^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/conf/Test_Config.go:52:3: struct field `VmID` should be `VMID` (golint)\n\t\tVmID         string `yaml:\"ec2_instance_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/tencent/connect/TencentCloudConnection.go:34:2: struct field `VmSpecClient` should be `VMSpecClient` (golint)\n\tVmSpecClient   *cvm.Client\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:343:2: var `securityId` should be `securityID` (golint)\n\tsecurityId := \"sg-6wedru4yb4m6qqfvd3sj\"\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:344:2: var `vpcId` should be `vpcID` (golint)\n\tvpcId := \"vpc-0jl4l19l51gn2exrohgci\"\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:599:2: var `reqSubnetId` should be `reqSubnetID` (golint)\n\treqSubnetId := irs.IID{SystemId: \"vsw-6we4h4n4wp9xdtakrno15\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:624:2: var `reqVpcId` should be `reqVpcID` (golint)\n\treqVpcId := irs.IID{SystemId: \"vpc-6we11xwqjc9tyma5i68z0\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:817:2: var `VmID` should be `VMID` (golint)\n\tVmID := irs.IID{SystemId: \"i-6weayupx7qvidhmyl48d\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/TencentDriver.go:31:6: type name will be used as tencent.TencentDriver by other packages, and that stutters; consider calling this Driver (golint)\ntype TencentDriver struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/TencentDriver.go:60:6: func getVmClient should be getVMClient (golint)\nfunc getVmClient(connectionInfo idrv.ConnectionInfo) (*cvm.Client, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent/TencentDriver.go:66:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := connectionInfo.RegionInfo.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/TencentDriver.go:98:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := connectionInfo.RegionInfo.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/TencentDriver.go:164:1: comment on exported var `CloudDriver` should be of the form `CloudDriver ...` (golint)\n/*\n^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:130:2: var `contJson` should be `contJSON` (golint)\n\tcontJson, err := vmHandler.Client.ContainerInspect(vmHandler.Context, resp.ID)\n\t^\ncloud-control-manager/cloud-driver/drivers/docker/resources/VMHandler.go:139:77: func parameter `contJson` should be `contJSON` (golint)\nfunc getVMInfoByContainerJSON(regionInfo idrv.RegionInfo, vmReqIID irs.IID, contJson types.ContainerJSON) irs.VMInfo {\n                                                                            ^\ncloud-control-manager/cloud-driver/drivers/tencent-plugin/TencentDriver-lib.go:58:6: func getVmClient should be getVMClient (golint)\nfunc getVmClient(connectionInfo idrv.ConnectionInfo) (*cvm.Client, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/tencent-plugin/TencentDriver-lib.go:64:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := connectionInfo.RegionInfo.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent-plugin/TencentDriver-lib.go:95:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := connectionInfo.RegionInfo.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent-plugin/TencentDriver-lib.go:160:1: comment on exported var `CloudDriver` should be of the form `CloudDriver ...` (golint)\n/*\n^\ncloud-control-manager/cloud-driver/drivers/tencent/main/conf/Test_Config.go:11:1: don't use MixedCaps in package name; TencentTestConfig should be tencenttestconfig (golint)\npackage TencentTestConfig\n^\ncloud-control-manager/cloud-driver/drivers/tencent/main/conf/Test_Config.go:36:3: struct field `SecretId` should be `SecretID` (golint)\n\t\tSecretId  string `yaml:\"tencent_secret_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:33:7: const `CBDefaultVmUserName` should be `CBDefaultVMUserName` (golint)\nconst CBDefaultVmUserName string = \"cb-user\" // default VM User Name\n      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:35:7: don't use ALL_CAPS in Go names; use CamelCase (golint)\nconst CUSTOM_ERR_CODE_TOOMANY string = \"600\"  //awserr.New(\"600\", \"n개 이상의 xxxx 정보가 존재합니다.\", nil)\n      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:36:7: don't use ALL_CAPS in Go names; use CamelCase (golint)\nconst CUSTOM_ERR_CODE_NOTFOUND string = \"404\" //awserr.New(\"404\", \"XXX 정보가 존재하지 않습니다.\", nil)\n      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:40:2: struct field `VpcId` should be `VpcID` (golint)\n\tVpcId     string\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:46:2: struct field `SubnetId` should be `SubnetID` (golint)\n\tSubnetId   string\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:221:34: func parameter `Id` should be `ID` (golint)\nfunc SetNameTag(Client *ec2.EC2, Id string, value string) bool {\n                                 ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:251:6: func ConvertJsonStringNoEscape should be ConvertJSONStringNoEscape (golint)\nfunc ConvertJsonStringNoEscape(v interface{}) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:257:2: var `errJson` should be `errJSON` (golint)\n\terrJson := encoder.Encode(v)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:276:6: func ConvertJsonString should be ConvertJSONString (golint)\nfunc ConvertJsonString(v interface{}) (string, error) {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:277:13: var `errJson` should be `errJSON` (golint)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/CommonAwsFunc.go:322:13: var `errJson` should be `errJSON` (golint)\n\tjsonBytes, errJson := json.Marshal(v)\n\t           ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/ImageHandler.go:264:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/ImageHandler.go:265:38: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.ImageInfo{}, errors.New(\"조회된 Image 정보가 없습니다.\")\n\t\t                                   ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/KeyPairHandler.go:22:2: a blank import should be only in a main or test package, or have a comment justifying it (golint)\n\t_ \"github.com/davecgh/go-spew/spew\"\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/KeyPairHandler.go:274:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/KeyPairHandler.go:275:40: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.KeyPairInfo{}, errors.New(\"정보를 찾을 수 없습니다.\")\n\t\t                                     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:50:2: var `vpcId` should be `vpcID` (golint)\n\tvpcId := securityReqInfo.VpcIID.SystemId\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:394:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:443:6: func ExtractIpPermissionCommon should be ExtractIPPermissionCommon (golint)\nfunc ExtractIpPermissionCommon(ip *ec2.IpPermission, securityRuleInfo *irs.SecurityRuleInfo) {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:458:6: func ExtractIpPermissions should be ExtractIPPermissions (golint)\nfunc ExtractIpPermissions(ipPermissions []*ec2.IpPermission, direction string) []irs.SecurityRuleInfo {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/SecurityHandler.go:489:10: range var `userIdGroup` should be `userIDGroup` (golint)\n\t\tfor _, userIdGroup := range ip.UserIdGroupPairs {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:219:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.VMInfo{}, errors.New(\"AWS로부터 전달 받은 VM 정보가 없습니다.\")\n\t\t                                ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:225:2: var `newVmId` should be `newVMID` (golint)\n\tnewVmId := *runResult.Instances[0].InstanceId\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:286:2: var `newVmInfo` should be `newVMInfo` (golint)\n\tnewVmInfo, _ := vmHandler.GetVM(irs.IID{SystemId: newVmId})\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:375:10: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t\t} else {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:437:10: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t\t} else {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:507:10: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t\t} else {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:556:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:768:6: func ExtractVmName should be ExtractVMName (golint)\nfunc ExtractVmName(Tags []*ec2.Tag) string {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:939:44: error strings should not be capitalized or end with punctuation or a newline (golint)\n\treturn irs.VMStatus(\"Failed\"), errors.New(\"상태 정보를 찾을 수 없습니다.\")\n\t                                          ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:984:2: var `tmpVmName` should be `tmpVMName` (golint)\n\ttmpVmName := \"\"\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:1016:50: method parameter `allocationId` should be `allocationID` (golint)\nfunc (vmHandler *AwsVMHandler) AssociatePublicIP(allocationId string, instanceId string) (bool, error) {\n                                                 ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMHandler.go:1049:55: method parameter `vNicId` should be `vNicID` (golint)\nfunc (vmHandler *AwsVMHandler) AttachNetworkInterface(vNicId string, instanceId string) (bool, error) {\n                                                      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:17:6: type `AwsVmSpecHandler` should be `AwsVMSpecHandler` (golint)\ntype AwsVmSpecHandler struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:42:2: var `vCpuInfo` should be `vCPUInfo` (golint)\n\tvCpuInfo := irs.VCpuInfo{}\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:101:26: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn nil, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:104:6: var `mapVmSpecIds` should be `mapVMSpecIds` (golint)\n\tvar mapVmSpecIds map[string]string\n\t    ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:168:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:172:26: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn nil, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:175:2: var `mapVmSpecIds` should be `mapVMSpecIds` (golint)\n\tmapVmSpecIds, errListVMSpecAZ := vmSpecHandler.ListVMSpecAZ(zoneId)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:335:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := vmSpecHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:339:25: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn \"\", errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:342:2: var `mapVmSpecIds` should be `mapVMSpecIds` (golint)\n\tmapVmSpecIds, errListVMSpecAZ := vmSpecHandler.ListVMSpecAZ(zoneId)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:426:14: var `errJson` should be `errJSON` (golint)\n\tjsonString, errJson := ConvertJsonString(resp)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:452:14: var `errJson` should be `errJSON` (golint)\n\tjsonString, errJson := ConvertJsonString(resp)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VMSpecHandler.go:500:14: var `errJson` should be `errJSON` (golint)\n\tjsonString, errJson := ConvertJsonString(resp.InstanceTypes[0])\n\t            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:35:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := VPCHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:39:36: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.VPCInfo{}, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:169:49: method parameter `vpcId` should be `vpcID` (golint)\nfunc (VPCHandler *AwsVPCHandler) CreateRouteIGW(vpcId string, igwId string) error {\n                                                ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:171:2: var `routeTableId` should be `routeTableID` (golint)\n\trouteTableId, errRoute := VPCHandler.GetDefaultRouteTable(vpcId)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:228:55: method parameter `vpcId` should be `vpcID` (golint)\nfunc (VPCHandler *AwsVPCHandler) GetDefaultRouteTable(vpcId string) (string, error) {\n                                                      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:259:3: var `routeTableId` should be `routeTableID` (golint)\n\t\trouteTableId := *result.RouteTables[0].RouteTableId\n\t\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:262:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:263:25: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn \"\", errors.New(\"VPC에 할당된 라우팅 테이블 ID를 찾을 수 없습니다.\")\n\t\t                      ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:267:47: method parameter `vpcId` should be `vpcID` (golint)\nfunc (VPCHandler *AwsVPCHandler) CreateSubnet(vpcId string, reqSubnetInfo irs.SubnetInfo) (irs.SubnetInfo, error) {\n                                              ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:270:2: var `zoneId` should be `zoneID` (golint)\n\tzoneId := VPCHandler.Region.Zone\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:274:39: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.SubnetInfo{}, errors.New(\"Connection 정보에 Zone 정보가 없습니다.\")\n\t\t                                    ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:354:54: method parameter `vpcId` should be `vpcID` (golint)\nfunc (VPCHandler *AwsVPCHandler) AssociateRouteTable(vpcId string, subnetId string) error {\n                                                     ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:355:2: var `routeTableId` should be `routeTableID` (golint)\n\trouteTableId, errRoute := VPCHandler.GetDefaultRouteTable(vpcId)\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:609:29: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\t\treturn false, errors.New(\"Subnet 삭제 실패로 VPC를 삭제하지 못 했습니다.\") //삭제 실패 이유를 모르는 경우\n\t\t\t                         ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:727:49: method parameter `vpcId` should be `vpcID` (golint)\nfunc (VPCHandler *AwsVPCHandler) DeleteRouteIGW(vpcId string) error {\n                                                ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:729:2: var `routeTableId` should be `routeTableID` (golint)\n\trouteTableId := \"\"\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:751:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn errors.New(\"VPC에 할당된 라우팅 테이블 정보를 찾을 수 없습니다.\")\n\t\t                  ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:812:47: method parameter `vpcId` should be `vpcID` (golint)\nfunc (VPCHandler *AwsVPCHandler) DeleteAllIGW(vpcId string) error {\n                                              ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:855:56: method parameter `vpcId` should be `vpcID` (golint)\nfunc (VPCHandler *AwsVPCHandler) DetachInternetGateway(vpcId string, igwId string) error {\n                                                       ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:884:44: method parameter `igwId` should be `igwID` (golint)\nfunc (VPCHandler *AwsVPCHandler) DeleteIGW(igwId string) error {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:910:45: method parameter `vpcId` should be `vpcID` (golint)\nfunc (VPCHandler *AwsVPCHandler) ListSubnet(vpcId string) ([]irs.SubnetInfo, error) {\n                                            ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:979:44: method parameter `reqSubnetId` should be `reqSubnetID` (golint)\nfunc (VPCHandler *AwsVPCHandler) GetSubnet(reqSubnetId string) (irs.SubnetInfo, error) {\n                                           ^\ncloud-control-manager/cloud-driver/drivers/aws/resources/VPCHandler.go:1027:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:143:2: var `securityId` should be `securityID` (golint)\n\tsecurityId := \"sg-6wedru4yb4m6qqfvd3sj\"\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:144:2: var `vpcId` should be `vpcID` (golint)\n\tvpcId := \"vpc-6wei16ufuimfcct41o0xh\"\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:301:2: var `keyPairId` should be `keyPairID` (golint)\n\tkeyPairId := \"\"\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:389:2: var `reqSubnetId` should be `reqSubnetID` (golint)\n\treqSubnetId := irs.IID{SystemId: \"vsw-6we4h4n4wp9xdtakrno15\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:414:2: var `reqVpcId` should be `reqVpcID` (golint)\n\treqVpcId := irs.IID{SystemId: \"vpc-2u04wg6k\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/tencent/main/Test_Resources.go:606:2: var `VmID` should be `VMID` (golint)\n\tVmID := irs.IID{SystemId: \"ins-rqoo65fo\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/docker/DockerDriver.go:25:6: type name will be used as docker.DockerDriver by other packages, and that stutters; consider calling this Driver (golint)\ntype DockerDriver struct{}\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/connect/AwsCloudConnection.go:39:2: struct field `VmSpecClient` should be `VMSpecClient` (golint)\n\tVmSpecClient   *ec2.EC2\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/AwsDriver.go:35:6: type name will be used as aws.AwsDriver by other packages, and that stutters; consider calling this Driver (golint)\ntype AwsDriver struct {\n     ^\ncloud-control-manager/cloud-driver/drivers/aws/AwsDriver.go:121:1: comment on exported var `CloudDriver` should be of the form `CloudDriver ...` (golint)\n/*\n^\ncloud-control-manager/cloud-driver/drivers/aws-plugin/AwsDriver-lib.go:117:1: comment on exported var `CloudDriver` should be of the form `CloudDriver ...` (golint)\n/*\n^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:52:2: var `securityId` should be `securityID` (golint)\n\tsecurityId := \"sg-0d6a2bb960481ce68\"\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:53:2: var `vpcId` should be `vpcID` (golint)\n\tvpcId := \"vpc-0c4d36a3ac3924419\"\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:211:2: var `securityId` should be `securityID` (golint)\n\tsecurityId := config.Aws.SecurityGroupID\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:586:2: var `reqSubnetId` should be `reqSubnetID` (golint)\n\treqSubnetId := irs.IID{SystemId: \"vpc-04f6de5c2af880978\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:871:2: var `VmID` should be `VMID` (golint)\n\tVmID := irs.IID{SystemId: \"i-08f13a125cc74bef6\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:1259:3: struct field `VmID` should be `VMID` (golint)\n\t\tVmID         string `yaml:\"ec2_instance_id\"`\n\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/CommonHandler.go:37:2: struct field `VpcId` should be `VpcID` (golint)\n\tVpcId     string\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/CommonHandler.go:43:2: struct field `SubnetId` should be `SubnetID` (golint)\n\tSubnetId   string\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:62:37: error strings should not be capitalized or end with punctuation or a newline (golint)\n\treturn irs.ImageInfo{}, errors.New(\"Feature not implemented.\")\n\t                                   ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:131:9: range var `projectId` should be `projectID` (golint)\n\tfor _, projectId := range arrImageProjectList {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:177:2: struct field `ImageUrl` should be `ImageURL` (golint)\n\tImageUrl string //for CB(VM Start)\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:182:2: struct field `ProjectId` should be `ProjectID` (golint)\n\tProjectId string //for image api call\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:184:2: struct field `Id` should be `ID` (golint)\n\tId string\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:228:2: var `projectId` should be `projectID` (golint)\n\tprojectId := \"\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:243:38: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.ImageInfo{}, errors.New(\"ProjectId information not found in URL.\")\n\t\t                                   ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:273:38: method GetImageByUrl should be GetImageByURL (golint)\nfunc (imageHandler *GCPImageHandler) GetImageByUrl(imageIID irs.IID) (irs.ImageInfo, error) {\n                                     ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:313:2: var `projectId` should be `projectID` (golint)\n\tprojectId := gcpImageInfo.ProjectId\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:314:2: var `imageId` should be `imageID` (golint)\n\timageId := gcpImageInfo.Id\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:376:9: range var `projectId` should be `projectID` (golint)\n\tfor _, projectId := range arrImageProjectList {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:504:9: range var `projectId` should be `projectID` (golint)\n\tfor _, projectId := range arrImageProjectList {\n\t       ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:17:2: a blank import should be only in a main or test package, or have a comment justifying it (golint)\n\t_ \"errors\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:241:10: var `errVmInfo` should be `errVMInfo` (golint)\n\tvmInfo, errVmInfo := vmHandler.GetVM(irs.IID{NameId: vmName, SystemId: vmName})\n\t        ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:502:4: var `vmId` should be `vmID` (golint)\n\t\t\tvmId := s.Name\n\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:687:6: var `iIdBox` should be `iIDBox` (golint)\n\tvar iIdBox IIDBox\n\t    ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:689:3: var `iId` should be `iID` (golint)\n\t\tiId := irs.IID{\n\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:735:2: var `arrVmSpec` should be `arrVMSpec` (golint)\n\tarrVmSpec := strings.Split(server.MachineType, \"/\")\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMHandler.go:790:2: var `iId` should be `iID` (golint)\n\tiId := irs.IID{\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VMSpecHandler.go:15:2: a blank import should be only in a main or test package, or have a comment justifying it (golint)\n\t_ \"errors\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:43:36: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.VPCInfo{}, errors.New(\"Invalid Request - VPC NameId is required.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:48:36: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn irs.VPCInfo{}, errors.New(\"Invalid Request - Subnet information is required.\")\n\t\t                                 ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:118:2: var `vpcNetworkUrl` should be `vpcNetworkURL` (golint)\n\tvpcNetworkUrl := \"https://www.googleapis.com/compute/v1/projects/\" + projectID + \"/global/networks/\" + vpcReqInfo.IId.NameId\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:182:2: don't use underscores in Go names; var `before_time` should be `beforeTime` (golint)\n\tbefore_time := time.Now()\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:183:2: don't use underscores in Go names; var `max_time` should be `maxTime` (golint)\n\tmax_time := 300 //최대 300초간 체크\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:200:5: don't use underscores in Go names; var `after_time` should be `afterTime` (golint)\n\t\t\t\tafter_time := time.Now()\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:222:5: don't use underscores in Go names; var `after_time` should be `afterTime` (golint)\n\t\t\t\tafter_time := time.Now()\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:243:2: don't use underscores in Go names; var `before_time` should be `beforeTime` (golint)\n\tbefore_time := time.Now()\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:244:2: don't use underscores in Go names; var `max_time` should be `maxTime` (golint)\n\tmax_time := 300 //최대 300초간 체크\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:260:5: don't use underscores in Go names; var `after_time` should be `afterTime` (golint)\n\t\t\t\tafter_time := time.Now()\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:282:5: don't use underscores in Go names; var `after_time` should be `afterTime` (golint)\n\t\t\t\tafter_time := time.Now()\n\t\t\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:312:53: method parameter `resourceId` should be `resourceID` (golint)\nfunc (vVPCHandler *GCPVPCHandler) WaitUntilComplete(resourceId string, isGlobalAction bool) error {\n                                                    ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:321:2: don't use underscores in Go names; var `before_time` should be `beforeTime` (golint)\n\tbefore_time := time.Now()\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:322:2: don't use underscores in Go names; var `max_time` should be `maxTime` (golint)\n\tmax_time := 300 //최대 300초간 체크\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:347:3: don't use underscores in Go names; var `after_time` should be `afterTime` (golint)\n\t\tafter_time := time.Now()\n\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:389:3: var `iId` should be `iID` (golint)\n\t\tiId := irs.IID{\n\t\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:412:2: var `systemId` should be `systemID` (golint)\n\tsystemId := vpcIID.SystemId\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:595:1: receiver name VPCHandler should be consistent with previous receiver name vVPCHandler for GCPVPCHandler (golint)\nfunc (VPCHandler *GCPVPCHandler) AddSubnet(vpcIID irs.IID, subnetInfo irs.SubnetInfo) (irs.VPCInfo, error) {\n^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:610:48: method parameter `vpcId` should be `vpcID` (golint)\nfunc (vVPCHandler *GCPVPCHandler) CreateSubnet(vpcId string, reqSubnetInfo irs.SubnetInfo) (irs.SubnetInfo, error) {\n                                               ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:617:2: var `vpcNetworkUrl` should be `vpcNetworkURL` (golint)\n\tvpcNetworkUrl := \"https://www.googleapis.com/compute/v1/projects/\" + projectID + \"/global/networks/\" + vpcId\n\t^\napi-runtime/meerkat-runtime/table-handler/TableHandler.go:18:7: const `spreadsheetId` should be `spreadsheetID` (golint)\nconst spreadsheetId string = \"123pwye5DiSuUxK6uK-2LBsccabfXHA1ofWCcJ4vfsPw\"\n      ^\napi-runtime/meerkat-runtime/table-handler/TableHandler.go:122:9: should omit 2nd value from range; this loop is equivalent to `for j := range ...` (golint)\n\tfor j, _ := range resp.Values {\n\t       ^\napi-runtime/meerkat-runtime/table-handler/TableHandler.go:182:16: don't use underscores in Go names; range var j_v should be jV (golint)\n        for _, j_v := range valueList {\n               ^\napi-runtime/meerkat-runtime/table-handler/TableHandler.go:184:10: don't use underscores in Go names; range var i_v should be iV (golint)\n\t\tfor i, i_v := range j_v {\n\t\t       ^\ncloud-info-manager/region-info-manager/RegionInfoManager.go:80:26: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn nil, fmt.Errorf(\"RegionName is empty!\")\n\t\t                       ^\ncloud-info-manager/region-info-manager/RegionInfoManager.go:96:28: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn false, fmt.Errorf(\"RegionName is empty!\")\n\t\t                         ^\ncloud-info-manager/region-info-manager/RegionInfoManager.go:112:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"RegionName is empty!\")\n\t\t                  ^\ncloud-info-manager/region-info-manager/RegionInfoManager.go:115:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"ProviderName is empty!\")\n\t\t                  ^\ncloud-info-manager/region-info-manager/RegionInfoManager.go:119:22: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\t\treturn fmt.Errorf(\"Key is empty!\")\n\t\t\t                  ^\ncloud-info-manager/driver-info-manager/DriverInfoManager.go:86:26: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn nil, fmt.Errorf(\"DriverName is empty!\")\n\t\t                       ^\ncloud-info-manager/driver-info-manager/DriverInfoManager.go:102:28: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn false, fmt.Errorf(\"DriverName is empty!\")\n\t\t                         ^\ncloud-info-manager/driver-info-manager/DriverInfoManager.go:118:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"DriverName is empty!\")\n\t\t                  ^\ncloud-info-manager/driver-info-manager/DriverInfoManager.go:121:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"ProviderName is empty!\")\n\t\t                  ^\ncloud-info-manager/driver-info-manager/DriverInfoManager.go:124:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"DriverLibFileName is empty!\")\n\t\t                  ^\ncloud-control-manager/iid-manager/IIDManager.go:42:83: method parameter `iId` should be `iID` (golint)\nfunc (iidRWLock *IIDRWLOCK)IsExistIID(connectionName string, resourceType string, iId resources.IID) (bool, error) {\n                                                                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:54:82: method parameter `iId` should be `iID` (golint)\nfunc (iidRWLock *IIDRWLOCK)CreateIID(connectionName string, resourceType string, iId resources.IID) (*IIDInfo, error) {\n                                                                                 ^\ncloud-control-manager/iid-manager/IIDManager.go:80:82: method parameter `iId` should be `iID` (golint)\nfunc (iidRWLock *IIDRWLOCK)UpdateIID(connectionName string, resourceType string, iId resources.IID) (*IIDInfo, error) {\n                                                                                 ^\ncloud-control-manager/iid-manager/IIDManager.go:109:65: func parameter `iId` should be `iID` (golint)\nfunc forceCreateIID(connectionName string, resourceType string, iId resources.IID) (*IIDInfo, error) {\n                                                                ^\ncloud-control-manager/iid-manager/IIDManager.go:150:79: method parameter `iId` should be `iID` (golint)\nfunc (iidRWLock *IIDRWLOCK)GetIID(connectionName string, resourceType string, iId resources.IID) (*IIDInfo, error) {\n                                                                              ^\ncloud-control-manager/iid-manager/IIDManager.go:212:89: method parameter `iId` should be `iID` (golint)\nfunc (iidRWLock *IIDRWLOCK)GetIIDbySystemID(connectionName string, resourceType string, iId resources.IID) (*IIDInfo, error) {\n                                                                                        ^\ncloud-control-manager/iid-manager/IIDManager.go:240:82: method parameter `iId` should be `iID` (golint)\nfunc (iidRWLock *IIDRWLOCK)DeleteIID(connectionName string, resourceType string, iId resources.IID) (bool, error) {\n                                                                                 ^\ncloud-control-manager/iid-manager/IIDManager.go:268:62: func parameter `iId` should be `iID` (golint)\nfunc checkParams(connectionName string, resourceType string, iId *resources.IID) error {\n                                                             ^\ncloud-control-manager/iid-manager/IIDManager.go:270:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return fmt.Errorf(\"ConnectionName is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:273:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return fmt.Errorf(\"ResourceType is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:276:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return fmt.Errorf(\"IID is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:279:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return fmt.Errorf(\"IID.NameId is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:284:6: func checkParamsSystemId should be checkParamsSystemID (golint)\nfunc checkParamsSystemId(connectionName string, resourceType string, iId *resources.IID) error {\n     ^\ncloud-control-manager/iid-manager/IIDManager.go:286:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return fmt.Errorf(\"ConnectionName is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:289:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return fmt.Errorf(\"ResourceType is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:292:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return fmt.Errorf(\"IID is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:295:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return fmt.Errorf(\"IID.SystemId is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:302:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return fmt.Errorf(\"ConnectionName is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:305:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return fmt.Errorf(\"ResourceType is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/IIDManager.go:308:35: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return fmt.Errorf(\"Keyword is empty!\")\n                                  ^\ncloud-control-manager/iid-manager/InfoStore.go:79:58: func parameter `nameId` should be `nameID` (golint)\nfunc getInfo(connectionName string, resourceType string, nameId string) (*IIDInfo, error) {\n                                                         ^\ncloud-control-manager/iid-manager/InfoStore.go:109:65: func parameter `systemId` should be `systemID` (golint)\nfunc getInfoByValue(connectionName string, resourceType string, systemId string) (*IIDInfo, error) {\n                                                                ^\ncloud-control-manager/iid-manager/InfoStore.go:132:58: func parameter `nameId` should be `nameID` (golint)\nfunc isExist(connectionName string, resourceType string, nameId string) (bool, error) {\n                                                         ^\ncloud-control-manager/iid-manager/InfoStore.go:158:61: func parameter `nameId` should be `nameID` (golint)\nfunc deleteInfo(connectionName string, resourceType string, nameId string) (bool, error) {\n                                                            ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:96:26: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn nil, fmt.Errorf(\"ConnectionName is empty!\")\n\t\t                       ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:112:28: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn false, fmt.Errorf(\"ConnectionName is empty!\")\n\t\t                         ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:128:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"ConnectionName is empty!\")\n\t\t                  ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:131:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"ProviderName is empty!\")\n\t\t                  ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:134:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"DriverName is empty!\")\n\t\t                  ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:137:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"CredentialName is empty!\")\n\t\t                  ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:140:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"RegionName is empty!\")\n\t\t                  ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:93:26: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn nil, fmt.Errorf(\"CredentialName is empty!\")\n\t\t                       ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:112:40: error strings should not be capitalized or end with punctuation or a newline (golint)\n                return nil, fmt.Errorf(\"CredentialName is empty!\")\n                                       ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:198:28: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn false, fmt.Errorf(\"CredentialName is empty!\")\n\t\t                         ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:214:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"CredentialName is empty!\")\n\t\t                  ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:217:21: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn fmt.Errorf(\"ProviderName is empty!\")\n\t\t                  ^\ncloud-info-manager/credential-info-manager/CredentialInfoManager.go:221:22: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\t\treturn fmt.Errorf(\"Key is empty!\")\n\t\t\t                  ^\napi-runtime/meerkat-runtime/common/runcommand.go:35:9: don't use underscores in Go names; var `cmd_args` should be `cmdArgs` (golint)\n        cmd_args := strings.SplitN(cmd, \" \", 2)\n        ^\ncloud-control-manager/cloud-driver/drivers/gcp/GCPDriver.go:31:6: type name will be used as gcp.GCPDriver by other packages, and that stutters; consider calling this Driver (golint)\ntype GCPDriver struct {\n     ^\ncloud-control-manager/CloudDriverHandler_static.go:80:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\ncloud-control-manager/CloudDriverHandler_static.go:256:26: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\treturn nil, fmt.Errorf(\"%q: driver library file can't nil or empty!!\", cldDrvInfo.DriverName)\n\t\t                       ^\napi-runtime/meerkat-runtime/momkat/MomKat.go:140:10: should omit 2nd value from range; this loop is equivalent to `for i := range ...` (golint)\n\t\tfor i, _ := range values {\n\t\t       ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/conf/Test_Config.go:11:1: don't use MixedCaps in package name; TestConfig should be testconfig (golint)\npackage TestConfig\n^\napi-runtime/common-runtime/CCMCommon.go:87:2: don't use underscores in Go names; var `bool_ret` should be `boolRet` (golint)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:491:2: don't use underscores in Go names; var `bool_ret` should be `boolRet` (golint)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:724:2: don't use underscores in Go names; var `bool_ret` should be `boolRet` (golint)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:809:2: don't use underscores in Go names; var `bool_ret` should be `boolRet` (golint)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:820:9: should omit 2nd value from range; this loop is equivalent to `for n := range ...` (golint)\n\tfor n, _ := range *reqInfo.SecurityRules {\n\t       ^\napi-runtime/common-runtime/CCMCommon.go:852:2: don't use underscores in Go names; var `vpc_sg_nameid` should be `vpcSgNameid` (golint)\n\tvpc_sg_nameid := strings.Split(info.IId.NameId, SG_DELIMITER)\n\t^\napi-runtime/common-runtime/CCMCommon.go:910:5: don't use underscores in Go names; var `vpc_sg_nameid` should be `vpcSgNameid` (golint)\n\t\t\t\tvpc_sg_nameid := strings.Split(iidInfo.IId.NameId, SG_DELIMITER)\n\t\t\t\t^\napi-runtime/common-runtime/CCMCommon.go:973:2: don't use underscores in Go names; var `vpc_sg_nameid` should be `vpcSgNameid` (golint)\n\tvpc_sg_nameid := strings.Split(iidInfo.IId.NameId, SG_DELIMITER)\n\t^\napi-runtime/common-runtime/CCMCommon.go:1010:2: don't use underscores in Go names; var `bool_ret` should be `boolRet` (golint)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:1145:6: func getSetSystemId should be getSetSystemID (golint)\nfunc getSetSystemId(ConnectionName string, reqInfo *cres.VMReqInfo) error {\n     ^\napi-runtime/common-runtime/CCMCommon.go:1223:2: don't use underscores in Go names; var `bool_ret` should be `boolRet` (golint)\n\tbool_ret, err := iidRWLock.IsExistIID(connectionName, rsType, reqInfo.IId)\n\t^\napi-runtime/common-runtime/CCMCommon.go:1284:3: don't use underscores in Go names; var `vpc_sg_nameid` should be `vpcSgNameid` (golint)\n\t\tvpc_sg_nameid := strings.Split(sgIID.NameId, SG_DELIMITER)\n\t\t^\napi-runtime/common-runtime/CCMCommon.go:1296:6: func setNameId should be setNameID (golint)\nfunc setNameId(ConnectionName string, vmInfo *cres.VMInfo, reqInfo *cres.VMReqInfo) error {\n     ^\napi-runtime/common-runtime/CCMCommon.go:1403:6: don't use underscores in Go names; var `vpc_sg_nameid` should be `vpcSgNameid` (golint)\n\t\t\t\t\tvpc_sg_nameid := strings.Split(sgIID.NameId, SG_DELIMITER)\n\t\t\t\t\t^\napi-runtime/common-runtime/CCMCommon.go:1425:6: func getSetNameId should be getSetNameID (golint)\nfunc getSetNameId(ConnectionName string, vmInfo *cres.VMInfo) error {\n     ^\napi-runtime/common-runtime/CCMCommon.go:1520:3: don't use underscores in Go names; var `vpc_sg_nameid` should be `vpcSgNameid` (golint)\n\t\tvpc_sg_nameid := strings.Split(sgIID.NameId, SG_DELIMITER)\n\t\t^\napi-runtime/common-runtime/CCMCommon.go:1803:10: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t\t} else { // iidCSPList is empty and iidInfoList has value => only OnlySpiderList <--(2)\n\t\t       ^\napi-runtime/common-runtime/CCMCommon.go:1844:4: don't use underscores in Go names; var `vpc_sg_nameid` should be `vpcSgNameid` (golint)\n\t\t\tvpc_sg_nameid := strings.Split(iid.NameId, SG_DELIMITER)\n\t\t\t^\napi-runtime/common-runtime/CCMCommon.go:1848:4: don't use underscores in Go names; var `vpc_sg_nameid` should be `vpcSgNameid` (golint)\n\t\t\tvpc_sg_nameid := strings.Split(iid.NameId, SG_DELIMITER)\n\t\t\t^\napi-runtime/common-runtime/CCMCommon.go:2089:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\napi-runtime/common-runtime/CCMCommon.go:2188:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else {\n\t       ^\napi-runtime/common-runtime/common.go:11:7: don't use ALL_CAPS in Go names; use CamelCase (golint)\nconst SUBNET_PREFIX string = \"subnet:\"\n      ^\napi-runtime/common-runtime/common.go:12:7: don't use ALL_CAPS in Go names; use CamelCase (golint)\nconst SG_DELIMITER string = \"-deli-\"\n      ^\napi-runtime/common-runtime/common.go:19:1: comment on exported var `ServerIPorName` should be of the form `ServerIPorName ...` (golint)\n//// CB-Spider Servcie Address Configuration\n^\napi-runtime/common-runtime/common.go:25:1: comment on exported var `ServiceIPorName` should be of the form `ServiceIPorName ...` (golint)\n// REST SERVICE_ADDRESS for AdminWeb since v0.4.4\n^\napi-runtime/common-runtime/common.go:29:1: comment on exported var `GoServicePort` should be of the form `GoServicePort ...` (golint)\n// GO Service Port\n^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:44:2: var `securityId` should be `securityID` (golint)\n\tsecurityId := \"sg1234\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:130:2: var `securityId` should be `securityID` (golint)\n\tsecurityId := \"cb-securitytest-all\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:133:2: var `vpcId` should be `vpcID` (golint)\n\tvpcId := \"cb-vpc-load-test\"\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:425:2: var `reqSubnetId` should be `reqSubnetID` (golint)\n\treqSubnetId := irs.IID{SystemId: \"addtest-subnet\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:459:2: var `reqVpcId` should be `reqVpcID` (golint)\n\treqVpcId := irs.IID{SystemId: vpcReqInfo.IId.NameId} //GCP는 SystemId에 NameId사용\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/main/Test_Resources.go:825:2: var `VmID` should be `VMID` (golint)\n\tVmID := irs.IID{SystemId: \"mcloud-barista-vm-test\"}\n\t^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:23:6: don't use underscores in Go names; func makeMgmtTRList_html should be makeMgmtTRListHTML (golint)\nfunc makeMgmtTRList_html(bgcolor string, height string, fontSize string, infoList cr.AllResourceList) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:84:6: don't use underscores in Go names; func makeDeleteVPCMgmtFunc_js should be makeDeleteVPCMgmtFuncJs (golint)\nfunc makeDeleteVPCMgmtFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:202:6: don't use underscores in Go names; func makeDeleteSecurityGroupMgmtFunc_js should be makeDeleteSecurityGroupMgmtFuncJs (golint)\nfunc makeDeleteSecurityGroupMgmtFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:320:6: don't use underscores in Go names; func makeDeleteKeyPairMgmtFunc_js should be makeDeleteKeyPairMgmtFuncJs (golint)\nfunc makeDeleteKeyPairMgmtFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM-MGMT.go:438:6: don't use underscores in Go names; func makeDeleteVMMgmtFunc_js should be makeDeleteVMMgmtFuncJs (golint)\nfunc makeDeleteVMMgmtFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:29:6: don't use underscores in Go names; func makeVPCTRList_html should be makeVPCTRListHTML (golint)\nfunc makeVPCTRList_html(bgcolor string, height string, fontSize string, infoList []*cres.VPCInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:118:6: don't use underscores in Go names; func makePostVPCFunc_js should be makePostVPCFuncJs (golint)\nfunc makePostVPCFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:159:6: don't use underscores in Go names; func makePostSubnetFunc_js should be makePostSubnetFuncJs (golint)\nfunc makePostSubnetFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:186:6: don't use underscores in Go names; func makeDeleteVPCFunc_js should be makeDeleteVPCFuncJs (golint)\nfunc makeDeleteVPCFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:210:6: don't use underscores in Go names; func makeDeleteSubnetFunc_js should be makeDeleteSubnetFuncJs (golint)\nfunc makeDeleteSubnetFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:345:6: don't use underscores in Go names; func makeSecurityGroupTRList_html should be makeSecurityGroupTRListHTML (golint)\nfunc makeSecurityGroupTRList_html(bgcolor string, height string, fontSize string, infoList []*cres.SecurityInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:413:6: don't use underscores in Go names; func makePostSecurityGroupFunc_js should be makePostSecurityGroupFuncJs (golint)\nfunc makePostSecurityGroupFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:454:6: don't use underscores in Go names; func makeDeleteSecurityGroupFunc_js should be makeDeleteSecurityGroupFuncJs (golint)\nfunc makeDeleteSecurityGroupFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:596:6: don't use underscores in Go names; func makeKeyPairTRList_html should be makeKeyPairTRListHTML (golint)\nfunc makeKeyPairTRList_html(bgcolor string, height string, fontSize string, infoList []*cres.KeyPairInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:663:6: don't use underscores in Go names; func makePostKeyPairFunc_js should be makePostKeyPairFuncJs (golint)\nfunc makePostKeyPairFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:697:6: don't use underscores in Go names; func makeDeleteKeyPairFunc_js should be makeDeleteKeyPairFuncJs (golint)\nfunc makeDeleteKeyPairFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:835:6: don't use underscores in Go names; func makeVMTRList_html should be makeVMTRListHTML (golint)\nfunc makeVMTRList_html(connConfig string, bgcolor string, height string, fontSize string, infoList []*cres.VMInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:979:6: don't use underscores in Go names; func makePostVMFunc_js should be makePostVMFuncJs (golint)\nfunc makePostVMFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:1041:6: don't use underscores in Go names; func makeDeleteVMFunc_js should be makeDeleteVMFuncJs (golint)\nfunc makeDeleteVMFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:1295:6: don't use underscores in Go names; func makeVMImageTRList_html should be makeVMImageTRListHTML (golint)\nfunc makeVMImageTRList_html(bgcolor string, height string, fontSize string, infoList []*cres.ImageInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CCM.go:1422:6: don't use underscores in Go names; func makeVMSpecTRList_html should be makeVMSpecTRListHTML (golint)\nfunc makeVMSpecTRList_html(bgcolor string, height string, fontSize string, infoList []*cres.VMSpecInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:27:6: don't use underscores in Go names; func makeDriverTRList_html should be makeDriverTRListHTML (golint)\nfunc makeDriverTRList_html(bgcolor string, height string, fontSize string, infoList []*dim.CloudDriverInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:67:6: don't use underscores in Go names; func makeOnchangeDriverProviderFunc_js should be makeOnchangeDriverProviderFuncJs (golint)\nfunc makeOnchangeDriverProviderFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:80:6: don't use underscores in Go names; func makeCheckBoxToggleFunc_js should be makeCheckBoxToggleFuncJs (golint)\nfunc makeCheckBoxToggleFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:95:6: don't use underscores in Go names; func makePostDriverFunc_js should be makePostDriverFuncJs (golint)\nfunc makePostDriverFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:136:6: don't use underscores in Go names; func makeDeleteDriverFunc_js should be makeDeleteDriverFuncJs (golint)\nfunc makeDeleteDriverFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:257:6: don't use underscores in Go names; func makeOnchangeCredentialProviderFunc_js should be makeOnchangeCredentialProviderFuncJs (golint)\nfunc makeOnchangeCredentialProviderFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:307:6: don't use underscores in Go names; func makeCredentialTRList_html should be makeCredentialTRListHTML (golint)\nfunc makeCredentialTRList_html(bgcolor string, height string, fontSize string, infoList []*cim.CredentialInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:351:6: don't use underscores in Go names; func makePostCredentialFunc_js should be makePostCredentialFuncJs (golint)\nfunc makePostCredentialFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:393:6: don't use underscores in Go names; func makeDeleteCredentialFunc_js should be makeDeleteCredentialFuncJs (golint)\nfunc makeDeleteCredentialFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:513:6: don't use underscores in Go names; func makeOnchangeRegionProviderFunc_js should be makeOnchangeRegionProviderFuncJs (golint)\nfunc makeOnchangeRegionProviderFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:586:6: don't use underscores in Go names; func makeRegionTRList_html should be makeRegionTRListHTML (golint)\nfunc makeRegionTRList_html(bgcolor string, height string, fontSize string, infoList []*rim.RegionInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:630:6: don't use underscores in Go names; func makePostRegionFunc_js should be makePostRegionFuncJs (golint)\nfunc makePostRegionFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:674:6: don't use underscores in Go names; func makeDeleteRegionFunc_js should be makeDeleteRegionFuncJs (golint)\nfunc makeDeleteRegionFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:794:6: don't use underscores in Go names; func makeOnInitialInputBoxSetup_js should be makeOnInitialInputBoxSetupJs (golint)\nfunc makeOnInitialInputBoxSetup_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:805:6: don't use underscores in Go names; func makeOnchangeConnectionConfigProviderFunc_js should be makeOnchangeConnectionConfigProviderFuncJs (golint)\nfunc makeOnchangeConnectionConfigProviderFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:948:6: don't use underscores in Go names; func makeSetupConnectionConfigFunc_js should be makeSetupConnectionConfigFuncJs (golint)\nfunc makeSetupConnectionConfigFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1001:6: don't use underscores in Go names; func makeConnectionConfigTRList_html should be makeConnectionConfigTRListHTML (golint)\nfunc makeConnectionConfigTRList_html(bgcolor string, height string, fontSize string, infoList []*ccim.ConnectionConfigInfo) (string, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1060:6: don't use underscores in Go names; func makePostConnectionConfigFunc_js should be makePostConnectionConfigFuncJs (golint)\nfunc makePostConnectionConfigFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1108:6: don't use underscores in Go names; func makeDeleteConnectionConfigFunc_js should be makeDeleteConnectionConfigFuncJs (golint)\nfunc makeDeleteConnectionConfigFunc_js() string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1129:6: don't use underscores in Go names; func makeDriverNameHiddenTRList_html should be makeDriverNameHiddenTRListHTML (golint)\nfunc makeDriverNameHiddenTRList_html(infoList []*dim.CloudDriverInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1145:6: don't use underscores in Go names; func makeCredentialNameHiddenTRList_html should be makeCredentialNameHiddenTRListHTML (golint)\nfunc makeCredentialNameHiddenTRList_html(infoList []*cim.CredentialInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb-CIM.go:1161:6: don't use underscores in Go names; func makeRegionNameHiddenTRList_html should be makeRegionNameHiddenTRListHTML (golint)\nfunc makeRegionNameHiddenTRList_html(infoList []*rim.RegionInfo) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:267:6: don't use underscores in Go names; func makeSelect_html should be makeSelectHTML (golint)\nfunc makeSelect_html(onchangeFunctionName string, strList []string, id string) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:286:6: don't use underscores in Go names; func makeKeyPairSelect_html should be makeKeyPairSelectHTML (golint)\nfunc makeKeyPairSelect_html(onchangeFunctionName string, strList []string, id string) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:304:6: don't use underscores in Go names; func getResourceList_JsonByte should be getResourceListJSONByte (golint)\nfunc getResourceList_JsonByte(resourceName string) ([]byte, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:321:6: don't use underscores in Go names; func getResourceList_with_Connection_JsonByte should be getResourceListWithConnectionJSONByte (golint)\nfunc getResourceList_with_Connection_JsonByte(connConfig string, resourceName string) ([]byte, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:351:6: don't use underscores in Go names; func getAllResourceList_with_Connection_JsonByte should be getAllResourceListWithConnectionJSONByte (golint)\nfunc getAllResourceList_with_Connection_JsonByte(connConfig string, resourceName string) ([]byte, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:381:6: don't use underscores in Go names; func getResource_JsonByte should be getResourceJSONByte (golint)\nfunc getResource_JsonByte(resourceName string, name string) ([]byte, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:398:6: don't use underscores in Go names; func getResource_with_Connection_JsonByte should be getResourceWithConnectionJSONByte (golint)\nfunc getResource_with_Connection_JsonByte(connConfig string, resourceName string, name string) ([]byte, error) {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:429:6: don't use underscores in Go names; func makeActionTR_html should be makeActionTRHTML (golint)\nfunc makeActionTR_html(colspan string, f5_href string,  delete_href string, fontSize string) string {\n     ^\napi-runtime/rest-runtime/admin-web/AdminWeb.go:452:6: don't use underscores in Go names; func makeTitleTRList_html should be makeTitleTRListHTML (golint)\nfunc makeTitleTRList_html(bgcolor string, fontSize string, nameWidthList []NameWidth, hasCheckBox bool) string {\n     ^\napi-runtime/rest-runtime/CBSpiderRuntime.go:117:9: `if` block ends with a `return` statement, so drop this `else` and outdent its block (golint)\n\t} else { // \"1.2.3.4:31024\" or \"localhost:31024\"\n\t       ^\napi-runtime/rest-runtime/CBSpiderRuntime.go:320:6: func ApiServer should be APIServer (golint)\nfunc ApiServer(routes []route) {\n     ^\napi-runtime/rest-runtime/CBSpiderRuntime.go:328:2: don't use ALL_CAPS in Go names; use CamelCase (golint)\n\tAPI_USERNAME := os.Getenv(\"API_USERNAME\")\n\t^\napi-runtime/rest-runtime/CBSpiderRuntime.go:329:2: don't use ALL_CAPS in Go names; use CamelCase (golint)\n\tAPI_PASSWORD := os.Getenv(\"API_PASSWORD\")\n\t^\napi-runtime/rest-runtime/CCMRest.go:232:3: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (golint)\n\t\tIPv4_CIDR      string\n\t\t^\napi-runtime/rest-runtime/CCMRest.go:235:4: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (golint)\n\t\t\tIPv4_CIDR string\n\t\t\t^\napi-runtime/rest-runtime/CCMRest.go:425:4: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (golint)\n\t\t\tIPv4_CIDR string\n\t\t\t^\napi-runtime/rest-runtime/CCMRest.go:1129:4: struct field `VMUserId` should be `VMUserID` (golint)\n\t\t\tVMUserId     string\n\t\t\t^\ntest/interface-test/rest-scenario/echo_call.go:101:20: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr = errors.New(\"The number of params is not adapted.\")\n\t\t                 ^\ntest/interface-test/rest-scenario/setup.go:16:2: struct field `HttpMethod` should be `HTTPMethod` (golint)\n\tHttpMethod           string\n\t^\ninterface/api/ccm.go:63:2: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (golint)\n\tIPv4_CIDR      string        `yaml:\"IPv4_CIDR\" json:\"IPv4_CIDR\"`\n\t^\ninterface/api/ccm.go:70:2: don't use underscores in Go names; struct field IPv4_CIDR should be IPv4CIDR (golint)\n\tIPv4_CIDR string `yaml:\"IPv4_CIDR\" json:\"IPv4_CIDR\"`\n\t^\ninterface/api/ccm.go:129:2: struct field `VMUserId` should be `VMUserID` (golint)\n\tVMUserId     string `yaml:\"VMUserId\" json:\"VMUserId\"`\n\t^\ntest/interface-test/rest-go-equal-scenario/2_rest_grpc_equal_test.go:18:12: should omit 2nd value from range; this loop is equivalent to `for key := range ...` (golint)\n\t\tfor key, _ := range RestPrepareResult {\n\t\t         ^\ntest/interface-test/rest-go-equal-scenario/2_rest_grpc_equal_test.go:34:15: should omit 2nd value from range; this loop is equivalent to `for idx := range ...` (golint)\n\t\t\t\t\tfor idx, _ := range expect {\n\t\t\t\t\t         ^\ntest/interface-test/go-scenario/method_call.go:19:20: error strings should not be capitalized or end with punctuation or a newline (golint)\n\t\terr = errors.New(\"The number of params is not adapted.\")\n\t\t                 ^\ntest/interface-test/go-scenario/setup.go:39:2: var `CimApi` should be `CimAPI` (golint)\n\tCimApi     *api.CIMApi  = nil\n\t^\ntest/interface-test/go-scenario/setup.go:40:2: var `CcmApi` should be `CcmAPI` (golint)\n\tCcmApi     *api.CCMApi  = nil\n\t^\n"},"ineffassign":{"run":1,"cnt":50,"details":"api-runtime/grpc-runtime/common/cbconnection.go:48:3: ineffectual assignment to tracer (ineffassign)\n\t\ttracer opentracing.Tracer = nil\n\t\t^\napi-runtime/grpc-runtime/common/cbserver.go:57:3: ineffectual assignment to tracer (ineffassign)\n\t\ttracer      opentracing.Tracer             = nil\n\t\t^\napi-runtime/meerkat-runtime/common/runcommand.go:36:13: ineffectual assignment to strResult (ineffassign)\n        var strResult string = \"\"\n            ^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/Test_Resources.go:161:2: ineffectual assignment to reqRegion (ineffassign)\n\treqRegion := config.Ali.Region\n\t^\ncloud-control-manager/cloud-driver/drivers/alibaba/main/old/TR.go:163:2: ineffectual assignment to reqRegion (ineffassign)\n\treqRegion := config.Ali.Region\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:213:2: ineffectual assignment to securityId (ineffassign)\n\tsecurityId = \"sg-0101df0e8d4f27fec\"\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:586:2: ineffectual assignment to reqSubnetId (ineffassign)\n\treqSubnetId := irs.IID{SystemId: \"vpc-04f6de5c2af880978\"}\n\t^\ncloud-control-manager/cloud-driver/drivers/aws/main/Test_Resources.go:1034:2: ineffectual assignment to reqRegion (ineffassign)\n\treqRegion := config.Aws.Region\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:69:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, VMClient, err := getVMClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:73:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, imageClient, err := getImageClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:77:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, publicIPClient, err := getPublicIPClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:81:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, sgClient, err := getSecurityGroupClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:85:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, vNicClient, err := getVNicClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:89:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, SubnetClient, err := getSubnetClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:93:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, VNetClient, err := getVNetworkClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:97:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, IPConfigClient, err := getIPConfigClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:101:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, VMImageClient, err := getVMImageClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:105:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, DiskClient, err := getDiskClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure/AzureDriver.go:144:6: ineffectual assignment to err (ineffassign)\n\trg, err := resourceClient.Get(ctx, region.ResourceGroup)\n\t    ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/ImageHandler.go:90:9: ineffectual assignment to err (ineffassign)\n\timage, err := imageHandler.Client.Get(imageHandler.Ctx, imageHandler.Region.ResourceGroup, imageReqInfo.IId.NameId, \"\")\n\t       ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/KeyPairHandler.go:170:14: ineffectual assignment to err (ineffassign)\n\thashString, err := CreateHashString(keyPairHandler.CredentialInfo)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:50:6: ineffectual assignment to err (ineffassign)\n\tvm, err := vmHandler.Client.Get(vmHandler.Ctx, vmHandler.Region.ResourceGroup, vmReqInfo.IId.NameId, compute.InstanceViewTypesInstanceView)\n\t    ^\ncloud-control-manager/cloud-driver/drivers/azure/resources/VMHandler.go:654:10: ineffectual assignment to err (ineffassign)\n\tsubnet, err := vmHandler.SubnetClient.Get(vmHandler.Ctx, vmHandler.Region.ResourceGroup, vmReqInfo.VpcIID.NameId, vmReqInfo.SubnetIID.NameId, \"\")\n\t        ^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:65:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, VMClient, err := getVMClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:69:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, imageClient, err := getImageClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:73:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, publicIPClient, err := getPublicIPClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:77:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, sgClient, err := getSecurityGroupClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:81:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, vNicClient, err := getVNicClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:85:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, SubnetClient, err := getSubnetClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:89:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, VNetClient, err := getVNetworkClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:93:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, IPConfigClient, err := getIPConfigClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:97:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, VMImageClient, err := getVMImageClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:101:2: ineffectual assignment to Ctx (ineffassign)\n\tCtx, DiskClient, err := getDiskClient(connectionInfo.CredentialInfo)\n\t^\ncloud-control-manager/cloud-driver/drivers/azure-plugin/AzureDriver-lib.go:140:6: ineffectual assignment to err (ineffassign)\n\trg, err := resourceClient.Get(ctx, region.ResourceGroup)\n\t    ^\ncloud-control-manager/cloud-driver/drivers/cloudit/resources/KeyPairHandler.go:171:14: ineffectual assignment to err (ineffassign)\n\thashString, err := CreateHashString(keyPairHandler.CredentialInfo)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:199:6: ineffectual assignment to err (ineffassign)\n\top, err := service.Instances.Insert(projectID, zone, instance).Do()\n\t    ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:327:8: ineffectual assignment to err (ineffassign)\n\tinst, err := service.Instances.Start(conf.ProjectID, zone, instanceName).Context(ctx).Do()\n\t      ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:338:8: ineffectual assignment to err (ineffassign)\n\tinst, err := service.Instances.Delete(conf.ProjectID, zone, instanceName).Context(ctx).Do()\n\t      ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:358:8: ineffectual assignment to err (ineffassign)\n\tlist, err := service.Addresses.List(conf.ProjectID, region).Context(ctx).Do()\n\t      ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:441:7: ineffectual assignment to err (ineffassign)\n\tres, err := json.Marshal(data)\n\t     ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/compute.go:460:18: ineffectual assignment to err (ineffassign)\n\tcomputeService, err := compute.New(client)\n\t                ^\ncloud-control-manager/cloud-driver/drivers/gcp/main/old/key.go:37:2: ineffectual assignment to err (ineffassign)\n\terr = writeKeyToFile([]byte(pubstr))\n\t^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:459:10: ineffectual assignment to err (ineffassign)\n\t\t\t\tres, err = req.PageToken(nextPageToken).Do()\n\t\t\t\t     ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/ImageHandler.go:580:10: ineffectual assignment to err (ineffassign)\n\t\t\t\tres, err = req.PageToken(nextPageToken).Do()\n\t\t\t\t     ^\ncloud-control-manager/cloud-driver/drivers/gcp/resources/VPCHandler.go:410:2: ineffectual assignment to region (ineffassign)\n\tregion := vVPCHandler.Region.Region\n\t^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/CommonOpenStackFunc.go:129:14: ineffectual assignment to err (ineffassign)\n\tflavorList, err := flavors.ExtractFlavors(pages)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/openstack/resources/VMHandler.go:213:18: ineffectual assignment to err (ineffassign)\n\t\t\tserverResult, err = servers.Get(vmHandler.Client, server.ID).Extract()\n\t\t\t              ^\ncloud-control-manager/vm-ssh/sshrun.go:93:10: ineffectual assignment to err (ineffassign)\n\tsshOut, err := session.StdoutPipe()\n\t        ^\ncloud-info-manager/connection-config-info-manager/ConnectionConfigInfoManager.go:54:14: ineffectual assignment to err (ineffassign)\n\ttmpcncInfo, err := getInfo(configName)\n\t            ^\ncloud-control-manager/cloud-driver/drivers/mock/test/image_test.go:87:2: ineffectual assignment to infoList (ineffassign)\n\tinfoList, err := imageHandler.ListImage()\n\t^\n"},"misspell":{"run":1,"cnt":4,"details":"api-runtime/meerkat-runtime/momkat/MomKat.go:67:7: `sould` is a misspelling of `could` (misspell)\n\t\t\t// sould clone info object because childKatStatusInfo is a point of childKatStatusInfoList's children\n\t\t\t   ^\napi-runtime/meerkat-runtime/momkat/MomKat.go:94:7: `retrive` is a misspelling of `retrieve` (misspell)\n// 1. retrive first command from Sheets\n      ^\ntest/interface-test/go-scenario/go_full_doc_arg_test.go:8:45: `doccument` is a misspelling of `document` (misspell)\n\tt.Run(\"go api full test for mock driver by doccument args style\", func(t *testing.T) {\n\t                                           ^\ncloud-control-manager/cloud-driver/interfaces/resources/VMHandler.go:69:48: `flavour` is a misspelling of `flavor` (misspell)\n\tVMSpecName        string //  instance type or flavour, etc... ex) t2.micro or f1.micro\n\t                                              ^\n"}},"test":{"unit":{"run":1,"check":0,"details":"warning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/interface/api/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/interface/cli/spider\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info\nwarning: no packages being tested depend on matches for pattern \n=== RUN   TestCliFullJson\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_cloud_os\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_cloud_driver\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_cloud_driver\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_cloud_driver\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_credential\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_credential\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_credential\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_region\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_region\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_region\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_connection_config\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_connection_config\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_connection_config\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_vpc\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/add_subnet\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vpc\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vpc\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_security\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_security\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_security\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_keypair\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_keypair\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_keypair\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/start_vm\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vm\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vm\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vm_status\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vm_status\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/terminate_vm\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_keypair\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_security\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/remove_subnet\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_vpc\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_connection_config\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_region\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_credential\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_cloud_driver\n--- PASS: TestCliFullJson (2.06s)\n    --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver (2.06s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_cloud_os (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_cloud_driver (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_cloud_driver (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_credential (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_credential (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_region (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_region (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_connection_config (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_connection_config (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/add_subnet (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vpc (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vpc (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_security (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_security (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_keypair (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_keypair (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vm (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vm (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vm_status (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vm_status (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/terminate_vm (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_keypair (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_security (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/remove_subnet (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_vpc (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_connection_config (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_region (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_credential (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_cloud_driver (0.00s)\n=== RUN   TestCliFullYaml\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_cloud_os\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_cloud_driver\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_cloud_driver\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_cloud_driver\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_credential\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_credential\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_credential\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_region\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_region\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_region\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_connection_config\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_connection_config\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_connection_config\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_vpc\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/add_subnet\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vpc\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vpc\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_security\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_security\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_security\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_keypair\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_keypair\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_keypair\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/start_vm\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vm\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vm\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vm_status\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vm_status\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/terminate_vm\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_keypair\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_security\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/remove_subnet\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_vpc\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_connection_config\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_region\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_credential\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_cloud_driver\n--- PASS: TestCliFullYaml (2.06s)\n    --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver (2.06s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_cloud_os (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_cloud_driver (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_cloud_driver (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_credential (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_credential (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_region (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_region (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_connection_config (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_connection_config (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/add_subnet (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vpc (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vpc (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_security (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_security (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_keypair (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_keypair (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vm (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vm (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vm_status (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vm_status (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/terminate_vm (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_keypair (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_security (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/remove_subnet (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_vpc (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_connection_config (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_region (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_credential (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_cloud_driver (0.00s)\n=== RUN   TestCliMiscJson\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_cloud_driver\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_credential\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_region\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_connection_config\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_image\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_image\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_image\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_vmspec\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_vmspec\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_org_vmspec\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_org_vmspec\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_vpc\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_vpc\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_security\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_security\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_keypair\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_keypair\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/start_vm\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_vm\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/terminate_csp_vm\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_keypair\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_security\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/remove_csp_subnet\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_vpc\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_image\n--- PASS: TestCliMiscJson (2.04s)\n    --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver (2.04s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_image (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_image (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_image (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_vmspec (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_vmspec (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_org_vmspec (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_org_vmspec (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_vpc (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_security (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_keypair (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_vm (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/terminate_csp_vm (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_keypair (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_security (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/remove_csp_subnet (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_vpc (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_image (0.00s)\n=== RUN   TestCliMiscYaml\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_cloud_driver\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_credential\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_region\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_connection_config\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_image\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_image\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_image\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_vmspec\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_vmspec\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_org_vmspec\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_org_vmspec\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_vpc\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_vpc\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_security\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_security\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_keypair\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_keypair\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/start_vm\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_vm\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/terminate_csp_vm\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_keypair\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_security\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/remove_csp_subnet\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_vpc\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_image\n--- PASS: TestCliMiscYaml (2.04s)\n    --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver (2.04s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_image (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_image (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_image (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_vmspec (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_vmspec (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_org_vmspec (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_org_vmspec (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_vpc (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_security (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_keypair (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_vm (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/terminate_csp_vm (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_keypair (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_security (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/remove_csp_subnet (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_vpc (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_image (0.00s)\nPASS\ncoverage: 39.3% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \nok  \tgithub.com/cloud-barista/poc-cicd-spider/test/interface-test/cli-scenario\t14.640s\tcoverage: 39.3% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \n=== RUN   TestGoFullDocArg\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_cloud_os\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_cloud_driver\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_cloud_driver\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_cloud_driver\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_credential\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_credential\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_credential\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_region\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_region\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_region\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_connection_config\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_connection_config\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_connection_config\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_vpc\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/add_subnet\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vpc\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vpc\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_security\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_security\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_security\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_keypair\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_keypair\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_keypair\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/start_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vm_status\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vm_status\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/suspend_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/resume_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/reboot_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/terminate_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_keypair\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_security\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/remove_subnet\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_vpc\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_connection_config\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_region\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_credential\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_cloud_driver\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/ssh_run\n--- PASS: TestGoFullDocArg (2.02s)\n    --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style (2.02s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_cloud_os (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_cloud_driver (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_cloud_driver (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_cloud_driver (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_credential (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_credential (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_credential (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_region (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_region (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_region (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_connection_config (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_connection_config (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_connection_config (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_vpc (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/add_subnet (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vpc (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vpc (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_security (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_security (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_security (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_keypair (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_keypair (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_keypair (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/start_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vm_status (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vm_status (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/suspend_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/resume_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/reboot_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/terminate_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_keypair (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_security (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/remove_subnet (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_vpc (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_connection_config (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_region (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_credential (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_cloud_driver (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/ssh_run (0.00s)\n=== RUN   TestGoFullParamArg\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_cloud_os\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_cloud_driver\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_cloud_driver\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_cloud_driver\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_credential\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_credential\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_credential\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_region\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_region\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_region\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_connection_config\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_connection_config\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_connection_config\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_vpc\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/add_subnet\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vpc\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vpc\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_security\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_security\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_security\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_keypair\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_keypair\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_keypair\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/start_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vm_status\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vm_status\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/suspend_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/resume_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/reboot_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/terminate_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_keypair\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_security\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/remove_subnet\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_vpc\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_connection_config\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_region\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_credential\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_cloud_driver\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/ssh_run\n--- PASS: TestGoFullParamArg (2.02s)\n    --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style (2.02s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_cloud_os (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_cloud_driver (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_cloud_driver (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_cloud_driver (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_credential (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_credential (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_credential (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_region (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_region (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_region (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_connection_config (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_connection_config (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_connection_config (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_vpc (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/add_subnet (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vpc (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vpc (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_security (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_security (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_security (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_keypair (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_keypair (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_keypair (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/start_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vm_status (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vm_status (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/suspend_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/resume_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/reboot_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/terminate_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_keypair (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_security (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/remove_subnet (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_vpc (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_connection_config (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_region (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_credential (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_cloud_driver (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/ssh_run (0.00s)\n=== RUN   TestGoMiscDocArg\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_cloud_driver\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_credential\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_region\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_connection_config\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_image\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_image\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_image\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_vmspec\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_vmspec\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_org_vmspec\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_org_vmspec\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_vpc\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_vpc\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_security\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_security\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_keypair\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_keypair\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/start_vm\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_vm\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/terminate_csp_vm\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_keypair\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_security\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/remove_csp_subnet\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_vpc\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_image\n--- PASS: TestGoMiscDocArg (2.02s)\n    --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style (2.02s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_cloud_driver (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_credential (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_region (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_connection_config (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_image (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_image (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_image (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_vmspec (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_vmspec (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_org_vmspec (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_org_vmspec (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_vpc (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_vpc (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_security (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_security (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_keypair (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_keypair (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/start_vm (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_vm (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/terminate_csp_vm (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_keypair (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_security (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/remove_csp_subnet (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_vpc (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_image (0.00s)\n=== RUN   TestGoMiscParamArg\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_cloud_driver\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_credential\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_region\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_connection_config\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_image\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_image\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_image\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_vmspec\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_vmspec\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_org_vmspec\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_org_vmspec\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_vpc\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_vpc\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_security\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_security\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_keypair\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_keypair\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/start_vm\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_vm\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/terminate_csp_vm\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_keypair\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_security\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/remove_csp_subnet\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_vpc\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_image\n--- PASS: TestGoMiscParamArg (2.02s)\n    --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style (2.02s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_cloud_driver (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_credential (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_region (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_connection_config (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_image (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_image (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_image (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_vmspec (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_vmspec (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_org_vmspec (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_org_vmspec (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_vpc (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_vpc (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_security (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_security (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_keypair (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_keypair (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/start_vm (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_vm (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/terminate_csp_vm (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_keypair (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_security (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/remove_csp_subnet (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_vpc (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_image (0.00s)\n=== RUN   TestGoMisc\n=== RUN   TestGoMisc/go_api_misc_test\n--- PASS: TestGoMisc (2.00s)\n    --- PASS: TestGoMisc/go_api_misc_test (2.00s)\nPASS\ncoverage: 39.2% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \nok  \tgithub.com/cloud-barista/poc-cicd-spider/test/interface-test/go-scenario\t15.465s\tcoverage: 39.2% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \n=== RUN   TestPrepareFull\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/register_cloud_driver\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_cloud_driver_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_cloud_driver_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/register_credential\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/register_region\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_region_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_region_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/create_connection_config\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_connection_config_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_connection_config_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/create_vpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/add_subnet\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vpc_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vpc_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/create_security\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_security_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_security_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/create_keypair\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_keypair_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_keypair_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/start_vm\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_status_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_status_for_grpc\n--- PASS: TestPrepareFull (2.01s)\n    --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver (2.01s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_cloud_driver_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_cloud_driver_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_region_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_region_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_connection_config_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_connection_config_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/add_subnet (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vpc_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vpc_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_security_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_security_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_keypair_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_keypair_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_status_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_status_for_grpc (0.00s)\n=== RUN   TestRestGoEqualFull\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_region\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_connection_config\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_vpc\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_security\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_keypair\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_vm\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_vm_status\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_cloud_driver\n--- PASS: TestRestGoEqualFull (0.00s)\n    --- PASS: TestRestGoEqualFull/rest_go_equal_full_test (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_region (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_connection_config (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_vpc (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_security (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_keypair (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_vm (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_vm_status (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_cloud_driver (0.00s)\nPASS\ncoverage: 14.5% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \nok  \tgithub.com/cloud-barista/poc-cicd-spider/test/interface-test/rest-go-equal-scenario\t7.264s\tcoverage: 14.5% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \n=== RUN   TestRestDuplicate\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_cloud_driver\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_cloud_driver(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_credential\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_credential(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_region\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_region(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_connection_config\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_connection_config(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_vpc\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_vpc(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/add_subnet\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/add_subnet(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_security\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_security(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_keypair\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_keypair(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/start_vm\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/start_vm(duplicate)\n--- PASS: TestRestDuplicate (0.01s)\n    --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver (0.01s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_cloud_driver(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_credential(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_region(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_connection_config(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_vpc(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/add_subnet (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/add_subnet(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_security(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_keypair(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/start_vm(duplicate) (0.00s)\n=== RUN   TestRestEmpty\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_cloud_os\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_cloud_driver\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_cloud_driver\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 DriverInfoManager.go:91, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager.GetCloudDriver() - mock-unit-driver01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_credential\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_credential\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CredentialInfoManager.go:98, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager.GetCredential() - mock-unit-credential01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_region\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_region\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 RegionInfoManager.go:85, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager.GetRegion() - mock-unit-region01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_connection_config\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_connection_config\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vpc\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:566, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ListVPC() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vpc\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:656, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.GetVPC() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_security\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:866, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ListSecurity() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_security\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:943, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.GetSecurity() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_keypair\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1051, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ListKey() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_keypair\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1113, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.GetKey() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1342, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ListVM() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1482, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.GetVM() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vm_status\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1540, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ListVMStatus() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vm_status\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1602, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.GetVMStatus() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/suspend_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1638, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ControlVM() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/resume_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1638, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ControlVM() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/reboot_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1638, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ControlVM() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/terminate_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1893, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.DeleteResource() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_keypair\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1893, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.DeleteResource() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_security\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1893, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.DeleteResource() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/remove_subnet\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1893, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.DeleteResource() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_vpc\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1893, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.DeleteResource() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_connection_config\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:117, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.DeleteConnectionConfig() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_region\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 RegionInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager.UnRegisterRegion() - mock-unit-region01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_credential\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CredentialInfoManager.go:203, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager.UnRegisterCredential() - mock-unit-credential01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_cloud_driver\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 DriverInfoManager.go:107, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager.UnRegisterCloudDriver() - mock-unit-driver01: does not exist! \n--- PASS: TestRestEmpty (0.00s)\n    --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_cloud_os (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_cloud_driver (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_cloud_driver (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_credential (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_credential (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_region (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_region (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_connection_config (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_connection_config (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vpc (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vpc (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_security (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_security (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_keypair (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_keypair (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vm_status (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vm_status (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/suspend_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/resume_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/reboot_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/terminate_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_keypair (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_security (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/remove_subnet (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_vpc (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_connection_config (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_region (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_credential (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_cloud_driver (0.00s)\n=== RUN   TestRestFull\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_cloud_os\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/register_cloud_driver\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_cloud_driver\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_cloud_driver\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/register_credential\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_credential\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_credential\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/register_region\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_region\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_region\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/create_connection_config\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_connection_config\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_connection_config\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/create_vpc\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/add_subnet\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_vpc\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_vpc\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/create_security\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_security\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_security\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/create_keypair\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_keypair\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_keypair\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/start_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_vm_status\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_vm_status\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/suspend_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/resume_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/reboot_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/terminate_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/delete_keypair\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/delete_security\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/remove_subnet\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/delete_vpc\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/delete_connection_config\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/unregister_region\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/unregister_credential\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/unregister_cloud_driver\n=== RUN   TestRestFull/sshrun_test\n=== RUN   TestRestFull/sshrun_test/ssh_run\n--- PASS: TestRestFull (0.01s)\n    --- PASS: TestRestFull/rest_api_full_test_for_mock_driver (0.01s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_cloud_os (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_cloud_driver (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_cloud_driver (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_credential (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_credential (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_region (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_region (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_connection_config (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_connection_config (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/add_subnet (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_vpc (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_vpc (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_security (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_security (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_keypair (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_keypair (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_vm_status (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_vm_status (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/suspend_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/resume_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/reboot_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/terminate_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/delete_keypair (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/delete_security (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/remove_subnet (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/delete_vpc (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/delete_connection_config (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/unregister_region (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/unregister_credential (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/unregister_cloud_driver (0.00s)\n    --- PASS: TestRestFull/sshrun_test (0.00s)\n        --- PASS: TestRestFull/sshrun_test/ssh_run (0.00s)\n=== RUN   TestRestMisc\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/endpoint_info\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/register_cloud_driver\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/register_credential\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/register_region\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/create_connection_config\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/create_image\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_image\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/get_image\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_vmspec\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/get_vmspec\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_org_vmspec\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/get_org_vmspec\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/create_vpc\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_vpc\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/create_security\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_security\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/create_keypair\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_keypair\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/start_vm\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_vm\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/terminate_csp_vm\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_keypair\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_security\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/remove_csp_subnet\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_vpc\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/delete_image\n--- PASS: TestRestMisc (0.01s)\n    --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver (0.01s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/endpoint_info (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/create_image (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_image (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/get_image (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_vmspec (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/get_vmspec (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_org_vmspec (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/get_org_vmspec (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_vpc (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_security (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_keypair (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_vm (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/terminate_csp_vm (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_keypair (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_security (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/remove_csp_subnet (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_vpc (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/delete_image (0.00s)\nPASS\ncoverage: 7.7% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \nok  \tgithub.com/cloud-barista/poc-cicd-spider/test/interface-test/rest-scenario\t5.414s\tcoverage: 7.7% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \n","allCnt":436,"failCnt":0},"coverage":{"run":1,"check":0,"details":"warning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/interface/api/test\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/interface/cli/spider\nwarning: no packages being tested depend on matches for pattern github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info\nwarning: no packages being tested depend on matches for pattern \n=== RUN   TestCliFullJson\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_cloud_os\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_cloud_driver\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_cloud_driver\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_cloud_driver\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_credential\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_credential\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_credential\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_region\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_region\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_region\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_connection_config\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_connection_config\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_connection_config\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_vpc\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/add_subnet\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vpc\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vpc\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_security\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_security\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_security\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_keypair\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_keypair\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_keypair\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/start_vm\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vm\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vm\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vm_status\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vm_status\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/terminate_vm\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_keypair\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_security\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/remove_subnet\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_vpc\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_connection_config\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_region\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_credential\n=== RUN   TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_cloud_driver\n--- PASS: TestCliFullJson (2.06s)\n    --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver (2.06s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_cloud_os (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_cloud_driver (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_cloud_driver (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_credential (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_credential (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_region (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_region (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_connection_config (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_connection_config (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/add_subnet (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vpc (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vpc (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_security (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_security (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_keypair (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_keypair (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vm (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vm (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/list_vm_status (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/get_vm_status (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/terminate_vm (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_keypair (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_security (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/remove_subnet (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_vpc (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/delete_connection_config (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_region (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_credential (0.00s)\n        --- PASS: TestCliFullJson/command_full_json_in/out_test_for_mock_driver/unregister_cloud_driver (0.00s)\n=== RUN   TestCliFullYaml\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_cloud_os\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_cloud_driver\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_cloud_driver\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_cloud_driver\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_credential\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_credential\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_credential\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_region\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_region\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_region\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_connection_config\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_connection_config\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_connection_config\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_vpc\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/add_subnet\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vpc\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vpc\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_security\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_security\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_security\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_keypair\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_keypair\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_keypair\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/start_vm\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vm\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vm\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vm_status\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vm_status\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/terminate_vm\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_keypair\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_security\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/remove_subnet\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_vpc\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_connection_config\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_region\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_credential\n=== RUN   TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_cloud_driver\n--- PASS: TestCliFullYaml (2.06s)\n    --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver (2.06s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_cloud_os (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_cloud_driver (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_cloud_driver (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_credential (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_credential (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_region (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_region (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_connection_config (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_connection_config (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/add_subnet (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vpc (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vpc (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_security (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_security (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_keypair (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_keypair (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vm (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vm (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/list_vm_status (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/get_vm_status (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/terminate_vm (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_keypair (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_security (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/remove_subnet (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_vpc (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/delete_connection_config (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_region (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_credential (0.00s)\n        --- PASS: TestCliFullYaml/command_full_yaml_in/out_test_for_mock_driver/unregister_cloud_driver (0.00s)\n=== RUN   TestCliMiscJson\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_cloud_driver\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_credential\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_region\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_connection_config\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_image\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_image\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_image\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_vmspec\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_vmspec\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_org_vmspec\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_org_vmspec\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_vpc\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_vpc\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_security\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_security\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_keypair\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_keypair\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/start_vm\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_vm\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/terminate_csp_vm\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_keypair\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_security\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/remove_csp_subnet\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_vpc\n=== RUN   TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_image\n--- PASS: TestCliMiscJson (2.04s)\n    --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver (2.04s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_image (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_image (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_image (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_vmspec (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_vmspec (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_org_vmspec (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/get_org_vmspec (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_vpc (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_security (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_keypair (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/list_all_vm (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/terminate_csp_vm (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_keypair (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_security (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/remove_csp_subnet (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_csp_vpc (0.00s)\n        --- PASS: TestCliMiscJson/command_misc_json_in/out_test_for_mock_driver/delete_image (0.00s)\n=== RUN   TestCliMiscYaml\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_cloud_driver\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_credential\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_region\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_connection_config\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_image\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_image\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_image\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_vmspec\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_vmspec\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_org_vmspec\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_org_vmspec\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_vpc\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_vpc\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_security\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_security\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_keypair\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_keypair\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/start_vm\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_vm\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/terminate_csp_vm\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_keypair\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_security\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/remove_csp_subnet\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_vpc\n=== RUN   TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_image\n--- PASS: TestCliMiscYaml (2.04s)\n    --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver (2.04s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_image (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_image (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_image (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_vmspec (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_vmspec (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_org_vmspec (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/get_org_vmspec (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_vpc (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_security (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_keypair (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/list_all_vm (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/terminate_csp_vm (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_keypair (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_security (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/remove_csp_subnet (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_csp_vpc (0.00s)\n        --- PASS: TestCliMiscYaml/command_misc_yaml_in/out_test_for_mock_driver/delete_image (0.00s)\nPASS\ncoverage: 39.3% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \nok  \tgithub.com/cloud-barista/poc-cicd-spider/test/interface-test/cli-scenario\t14.640s\tcoverage: 39.3% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \n=== RUN   TestGoFullDocArg\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_cloud_os\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_cloud_driver\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_cloud_driver\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_cloud_driver\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_credential\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_credential\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_credential\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_region\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_region\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_region\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_connection_config\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_connection_config\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_connection_config\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_vpc\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/add_subnet\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vpc\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vpc\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_security\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_security\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_security\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_keypair\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_keypair\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_keypair\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/start_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vm_status\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vm_status\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/suspend_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/resume_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/reboot_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/terminate_vm\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_keypair\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_security\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/remove_subnet\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_vpc\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_connection_config\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_region\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_credential\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_cloud_driver\n=== RUN   TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/ssh_run\n--- PASS: TestGoFullDocArg (2.02s)\n    --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style (2.02s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_cloud_os (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_cloud_driver (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_cloud_driver (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_cloud_driver (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_credential (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_credential (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_credential (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/register_region (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_region (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_region (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_connection_config (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_connection_config (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_connection_config (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_vpc (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/add_subnet (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vpc (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vpc (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_security (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_security (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_security (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/create_keypair (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_keypair (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_keypair (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/start_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/list_vm_status (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/get_vm_status (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/suspend_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/resume_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/reboot_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/terminate_vm (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_keypair (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_security (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/remove_subnet (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_vpc (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/delete_connection_config (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_region (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_credential (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/unregister_cloud_driver (0.00s)\n        --- PASS: TestGoFullDocArg/go_api_full_test_for_mock_driver_by_doccument_args_style/ssh_run (0.00s)\n=== RUN   TestGoFullParamArg\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_cloud_os\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_cloud_driver\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_cloud_driver\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_cloud_driver\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_credential\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_credential\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_credential\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_region\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_region\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_region\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_connection_config\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_connection_config\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_connection_config\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_vpc\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/add_subnet\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vpc\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vpc\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_security\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_security\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_security\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_keypair\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_keypair\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_keypair\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/start_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vm_status\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vm_status\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/suspend_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/resume_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/reboot_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/terminate_vm\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_keypair\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_security\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/remove_subnet\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_vpc\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_connection_config\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_region\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_credential\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_cloud_driver\n=== RUN   TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/ssh_run\n--- PASS: TestGoFullParamArg (2.02s)\n    --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style (2.02s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_cloud_os (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_cloud_driver (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_cloud_driver (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_cloud_driver (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_credential (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_credential (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_credential (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/register_region (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_region (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_region (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_connection_config (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_connection_config (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_connection_config (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_vpc (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/add_subnet (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vpc (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vpc (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_security (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_security (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_security (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/create_keypair (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_keypair (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_keypair (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/start_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/list_vm_status (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/get_vm_status (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/suspend_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/resume_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/reboot_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/terminate_vm (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_keypair (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_security (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/remove_subnet (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_vpc (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/delete_connection_config (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_region (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_credential (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/unregister_cloud_driver (0.00s)\n        --- PASS: TestGoFullParamArg/go_api_full_test_for_mock_driver_by_parameter_args_style/ssh_run (0.00s)\n=== RUN   TestGoMiscDocArg\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_cloud_driver\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_credential\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_region\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_connection_config\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_image\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_image\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_image\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_vmspec\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_vmspec\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_org_vmspec\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_org_vmspec\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_vpc\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_vpc\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_security\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_security\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_keypair\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_keypair\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/start_vm\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_vm\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/terminate_csp_vm\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_keypair\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_security\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/remove_csp_subnet\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_vpc\n=== RUN   TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_image\n--- PASS: TestGoMiscDocArg (2.02s)\n    --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style (2.02s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_cloud_driver (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_credential (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/register_region (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_connection_config (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_image (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_image (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_image (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_vmspec (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_vmspec (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_org_vmspec (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/get_org_vmspec (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_vpc (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_vpc (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_security (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_security (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/create_keypair (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_keypair (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/start_vm (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/list_all_vm (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/terminate_csp_vm (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_keypair (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_security (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/remove_csp_subnet (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_csp_vpc (0.00s)\n        --- PASS: TestGoMiscDocArg/go_api_misc_test_for_mock_driver_by_document_args_style/delete_image (0.00s)\n=== RUN   TestGoMiscParamArg\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_cloud_driver\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_credential\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_region\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_connection_config\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_image\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_image\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_image\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_vmspec\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_vmspec\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_org_vmspec\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_org_vmspec\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_vpc\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_vpc\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_security\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_security\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_keypair\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_keypair\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/start_vm\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_vm\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/terminate_csp_vm\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_keypair\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_security\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/remove_csp_subnet\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_vpc\n=== RUN   TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_image\n--- PASS: TestGoMiscParamArg (2.02s)\n    --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style (2.02s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_cloud_driver (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_credential (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/register_region (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_connection_config (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_image (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_image (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_image (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_vmspec (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_vmspec (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_org_vmspec (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/get_org_vmspec (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_vpc (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_vpc (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_security (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_security (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/create_keypair (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_keypair (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/start_vm (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/list_all_vm (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/terminate_csp_vm (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_keypair (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_security (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/remove_csp_subnet (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_csp_vpc (0.00s)\n        --- PASS: TestGoMiscParamArg/go_api_misc_test_for_mock_driver_by_parameter_args_style/delete_image (0.00s)\n=== RUN   TestGoMisc\n=== RUN   TestGoMisc/go_api_misc_test\n--- PASS: TestGoMisc (2.00s)\n    --- PASS: TestGoMisc/go_api_misc_test (2.00s)\nPASS\ncoverage: 39.2% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \nok  \tgithub.com/cloud-barista/poc-cicd-spider/test/interface-test/go-scenario\t15.465s\tcoverage: 39.2% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \n=== RUN   TestPrepareFull\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/register_cloud_driver\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_cloud_driver_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_cloud_driver_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/register_credential\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/register_region\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_region_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_region_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/create_connection_config\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_connection_config_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_connection_config_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/create_vpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/add_subnet\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vpc_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vpc_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/create_security\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_security_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_security_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/create_keypair\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_keypair_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_keypair_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/start_vm\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_for_grpc\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_status_for_rest\n=== RUN   TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_status_for_grpc\n--- PASS: TestPrepareFull (2.01s)\n    --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver (2.01s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_cloud_driver_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_cloud_driver_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_region_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_region_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_connection_config_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_connection_config_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/add_subnet (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vpc_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vpc_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_security_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_security_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_keypair_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_keypair_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_for_grpc (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_status_for_rest (0.00s)\n        --- PASS: TestPrepareFull/prepare_full_test_for_mock_driver/list_vm_status_for_grpc (0.00s)\n=== RUN   TestRestGoEqualFull\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_region\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_connection_config\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_vpc\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_security\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_keypair\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_vm\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_vm_status\n=== RUN   TestRestGoEqualFull/rest_go_equal_full_test/list_cloud_driver\n--- PASS: TestRestGoEqualFull (0.00s)\n    --- PASS: TestRestGoEqualFull/rest_go_equal_full_test (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_region (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_connection_config (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_vpc (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_security (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_keypair (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_vm (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_vm_status (0.00s)\n        --- PASS: TestRestGoEqualFull/rest_go_equal_full_test/list_cloud_driver (0.00s)\nPASS\ncoverage: 14.5% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \nok  \tgithub.com/cloud-barista/poc-cicd-spider/test/interface-test/rest-go-equal-scenario\t7.264s\tcoverage: 14.5% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \n=== RUN   TestRestDuplicate\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_cloud_driver\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_cloud_driver(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_credential\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_credential(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_region\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_region(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_connection_config\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_connection_config(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_vpc\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_vpc(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/add_subnet\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/add_subnet(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_security\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_security(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_keypair\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_keypair(duplicate)\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/start_vm\n=== RUN   TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/start_vm(duplicate)\n--- PASS: TestRestDuplicate (0.01s)\n    --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver (0.01s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_cloud_driver(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_credential(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/register_region(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_connection_config(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_vpc(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/add_subnet (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/add_subnet(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_security(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/create_keypair(duplicate) (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestRestDuplicate/rest_api_duplicate_test_for_mock_driver/start_vm(duplicate) (0.00s)\n=== RUN   TestRestEmpty\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_cloud_os\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_cloud_driver\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_cloud_driver\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 DriverInfoManager.go:91, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager.GetCloudDriver() - mock-unit-driver01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_credential\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_credential\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CredentialInfoManager.go:98, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager.GetCredential() - mock-unit-credential01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_region\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_region\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 RegionInfoManager.go:85, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager.GetRegion() - mock-unit-region01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_connection_config\n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_connection_config\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vpc\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:566, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ListVPC() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vpc\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:656, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.GetVPC() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_security\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:866, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ListSecurity() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_security\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:943, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.GetSecurity() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_keypair\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1051, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ListKey() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_keypair\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1113, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.GetKey() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1342, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ListVM() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1482, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.GetVM() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vm_status\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1540, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ListVMStatus() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vm_status\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1602, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.GetVMStatus() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/suspend_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1638, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ControlVM() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/resume_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1638, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ControlVM() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/reboot_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1638, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.ControlVM() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/terminate_vm\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1893, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.DeleteResource() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_keypair\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1893, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.DeleteResource() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_security\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1893, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.DeleteResource() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/remove_subnet\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1893, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.DeleteResource() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_vpc\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.GetConnectionConfig() - mock-unit-config01: does not exist! \n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CCMCommon.go:1893, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime.DeleteResource() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_connection_config\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 ConnectionConfigInfoManager.go:117, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager.DeleteConnectionConfig() - mock-unit-config01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_region\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 RegionInfoManager.go:101, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager.UnRegisterRegion() - mock-unit-region01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_credential\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 CredentialInfoManager.go:203, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager.UnRegisterCredential() - mock-unit-credential01: does not exist! \n=== RUN   TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_cloud_driver\n[CLOUD-BARISTA].[ERROR]: 2021-08-12 02:11:21 DriverInfoManager.go:107, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager.UnRegisterCloudDriver() - mock-unit-driver01: does not exist! \n--- PASS: TestRestEmpty (0.00s)\n    --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_cloud_os (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_cloud_driver (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_cloud_driver (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_credential (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_credential (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_region (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_region (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_connection_config (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_connection_config (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vpc (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vpc (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_security (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_security (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_keypair (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_keypair (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/list_vm_status (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/get_vm_status (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/suspend_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/resume_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/reboot_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/terminate_vm (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_keypair (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_security (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/remove_subnet (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_vpc (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/delete_connection_config (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_region (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_credential (0.00s)\n        --- PASS: TestRestEmpty/rest_api_empty_test_for_mock_driver/unregister_cloud_driver (0.00s)\n=== RUN   TestRestFull\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_cloud_os\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/register_cloud_driver\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_cloud_driver\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_cloud_driver\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/register_credential\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_credential\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_credential\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/register_region\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_region\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_region\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/create_connection_config\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_connection_config\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_connection_config\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/create_vpc\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/add_subnet\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_vpc\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_vpc\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/create_security\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_security\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_security\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/create_keypair\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_keypair\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_keypair\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/start_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/list_vm_status\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/get_vm_status\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/suspend_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/resume_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/reboot_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/terminate_vm\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/delete_keypair\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/delete_security\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/remove_subnet\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/delete_vpc\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/delete_connection_config\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/unregister_region\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/unregister_credential\n=== RUN   TestRestFull/rest_api_full_test_for_mock_driver/unregister_cloud_driver\n=== RUN   TestRestFull/sshrun_test\n=== RUN   TestRestFull/sshrun_test/ssh_run\n--- PASS: TestRestFull (0.01s)\n    --- PASS: TestRestFull/rest_api_full_test_for_mock_driver (0.01s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_cloud_os (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_cloud_driver (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_cloud_driver (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_credential (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_credential (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_region (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_region (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_connection_config (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_connection_config (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/add_subnet (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_vpc (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_vpc (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_security (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_security (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_keypair (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_keypair (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/list_vm_status (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/get_vm_status (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/suspend_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/resume_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/reboot_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/terminate_vm (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/delete_keypair (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/delete_security (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/remove_subnet (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/delete_vpc (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/delete_connection_config (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/unregister_region (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/unregister_credential (0.00s)\n        --- PASS: TestRestFull/rest_api_full_test_for_mock_driver/unregister_cloud_driver (0.00s)\n    --- PASS: TestRestFull/sshrun_test (0.00s)\n        --- PASS: TestRestFull/sshrun_test/ssh_run (0.00s)\n=== RUN   TestRestMisc\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/endpoint_info\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/register_cloud_driver\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/register_credential\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/register_region\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/create_connection_config\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/create_image\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_image\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/get_image\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_vmspec\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/get_vmspec\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_org_vmspec\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/get_org_vmspec\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/create_vpc\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_vpc\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/create_security\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_security\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/create_keypair\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_keypair\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/start_vm\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_vm\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/terminate_csp_vm\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_keypair\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_security\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/remove_csp_subnet\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_vpc\n=== RUN   TestRestMisc/rest_api_misc_test_for_mock_driver/delete_image\n--- PASS: TestRestMisc (0.01s)\n    --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver (0.01s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/endpoint_info (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/register_cloud_driver (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/register_credential (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/register_region (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/create_connection_config (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/create_image (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_image (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/get_image (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_vmspec (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/get_vmspec (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_org_vmspec (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/get_org_vmspec (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/create_vpc (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_vpc (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/create_security (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_security (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/create_keypair (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_keypair (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/start_vm (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/list_all_vm (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/terminate_csp_vm (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_keypair (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_security (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/remove_csp_subnet (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/delete_csp_vpc (0.00s)\n        --- PASS: TestRestMisc/rest_api_misc_test_for_mock_driver/delete_image (0.00s)\nPASS\ncoverage: 7.7% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \nok  \tgithub.com/cloud-barista/poc-cicd-spider/test/interface-test/rest-scenario\t5.414s\tcoverage: 7.7% of statements in github.com/cloud-barista/poc-cicd-spider/api-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/jwt-gen, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider, github.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler, github.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler/test, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web, github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/gen4test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/ibmcloud-vpc, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/main/old, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/Sample, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/main/conf, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent-plugin, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh, github.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager/test, github.com/cloud-barista/poc-cicd-spider/cloud-info-manager/test, github.com/cloud-barista/poc-cicd-spider/interface/api, github.com/cloud-barista/poc-cicd-spider/interface/api/request, github.com/cloud-barista/poc-cicd-spider/interface/api/test, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/cmd, github.com/cloud-barista/poc-cicd-spider/interface/cli/cbadm/proc, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider, github.com/cloud-barista/poc-cicd-spider/interface/cli/spider/cmd, github.com/cloud-barista/poc-cicd-spider/utils/import-drv-region-info, \n","total":"43.0%"}},"gobuild":{"run":1,"check":0,"details":"./cb-artifact-gobuild-1.16/build.log\n\nGolang 1.16 Build Success !!!\n\ngo: downloading github.com/go-resty/resty/v2 v2.6.0 go: downloading github.com/spf13/cobra v1.2.1 go: downloading github.com/cloud-barista/cb-store v0.4.1 go: downloading github.com/sirupsen/logrus v1.8.1 go: downloading google.golang.org/grpc v1.26.0 go: downloading github.com/cloud-barista/cb-log v0.4.0 go: downloading github.com/chyeh/pubip v0.0.0-20170203095919-b7e679cf541c go: downloading github.com/labstack/echo/v4 v4.3.0 go: downloading github.com/swaggo/echo-swagger v1.1.0 go: downloading github.com/spf13/pflag v1.0.5 go: downloading golang.org/x/net v0.0.0-20210716203947-853a461950ff go: downloading gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b go: downloading github.com/snowzach/rotatefilehook v0.0.0-20180327172521-2f64f265f58c go: downloading golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c go: downloading github.com/grpc-ecosystem/go-grpc-middleware v1.3.0 go: downloading github.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 go: downloading github.com/opentracing/opentracing-go v1.2.0 go: downloading github.com/prometheus/client_golang v1.11.0 go: downloading gopkg.in/yaml.v2 v2.4.0 go: downloading github.com/spf13/viper v1.8.1 go: downloading github.com/golang/protobuf v1.5.2 go: downloading google.golang.org/api v0.15.0 go: downloading golang.org/x/oauth2 v0.0.0-20210628180205-a41e5a781914 go: downloading github.com/jpillora/backoff v1.0.0 go: downloading github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751 go: downloading github.com/swaggo/swag v1.7.0 go: downloading github.com/bramvdbogaerde/go-scp v1.0.0 go: downloading golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97 go: downloading github.com/labstack/gommon v0.3.0 go: downloading github.com/dgrijalva/jwt-go v3.2.0+incompatible go: downloading github.com/valyala/fasttemplate v1.2.1 go: downloading golang.org/x/time v0.0.0-20201208040808-7e3f01d25324 go: downloading github.com/swaggo/files v0.0.0-20190704085106-630677cd5c14 go: downloading github.com/aliyun/alibaba-cloud-sdk-go v1.61.1181 go: downloading github.com/davecgh/go-spew v1.1.1 go: downloading github.com/aws/aws-sdk-go v1.39.4 go: downloading github.com/Azure/azure-sdk-for-go v55.6.0+incompatible go: downloading github.com/Azure/go-autorest v14.2.0+incompatible go: downloading github.com/Azure/go-autorest/autorest v0.11.17 go: downloading github.com/Azure/go-autorest/autorest/azure/auth v0.5.8 go: downloading github.com/Azure/go-autorest/autorest/to v0.4.0 go: downloading github.com/docker/docker v20.10.7+incompatible go: downloading github.com/gophercloud/gophercloud v0.18.0 go: downloading github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common v1.0.206 go: downloading github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/cvm v1.0.206 go: downloading github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/vpc v1.0.206 go: downloading gopkg.in/natefinch/lumberjack.v2 v2.0.0 go: downloading github.com/uber/jaeger-client-go v2.29.1+incompatible go: downloading github.com/beorn7/perks v1.0.1 go: downloading github.com/cespare/xxhash/v2 v2.1.1 go: downloading github.com/prometheus/client_model v0.2.0 go: downloading github.com/prometheus/common v0.26.0 go: downloading github.com/prometheus/procfs v0.6.0 go: downloading google.golang.org/genproto v0.0.0-20210719143636-1d5a45f8e492 go: downloading github.com/fsnotify/fsnotify v1.4.9 go: downloading github.com/hashicorp/hcl v1.0.0 go: downloading github.com/magiconair/properties v1.8.5 go: downloading github.com/mitchellh/mapstructure v1.4.1 go: downloading github.com/pelletier/go-toml v1.9.3 go: downloading github.com/spf13/afero v1.6.0 go: downloading github.com/spf13/cast v1.3.1 go: downloading github.com/spf13/jwalterweatherman v1.1.0 go: downloading github.com/subosito/gotenv v1.2.0 go: downloading gopkg.in/ini.v1 v1.62.0 go: downloading github.com/gogo/protobuf v1.3.2 go: downloading google.golang.org/protobuf v1.27.1 go: downloading cloud.google.com/go v0.65.0 go: downloading github.com/KyleBanks/depth v1.2.1 go: downloading github.com/go-openapi/spec v0.20.0 go: downloading golang.org/x/tools v0.1.5 go: downloading github.com/mattn/go-colorable v0.1.8 go: downloading github.com/mattn/go-isatty v0.0.12 go: downloading github.com/valyala/bytebufferpool v1.0.0 go: downloading github.com/Azure/go-autorest/autorest/date v0.3.0 go: downloading github.com/Azure/go-autorest/autorest/validation v0.3.1 go: downloading github.com/Azure/go-autorest/tracing v0.6.0 go: downloading github.com/Azure/go-autorest/autorest/adal v0.9.11 go: downloading github.com/Azure/go-autorest/autorest/azure/cli v0.4.2 go: downloading github.com/Azure/go-autorest/logger v0.2.0 go: downloading github.com/dimchansky/utfbom v1.1.1 go: downloading github.com/etcd-io/etcd v3.3.25+incompatible go: downloading github.com/xujiajun/nutsdb v0.6.0 go: downloading github.com/uber/jaeger-lib v2.4.0+incompatible go: downloading go.uber.org/atomic v1.9.0 go: downloading github.com/pkg/errors v0.9.1 go: downloading github.com/containerd/containerd v1.4.3 go: downloading github.com/docker/distribution v2.7.1+incompatible go: downloading github.com/docker/go-connections v0.4.0 go: downloading github.com/opencontainers/go-digest v1.0.0 go: downloading github.com/opencontainers/image-spec v1.0.1 go: downloading github.com/matttproud/golang_protobuf_extensions v1.0.1 go: downloading golang.org/x/text v0.3.6 go: downloading github.com/go-openapi/jsonpointer v0.19.5 go: downloading github.com/go-openapi/jsonreference v0.19.5 go: downloading github.com/go-openapi/swag v0.19.12 go: downloading github.com/googleapis/gax-go/v2 v2.0.5 go: downloading go.opencensus.io v0.22.4 go: downloading github.com/jmespath/go-jmespath v0.4.0 go: downloading github.com/json-iterator/go v1.1.11 go: downloading github.com/modern-go/reflect2 v1.0.1 go: downloading github.com/mitchellh/go-homedir v1.1.0 go: downloading github.com/form3tech-oss/jwt-go v3.2.2+incompatible go: downloading github.com/bwmarrin/snowflake v0.3.0 go: downloading github.com/xujiajun/mmap-go v1.0.1 go: downloading github.com/xujiajun/utils v0.0.0-20190123093513-8bf096c4f53b go: downloading github.com/docker/go-units v0.4.0 go: downloading github.com/coreos/etcd v3.3.25+incompatible go: downloading github.com/coreos/pkg v0.0.0-20180928190104-399ea9e2e55f go: downloading github.com/google/uuid v1.3.0 go: downloading go.uber.org/zap v1.18.1 go: downloading github.com/PuerkitoBio/purell v1.1.1 go: downloading github.com/mailru/easyjson v0.7.6 go: downloading github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd go: downloading github.com/coreos/go-semver v0.3.0 go: downloading github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf go: downloading github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578 go: downloading github.com/josharian/intern v1.0.0 go: downloading github.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e go: downloading go.uber.org/multierr v1.7.0\n\n"},"deploy":{"dockerBuild":{"run":1,"check":0,"details":"Sending build context to Docker daemon  5.171MB\r\r\nStep 1/24 : FROM golang:1.16 AS builder\n1.16: Pulling from library/golang\n627b765e08d1: Already exists\nc040670e5e55: Already exists\n073a180f4992: Already exists\nbf76209566d0: Already exists\n6182a456504b: Pulling fs layer\n636ca4e39e2f: Pulling fs layer\n9bf36a081430: Pulling fs layer\n9bf36a081430: Verifying Checksum\n9bf36a081430: Download complete\n6182a456504b: Verifying Checksum\n6182a456504b: Download complete\n636ca4e39e2f: Verifying Checksum\n636ca4e39e2f: Download complete\n6182a456504b: Pull complete\n636ca4e39e2f: Pull complete\n9bf36a081430: Pull complete\nDigest: sha256:3c4de86eec9cbc619cdd72424abd88326ffcf5d813a8338a7743c55e5898734f\nStatus: Downloaded newer image for golang:1.16\n ---> 0821480a2b48\nStep 2/24 : ENV GO111MODULE on\n ---> Running in 6d5cd1e68631\nRemoving intermediate container 6d5cd1e68631\n ---> 9fc2cc05c746\nStep 3/24 : ADD . /go/src/github.com/cloud-barista/poc-cicd-spider\n ---> 33832dd2dcee\nStep 4/24 : WORKDIR /go/src/github.com/cloud-barista/poc-cicd-spider\n ---> Running in 0d29eb406c78\nRemoving intermediate container 0d29eb406c78\n ---> 7bdf3c64bdc5\nStep 5/24 : WORKDIR api-runtime\n ---> Running in 2786f3799dae\nRemoving intermediate container 2786f3799dae\n ---> 695012c96473\nStep 6/24 : RUN GOOS=linux go build -tags cb-spider -o cb-spider -v\n ---> Running in f2c5233e823b\n\u001b[91mgo: downloading github.com/go-resty/resty/v2 v2.6.0\n\u001b[0m\u001b[91mgo: downloading github.com/spf13/cobra v1.2.1\n\u001b[0m\u001b[91mgo: downloading github.com/cloud-barista/cb-store v0.4.1\n\u001b[0m\u001b[91mgo: downloading github.com/sirupsen/logrus v1.8.1\n\u001b[0m\u001b[91mgo: downloading google.golang.org/grpc v1.26.0\n\u001b[0m\u001b[91mgo: downloading github.com/cloud-barista/cb-log v0.4.0\n\u001b[0m\u001b[91mgo: downloading github.com/chyeh/pubip v0.0.0-20170203095919-b7e679cf541c\n\u001b[0m\u001b[91mgo: downloading github.com/labstack/echo/v4 v4.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/swaggo/echo-swagger v1.1.0\n\u001b[0m\u001b[91mgo: downloading github.com/spf13/pflag v1.0.5\n\u001b[0m\u001b[91mgo: downloading golang.org/x/net v0.0.0-20210716203947-853a461950ff\n\u001b[0m\u001b[91mgo: downloading github.com/snowzach/rotatefilehook v0.0.0-20180327172521-2f64f265f58c\n\u001b[0m\u001b[91mgo: downloading gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b\n\u001b[0m\u001b[91mgo: downloading github.com/grpc-ecosystem/go-grpc-middleware v1.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/grpc-ecosystem/go-grpc-prometheus v1.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/opentracing/opentracing-go v1.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/client_golang v1.11.0\n\u001b[0m\u001b[91mgo: downloading gopkg.in/yaml.v2 v2.4.0\n\u001b[0m\u001b[91mgo: downloading github.com/spf13/viper v1.8.1\n\u001b[0m\u001b[91mgo: downloading github.com/golang/protobuf v1.5.2\n\u001b[0m\u001b[91mgo: downloading golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c\n\u001b[0m\u001b[91mgo: downloading google.golang.org/api v0.15.0\n\u001b[0m\u001b[91mgo: downloading golang.org/x/oauth2 v0.0.0-20210628180205-a41e5a781914\n\u001b[0m\u001b[91mgo: downloading github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751\n\u001b[0m\u001b[91mgo: downloading github.com/swaggo/swag v1.7.0\n\u001b[0m\u001b[91mgo: downloading github.com/bramvdbogaerde/go-scp v1.0.0\n\u001b[0m\u001b[91mgo: downloading golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97\n\u001b[0m\u001b[91mgo: downloading github.com/jpillora/backoff v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/labstack/gommon v0.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/dgrijalva/jwt-go v3.2.0+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/valyala/fasttemplate v1.2.1\n\u001b[0m\u001b[91mgo: downloading golang.org/x/time v0.0.0-20201208040808-7e3f01d25324\n\u001b[0m\u001b[91mgo: downloading github.com/swaggo/files v0.0.0-20190704085106-630677cd5c14\n\u001b[0m\u001b[91mgo: downloading github.com/aliyun/alibaba-cloud-sdk-go v1.61.1181\n\u001b[0m\u001b[91mgo: downloading github.com/davecgh/go-spew v1.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/aws/aws-sdk-go v1.39.4\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/azure-sdk-for-go v55.6.0+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/go-autorest v14.2.0+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/go-autorest/autorest v0.11.17\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/go-autorest/autorest/azure/auth v0.5.8\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/go-autorest/autorest/to v0.4.0\n\u001b[0m\u001b[91mgo: downloading github.com/docker/docker v20.10.7+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/gophercloud/gophercloud v0.18.0\n\u001b[0m\u001b[91mgo: downloading github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common v1.0.206\n\u001b[0m\u001b[91mgo: downloading github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/cvm v1.0.206\n\u001b[0m\u001b[91mgo: downloading github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/vpc v1.0.206\n\u001b[0m\u001b[91mgo: downloading gopkg.in/natefinch/lumberjack.v2 v2.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/uber/jaeger-client-go v2.29.1+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/beorn7/perks v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/cespare/xxhash/v2 v2.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/client_model v0.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/common v0.26.0\n\u001b[0m\u001b[91mgo: downloading github.com/prometheus/procfs v0.6.0\n\u001b[0m\u001b[91mgo: downloading google.golang.org/genproto v0.0.0-20210719143636-1d5a45f8e492\n\u001b[0m\u001b[91mgo: downloading github.com/gogo/protobuf v1.3.2\n\u001b[0m\u001b[91mgo: downloading github.com/fsnotify/fsnotify v1.4.9\n\u001b[0m\u001b[91mgo: downloading github.com/hashicorp/hcl v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/magiconair/properties v1.8.5\n\u001b[0m\u001b[91mgo: downloading github.com/mitchellh/mapstructure v1.4.1\n\u001b[0m\u001b[91mgo: downloading github.com/pelletier/go-toml v1.9.3\n\u001b[0m\u001b[91mgo: downloading github.com/spf13/afero v1.6.0\n\u001b[0m\u001b[91mgo: downloading github.com/spf13/cast v1.3.1\n\u001b[0m\u001b[91mgo: downloading github.com/spf13/jwalterweatherman v1.1.0\n\u001b[0m\u001b[91mgo: downloading github.com/subosito/gotenv v1.2.0\n\u001b[0m\u001b[91mgo: downloading gopkg.in/ini.v1 v1.62.0\n\u001b[0m\u001b[91mgo: downloading google.golang.org/protobuf v1.27.1\n\u001b[0m\u001b[91mgo: downloading cloud.google.com/go v0.65.0\n\u001b[0m\u001b[91mgo: downloading github.com/KyleBanks/depth v1.2.1\n\u001b[0m\u001b[91mgo: downloading github.com/go-openapi/spec v0.20.0\n\u001b[0m\u001b[91mgo: downloading golang.org/x/tools v0.1.5\n\u001b[0m\u001b[91mgo: downloading github.com/mattn/go-colorable v0.1.8\n\u001b[0m\u001b[91mgo: downloading github.com/mattn/go-isatty v0.0.12\n\u001b[0m\u001b[91mgo: downloading github.com/valyala/bytebufferpool v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/go-autorest/autorest/date v0.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/go-autorest/autorest/validation v0.3.1\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/go-autorest/tracing v0.6.0\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/go-autorest/autorest/adal v0.9.11\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/go-autorest/autorest/azure/cli v0.4.2\n\u001b[0m\u001b[91mgo: downloading github.com/Azure/go-autorest/logger v0.2.0\n\u001b[0m\u001b[91mgo: downloading github.com/dimchansky/utfbom v1.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/etcd-io/etcd v3.3.25+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/xujiajun/nutsdb v0.6.0\n\u001b[0m\u001b[91mgo: downloading github.com/uber/jaeger-lib v2.4.0+incompatible\n\u001b[0m\u001b[91mgo: downloading go.uber.org/atomic v1.9.0\n\u001b[0m\u001b[91mgo: downloading github.com/pkg/errors v0.9.1\n\u001b[0m\u001b[91mgo: downloading github.com/containerd/containerd v1.4.3\n\u001b[0m\u001b[91mgo: downloading github.com/docker/distribution v2.7.1+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/docker/go-connections v0.4.0\n\u001b[0m\u001b[91mgo: downloading github.com/opencontainers/go-digest v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/opencontainers/image-spec v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/matttproud/golang_protobuf_extensions v1.0.1\n\u001b[0m\u001b[91mgo: downloading golang.org/x/text v0.3.6\n\u001b[0m\u001b[91mgo: downloading github.com/go-openapi/jsonpointer v0.19.5\n\u001b[0m\u001b[91mgo: downloading github.com/go-openapi/jsonreference v0.19.5\n\u001b[0m\u001b[91mgo: downloading github.com/go-openapi/swag v0.19.12\n\u001b[0m\u001b[91mgo: downloading github.com/googleapis/gax-go/v2 v2.0.5\n\u001b[0m\u001b[91mgo: downloading go.opencensus.io v0.22.4\n\u001b[0m\u001b[91mgo: downloading github.com/jmespath/go-jmespath v0.4.0\n\u001b[0m\u001b[91mgo: downloading github.com/json-iterator/go v1.1.11\n\u001b[0m\u001b[91mgo: downloading github.com/modern-go/reflect2 v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/form3tech-oss/jwt-go v3.2.2+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/mitchellh/go-homedir v1.1.0\n\u001b[0m\u001b[91mgo: downloading github.com/bwmarrin/snowflake v0.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/xujiajun/mmap-go v1.0.1\n\u001b[0m\u001b[91mgo: downloading github.com/xujiajun/utils v0.0.0-20190123093513-8bf096c4f53b\n\u001b[0m\u001b[91mgo: downloading github.com/coreos/etcd v3.3.25+incompatible\n\u001b[0m\u001b[91mgo: downloading github.com/coreos/pkg v0.0.0-20180928190104-399ea9e2e55f\n\u001b[0m\u001b[91mgo: downloading github.com/google/uuid v1.3.0\n\u001b[0m\u001b[91mgo: downloading go.uber.org/zap v1.18.1\n\u001b[0m\u001b[91mgo: downloading github.com/docker/go-units v0.4.0\n\u001b[0m\u001b[91mgo: downloading github.com/PuerkitoBio/purell v1.1.1\n\u001b[0m\u001b[91mgo: downloading github.com/mailru/easyjson v0.7.6\n\u001b[0m\u001b[91mgo: downloading github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd\n\u001b[0m\u001b[91mgo: downloading github.com/coreos/go-semver v0.3.0\n\u001b[0m\u001b[91mgo: downloading github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf\n\u001b[0m\u001b[91mgo: downloading github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578\n\u001b[0m\u001b[91mgo: downloading go.uber.org/multierr v1.7.0\n\u001b[0m\u001b[91mgo: downloading github.com/josharian/intern v1.0.0\n\u001b[0m\u001b[91mgo: downloading github.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e\n\u001b[0m\u001b[91mgolang.org/x/sys/internal/unsafeheader\n\u001b[0m\u001b[91mgolang.org/x/sys/unix\n\u001b[0m\u001b[91mgopkg.in/natefinch/lumberjack.v2\n\u001b[0m\u001b[91mgopkg.in/yaml.v3\n\u001b[0m\u001b[91mgithub.com/sirupsen/logrus\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store/interfaces\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/sdk/auth/credentials\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/sdk/utils\n\u001b[0m\u001b[91mgithub.com/jmespath/go-jmespath\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-log/formatter\n\u001b[0m\u001b[91mgithub.com/snowzach/rotatefilehook\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-log\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store/config\n\u001b[0m\u001b[91mgithub.com/modern-go/concurrent\n\u001b[0m\u001b[91mgithub.com/modern-go/reflect2\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/sdk/errors\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/sdk/requests\n\u001b[0m\u001b[91mgopkg.in/ini.v1\n\u001b[0m\u001b[91mgithub.com/jpillora/backoff\n\u001b[0m\u001b[91mgithub.com/chyeh/pubip\n\u001b[0m\u001b[91mgithub.com/json-iterator/go\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log/formatter\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/call-log\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/resources\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces/connect\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/interfaces\n\u001b[0m\u001b[91mgithub.com/davecgh/go-spew/spew\n\u001b[0m\u001b[91mgolang.org/x/crypto/internal/subtle\n\u001b[0m\u001b[91mgolang.org/x/crypto/chacha20\n\u001b[0m\u001b[91mgolang.org/x/crypto/curve25519/internal/field\n\u001b[0m\u001b[91mgolang.org/x/crypto/curve25519\n\u001b[0m\u001b[91mgolang.org/x/crypto/ed25519\n\u001b[0m\u001b[91mgolang.org/x/crypto/poly1305\n\u001b[0m\u001b[91mgolang.org/x/crypto/blowfish\n\u001b[0m\u001b[91mgolang.org/x/crypto/ssh/internal/bcrypt_pbkdf\n\u001b[0m\u001b[91mgolang.org/x/crypto/ssh\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/sdk/responses\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/sdk/auth/signers\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/sdk/auth\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/sdk/auth/credentials/provider\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/sdk/endpoints\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/sdk\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/services/ecs\n\u001b[0m\u001b[91mgithub.com/aliyun/alibaba-cloud-sdk-go/services/vpc\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/awserr\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/internal/ini\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/internal/shareddefaults\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/internal/sync/singleflight\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/credentials\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/endpoints\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/internal/sdkio\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/client/metadata\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/awsutil\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/request\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/internal/sdkrand\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/client\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/corehandlers\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/credentials/processcreds\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/internal/strings\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/internal/sdkmath\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/private/protocol\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/private/protocol/rest\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/signer/v4\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/private/protocol/json/jsonutil\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/private/protocol/jsonrpc\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/private/protocol/restjson\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/service/sso\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/service/sso/ssoiface\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/credentials/ssocreds\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/private/protocol/query/queryutil\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/private/protocol/xml/xmlutil\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/private/protocol/query\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/service/sts\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/service/sts/stsiface\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/credentials/stscreds\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/csm\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/internal/sdkuri\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/ec2metadata\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/credentials/ec2rolecreds\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/credentials/endpointcreds\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/defaults\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/aws/session\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/private/protocol/ec2query\n\u001b[0m\u001b[91mgithub.com/aws/aws-sdk-go/service/ec2\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/resources\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba/connect\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/alibaba\n\u001b[0m\u001b[91mgithub.com/Azure/azure-sdk-for-go/version\n\u001b[0m\u001b[91mgithub.com/Azure/go-autorest/autorest/date\n\u001b[0m\u001b[91mgithub.com/Azure/go-autorest/logger\n\u001b[0m\u001b[91mgithub.com/Azure/go-autorest/tracing\n\u001b[0m\u001b[91mgithub.com/form3tech-oss/jwt-go\n\u001b[0m\u001b[91mgolang.org/x/crypto/pkcs12/internal/rc2\n\u001b[0m\u001b[91mgolang.org/x/crypto/pkcs12\n\u001b[0m\u001b[91mgithub.com/Azure/go-autorest/autorest/adal\n\u001b[0m\u001b[91mgithub.com/Azure/go-autorest/autorest\n\u001b[0m\u001b[91mgithub.com/Azure/go-autorest/autorest/azure\n\u001b[0m\u001b[91mgithub.com/Azure/go-autorest/autorest/to\n\u001b[0m\u001b[91mgithub.com/Azure/go-autorest/autorest/validation\n\u001b[0m\u001b[91mgithub.com/Azure/azure-sdk-for-go/services/compute/mgmt/2021-03-01/compute\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/resources\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws/connect\n\u001b[0m\u001b[91mgithub.com/Azure/azure-sdk-for-go/services/network/mgmt/2021-02-01/network\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/aws\n\u001b[0m\u001b[91mgithub.com/Azure/azure-sdk-for-go/services/resources/mgmt/2020-10-01/resources\n\u001b[0m\u001b[91mgithub.com/dimchansky/utfbom\n\u001b[0m\u001b[91mgithub.com/mitchellh/go-homedir\n\u001b[0m\u001b[91mgithub.com/Azure/go-autorest/autorest/azure/cli\n\u001b[0m\u001b[91mgithub.com/Azure/go-autorest/autorest/azure/auth\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client\n\u001b[0m\u001b[91mgithub.com/bramvdbogaerde/go-scp\n\u001b[0m\u001b[91mgolang.org/x/crypto/ssh/agent\n\u001b[0m\u001b[91mgithub.com/bramvdbogaerde/go-scp/auth\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/image\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/iam/securitygroup\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/nic\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/server\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/ace/specs\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/adaptiveip\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/client/dna/subnet\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/resources\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit/connect\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/cloudit\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/blkiodev\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/mount\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/strslice\n\u001b[0m\u001b[91mgithub.com/docker/go-connections/nat\n\u001b[0m\u001b[91mgithub.com/docker/go-units\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/container\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/versions\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/filters\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/network\n\u001b[0m\u001b[91mgithub.com/opencontainers/go-digest\n\u001b[0m\u001b[91mgithub.com/opencontainers/image-spec/specs-go\n\u001b[0m\u001b[91mgithub.com/opencontainers/image-spec/specs-go/v1\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/registry\n\u001b[0m\u001b[91mgithub.com/gogo/protobuf/proto\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/swarm/runtime\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/swarm\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types\n\u001b[0m\u001b[91mgithub.com/pkg/errors\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/codes\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/detrand\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/errors\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/encoding/protowire\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/pragma\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/reflect/protoreflect\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/encoding/messageset\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/flags\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/strs\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/encoding/text\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/genid\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/order\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/set\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/reflect/protoregistry\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/runtime/protoiface\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/proto\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/encoding/prototext\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/encoding/defval\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/descfmt\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/descopts\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/filedesc\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/encoding/tag\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/impl\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/filetype\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/internal/version\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/runtime/protoimpl\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/types/descriptorpb\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/reflect/protodesc\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/proto\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/types/known/anypb\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/ptypes/any\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/types/known/durationpb\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/ptypes/duration\n\u001b[0m\u001b[91mgoogle.golang.org/protobuf/types/known/timestamppb\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/ptypes/timestamp\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/ptypes\n\u001b[0m\u001b[91mgoogle.golang.org/genproto/googleapis/rpc/status\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/grpclog\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/connectivity\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/status\n\u001b[0m\u001b[91mgithub.com/containerd/containerd/errdefs\n\u001b[0m\u001b[91mgithub.com/containerd/containerd/log\n\u001b[0m\u001b[91mgithub.com/containerd/containerd/platforms\n\u001b[0m\u001b[91mgithub.com/docker/distribution/digestset\n\u001b[0m\u001b[91mgithub.com/docker/distribution/reference\n\u001b[0m\u001b[91mgithub.com/docker/docker/api\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/events\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/image\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/time\n\u001b[0m\u001b[91mgithub.com/docker/docker/api/types/volume\n\u001b[0m\u001b[91mgithub.com/docker/distribution/registry/api/errcode\n\u001b[0m\u001b[91mgithub.com/docker/docker/errdefs\n\u001b[0m\u001b[91mgolang.org/x/net/internal/socks\n\u001b[0m\u001b[91mgolang.org/x/net/proxy\n\u001b[0m\u001b[91mgithub.com/docker/go-connections/sockets\n\u001b[0m\u001b[91mgithub.com/docker/go-connections/tlsconfig\n\u001b[0m\u001b[91mgithub.com/docker/docker/client\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/resources\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker/connect\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/docker\n\u001b[0m\u001b[91mgoogle.golang.org/api/internal/third_party/uritemplates\n\u001b[0m\u001b[91mgoogle.golang.org/api/googleapi\n\u001b[0m\u001b[91mgolang.org/x/net/internal/timeseries\n\u001b[0m\u001b[91mgolang.org/x/net/trace\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/backoff\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/credentials/internal\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/credentials\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/metadata\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/attributes\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/serviceconfig\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/resolver\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/balancer\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/balancer/base\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/grpcrand\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/balancer/roundrobin\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/encoding\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/encoding/proto\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/backoff\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/balancerload\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/binarylog/grpc_binarylog_v1\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/binarylog\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/buffer\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/channelz\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/envconfig\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/grpcsync\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/resolver/dns\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/resolver/passthrough\n\u001b[0m\u001b[91mgolang.org/x/text/transform\n\u001b[0m\u001b[91mgolang.org/x/text/unicode/bidi\n\u001b[0m\u001b[91mgolang.org/x/text/secure/bidirule\n\u001b[0m\u001b[91mgolang.org/x/text/unicode/norm\n\u001b[0m\u001b[91mgolang.org/x/net/idna\n\u001b[0m\u001b[91mgolang.org/x/net/http/httpguts\n\u001b[0m\u001b[91mgolang.org/x/net/http2/hpack\n\u001b[0m\u001b[91mgolang.org/x/net/http2\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/syscall\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/keepalive\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/peer\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/stats\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/tap\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/internal/transport\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/naming\n\u001b[0m\u001b[91mgoogle.golang.org/grpc\n\u001b[0m\u001b[91mgithub.com/googleapis/gax-go/v2\n\u001b[0m\u001b[91mgoogle.golang.org/api/internal/gensupport\n\u001b[0m\u001b[91mgolang.org/x/net/context/ctxhttp\n\u001b[0m\u001b[91mgolang.org/x/oauth2/internal\n\u001b[0m\u001b[91mgolang.org/x/oauth2\n\u001b[0m\u001b[91mcloud.google.com/go/compute/metadata\n\u001b[0m\u001b[91mgolang.org/x/oauth2/authhandler\n\u001b[0m\u001b[91mgolang.org/x/oauth2/google/internal/externalaccount\n\u001b[0m\u001b[91mgolang.org/x/oauth2/jws\n\u001b[0m\u001b[91mgolang.org/x/oauth2/jwt\n\u001b[0m\u001b[91mgolang.org/x/oauth2/google\n\u001b[0m\u001b[91mgoogle.golang.org/api/internal\n\u001b[0m\u001b[91mgoogle.golang.org/api/option\n\u001b[0m\u001b[91mgithub.com/golang/groupcache/lru\n\u001b[0m\u001b[91mgo.opencensus.io\n\u001b[0m\u001b[91mgo.opencensus.io/internal\n\u001b[0m\u001b[91mgo.opencensus.io/trace/internal\n\u001b[0m\u001b[91mgo.opencensus.io/trace/tracestate\n\u001b[0m\u001b[91mgo.opencensus.io/trace\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/resources\n\u001b[0m\u001b[91mgo.opencensus.io/trace/propagation\n\u001b[0m\u001b[91mgo.opencensus.io/plugin/ochttp/propagation/b3\n\u001b[0m\u001b[91mgo.opencensus.io/resource\n\u001b[0m\u001b[91mgo.opencensus.io/metric/metricdata\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure/connect\n\u001b[0m\u001b[91mgo.opencensus.io/tag\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/azure\n\u001b[0m\u001b[91mgo.opencensus.io/stats/internal\n\u001b[0m\u001b[91mgo.opencensus.io/stats\n\u001b[0m\u001b[91mgo.opencensus.io/internal/tagencoding\n\u001b[0m\u001b[91mgo.opencensus.io/metric/metricproducer\n\u001b[0m\u001b[91mgo.opencensus.io/stats/view\n\u001b[0m\u001b[91mgoogle.golang.org/api/googleapi/transport\n\u001b[0m\u001b[91mgoogle.golang.org/api/transport/http/internal/propagation\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/resources\n\u001b[0m\u001b[91mgo.opencensus.io/plugin/ochttp\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock/connect\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/mock\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud\n\u001b[0m\u001b[91mgoogle.golang.org/api/transport/http\n\u001b[0m\u001b[91mgoogle.golang.org/api/compute/v1\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/pagination\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/blockstorage/v2/volumes\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/compute/v2/extensions/floatingips\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/compute/v2/servers\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/compute/v2/extensions/keypairs\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/compute/v2/extensions/secgroups\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/common/extensions\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/compute/v2/extensions\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/compute/v2/extensions/startstop\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/compute/v2/flavors\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/compute/v2/images\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/imageservice/v2/imagedata\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/utils\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/imageservice/v2/images\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/networking/v2/networks\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/networking/v2/extensions/external\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/networking/v2/extensions/layer3/routers\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/networking/v2/extensions/security/rules\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/networking/v2/ports\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/networking/v2/subnets\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/resources\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack/connect\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/identity/v2/tenants\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/identity/v2/tokens\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/identity/v3/tokens\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/identity/v3/extensions/ec2tokens\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack/identity/v3/extensions/oauth1\n\u001b[0m\u001b[91mgithub.com/gophercloud/gophercloud/openstack\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/openstack\n\u001b[0m\u001b[91mgithub.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common/errors\n\u001b[0m\u001b[91mgithub.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common/http\n\u001b[0m\u001b[91mgithub.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common/profile\n\u001b[0m\u001b[91mgithub.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common\n\u001b[0m\u001b[91mgithub.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/cvm/v20170312\n\u001b[0m\u001b[91mgithub.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/vpc/v20170312\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/resources\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp/connect\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/gcp\n\u001b[0m\u001b[91mgithub.com/gogo/protobuf/protoc-gen-gogo/descriptor\n\u001b[0m\u001b[91mgithub.com/gogo/protobuf/gogoproto\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/auth/authpb\n\u001b[0m\u001b[91mgo.uber.org/atomic\n\u001b[0m\u001b[91mgo.uber.org/multierr\n\u001b[0m\u001b[91mgo.uber.org/zap/buffer\n\u001b[0m\u001b[91mgo.uber.org/zap/internal/bufferpool\n\u001b[0m\u001b[91mgo.uber.org/zap/internal/color\n\u001b[0m\u001b[91mgo.uber.org/zap/internal/exit\n\u001b[0m\u001b[91mgo.uber.org/zap/zapcore\n\u001b[0m\u001b[91mgo.uber.org/zap\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3/balancer/connectivity\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3/balancer/picker\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/resolver/dns\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/resolver/passthrough\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3/balancer\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3/balancer/resolver/endpoint\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/etcdserver/api/v3rpc/rpctypes\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/clientv3/credentials\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/mvcc/mvccpb\n\u001b[0m\u001b[91mgoogle.golang.org/genproto/googleapis/api/annotations\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/etcdserver/etcdserverpb\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/resources\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent/connect\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/cloud-driver/drivers/tencent\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/pkg/systemd\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/raft/raftpb\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/raft\n\u001b[0m\u001b[91mgithub.com/coreos/go-systemd/journal\n\u001b[0m\u001b[91mgithub.com/coreos/pkg/capnslog\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/pkg/logutil\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/pkg/types\n\u001b[0m\u001b[91mgithub.com/coreos/go-semver/semver\n\u001b[0m\u001b[91mgithub.com/coreos/etcd/version\n\u001b[0m\u001b[91mgithub.com/google/uuid\n\u001b[0m\u001b[91mgithub.com/bwmarrin/snowflake\n\u001b[0m\u001b[91mgithub.com/xujiajun/mmap-go\n\u001b[0m\u001b[91mgithub.com/xujiajun/nutsdb/ds/list\n\u001b[0m\u001b[91mgithub.com/etcd-io/etcd/clientv3\n\u001b[0m\u001b[91mgithub.com/xujiajun/nutsdb/ds/set\n\u001b[0m\u001b[91mgithub.com/xujiajun/nutsdb/ds/zset\n\u001b[0m\u001b[91mgithub.com/xujiajun/utils/filesystem\n\u001b[0m\u001b[91mgithub.com/xujiajun/utils/strconv2\n\u001b[0m\u001b[91mgithub.com/xujiajun/nutsdb\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store/store-drivers/nutsdb-driver\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store/store-drivers/etcd-driver\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store/utils\n\u001b[0m\u001b[91mgithub.com/fsnotify/fsnotify\n\u001b[0m\u001b[91mgithub.com/cloud-barista/cb-store\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-info-manager/connection-config-info-manager\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-info-manager/credential-info-manager\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-info-manager/driver-info-manager\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-info-manager/region-info-manager\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/iid-manager\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/strconv\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/common-runtime\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/token\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/ast\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/scanner\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/parser\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/json/token\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/hcl/printer\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/json/scanner\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl/json/parser\n\u001b[0m\u001b[91mgithub.com/magiconair/properties\n\u001b[0m\u001b[91mgithub.com/hashicorp/hcl\n\u001b[0m\u001b[91mgithub.com/mitchellh/mapstructure\n\u001b[0m\u001b[91mgithub.com/pelletier/go-toml\n\u001b[0m\u001b[91mgithub.com/spf13/afero/mem\n\u001b[0m\u001b[91mgithub.com/spf13/afero\n\u001b[0m\u001b[91mgithub.com/spf13/cast\n\u001b[0m\u001b[91mgithub.com/spf13/jwalterweatherman\n\u001b[0m\u001b[91mgithub.com/spf13/pflag\n\u001b[0m\u001b[91mgithub.com/subosito/gotenv\n\u001b[0m\u001b[91mgopkg.in/yaml.v2\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/logger\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/accesslog\n\u001b[0m\u001b[91mgithub.com/dgrijalva/jwt-go\n\u001b[0m\u001b[91mgithub.com/spf13/viper\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/authjwt\n\u001b[0m\u001b[91mgithub.com/opentracing/opentracing-go/log\n\u001b[0m\u001b[91mgithub.com/opentracing/opentracing-go\n\u001b[0m\u001b[91mgithub.com/opentracing/opentracing-go/ext\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/baggage\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/config\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/reporterstats\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/spanlog\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/throttler\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/log\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-lib/metrics\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-middleware\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-middleware/recovery\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-middleware/tags\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-middleware/util/metautils\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-middleware/tracing/opentracing\n\u001b[0m\u001b[91mgithub.com/beorn7/perks/quantile\n\u001b[0m\u001b[91mgithub.com/cespare/xxhash/v2\n\u001b[0m\u001b[91mgithub.com/prometheus/client_model/go\n\u001b[0m\u001b[91mgithub.com/prometheus/client_golang/prometheus/internal\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift-gen/jaeger\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift-gen/sampling\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift-gen/zipkincore\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift-gen/baggage\n\u001b[0m\u001b[91mgithub.com/matttproud/golang_protobuf_extensions/pbutil\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/thrift-gen/agent\n\u001b[0m\u001b[91mgithub.com/prometheus/common/internal/bitbucket.org/ww/goautoneg\n\u001b[0m\u001b[91mgithub.com/prometheus/common/model\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/utils\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go\n\u001b[0m\u001b[91mgithub.com/prometheus/common/expfmt\n\u001b[0m\u001b[91mgithub.com/prometheus/procfs/internal/fs\n\u001b[0m\u001b[91mgithub.com/prometheus/procfs/internal/util\n\u001b[0m\u001b[91mgithub.com/prometheus/procfs\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/baggage/remote\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/internal/throttler/remote\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/rpcmetrics\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/transport\n\u001b[0m\u001b[91mgithub.com/uber/jaeger-client-go/config\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/interceptors/jaegertracer\n\u001b[0m\u001b[91mgolang.org/x/net/context\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/gogoproto\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/stub/cbspider\n\u001b[0m\u001b[91mgithub.com/prometheus/client_golang/prometheus\n\u001b[0m\u001b[91mgithub.com/grpc-ecosystem/go-grpc-prometheus\n\u001b[0m\u001b[91mgithub.com/prometheus/client_golang/prometheus/promhttp\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/common\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-control-manager/vm-ssh\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/cloud-info-manager\n\u001b[0m\u001b[91mgithub.com/golang/protobuf/protoc-gen-go/descriptor\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/reflection/grpc_reflection_v1alpha\n\u001b[0m\u001b[91mgoogle.golang.org/grpc/reflection\n\u001b[0m\u001b[91mgoogle.golang.org/api/sheets/v4\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime/service\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/grpc-runtime\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/table-handler\n\u001b[0m\u001b[91mgithub.com/mattn/go-isatty\n\u001b[0m\u001b[91mgithub.com/mattn/go-colorable\n\u001b[0m\u001b[91mgithub.com/labstack/gommon/color\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/common\n\u001b[0m\u001b[91mgithub.com/valyala/bytebufferpool\n\u001b[0m\u001b[91mgithub.com/valyala/fasttemplate\n\u001b[0m\u001b[91mgithub.com/labstack/gommon/log\n\u001b[0m\u001b[91mgolang.org/x/crypto/acme\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/childkat\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime/momkat\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/meerkat-runtime\n\u001b[0m\u001b[91mgolang.org/x/net/http2/h2c\n\u001b[0m\u001b[91mgolang.org/x/crypto/acme/autocert\n\u001b[0m\u001b[91mgithub.com/alecthomas/template/parse\n\u001b[0m\u001b[91mgithub.com/labstack/echo/v4\n\u001b[0m\u001b[91mgithub.com/alecthomas/template\n\u001b[0m\u001b[91mgithub.com/KyleBanks/depth\n\u001b[0m\u001b[91mgithub.com/josharian/intern\n\u001b[0m\u001b[91mgithub.com/mailru/easyjson/jlexer\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web\n\u001b[0m\u001b[91mgithub.com/mailru/easyjson/buffer\n\u001b[0m\u001b[91mgithub.com/mailru/easyjson/jwriter\n\u001b[0m\u001b[91mgithub.com/go-openapi/swag\n\u001b[0m\u001b[91mgithub.com/PuerkitoBio/urlesc\n\u001b[0m\u001b[91mgolang.org/x/text/width\n\u001b[0m\u001b[91mgithub.com/PuerkitoBio/purell\n\u001b[0m\u001b[91mgolang.org/x/tools/internal/typeparams\n\u001b[0m\u001b[91mgolang.org/x/tools/go/ast/astutil\n\u001b[0m\u001b[91mgithub.com/go-openapi/jsonpointer\n\u001b[0m\u001b[91mgithub.com/go-openapi/jsonreference\n\u001b[0m\u001b[91mgithub.com/go-openapi/spec\n\u001b[0m\u001b[91mgolang.org/x/tools/go/buildutil\n\u001b[0m\u001b[91mgolang.org/x/sys/execabs\n\u001b[0m\u001b[91mgolang.org/x/tools/go/internal/cgo\n\u001b[0m\u001b[91mgolang.org/x/tools/go/loader\n\u001b[0m\u001b[91mgithub.com/labstack/gommon/bytes\n\u001b[0m\u001b[91mgithub.com/labstack/gommon/random\n\u001b[0m\u001b[91mgolang.org/x/time/rate\n\u001b[0m\u001b[91mgithub.com/labstack/echo/v4/middleware\n\u001b[0m\u001b[91mgithub.com/swaggo/swag\n\u001b[0m\u001b[91mgolang.org/x/net/webdav/internal/xml\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/docs\n\u001b[0m\u001b[91mgolang.org/x/net/publicsuffix\n\u001b[0m\u001b[91mgolang.org/x/net/webdav\n\u001b[0m\u001b[91mgithub.com/go-resty/resty/v2\n\u001b[0m\u001b[91mgithub.com/spf13/cobra\n\u001b[0m\u001b[91mgithub.com/swaggo/files\n\u001b[0m\u001b[91mgithub.com/swaggo/echo-swagger\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime\n\u001b[0m\u001b[91mgithub.com/cloud-barista/poc-cicd-spider/api-runtime\n\u001b[0mRemoving intermediate container f2c5233e823b\n ---> 40ebca9950b0\nStep 7/24 : FROM ubuntu:latest as prod\nlatest: Pulling from library/ubuntu\nDigest: sha256:82becede498899ec668628e7cb0ad87b6e1c371cb8a1e597d83a47fac21d6af3\nStatus: Downloaded newer image for ubuntu:latest\n ---> 1318b700e415\nStep 8/24 : RUN apt update\n ---> Running in 31f777b7b5bb\n\u001b[91m\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n\n\u001b[0mGet:1 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\nGet:2 http://archive.ubuntu.com/ubuntu focal InRelease [265 kB]\nGet:3 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [432 kB]\nGet:4 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [30.6 kB]\nGet:5 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [990 kB]\nGet:6 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\nGet:7 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [787 kB]\nGet:8 http://archive.ubuntu.com/ubuntu focal-backports InRelease [101 kB]\nGet:9 http://archive.ubuntu.com/ubuntu focal/multiverse amd64 Packages [177 kB]\nGet:10 http://archive.ubuntu.com/ubuntu focal/main amd64 Packages [1275 kB]\nGet:11 http://archive.ubuntu.com/ubuntu focal/universe amd64 Packages [11.3 MB]\nGet:12 http://archive.ubuntu.com/ubuntu focal/restricted amd64 Packages [33.4 kB]\nGet:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1427 kB]\nGet:14 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [39.0 kB]\nGet:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [478 kB]\nGet:16 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1056 kB]\nGet:17 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [2668 B]\nGet:18 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [6319 B]\nFetched 18.7 MB in 2s (8640 kB/s)\nReading package lists...\nBuilding dependency tree...\nReading state information...\n3 packages can be upgraded. Run 'apt list --upgradable' to see them.\nRemoving intermediate container 31f777b7b5bb\n ---> 2989ef969b14\nStep 9/24 : RUN apt install -y ca-certificates\n ---> Running in 01932c91c27e\n\u001b[91m\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n\n\u001b[0mReading package lists...\nBuilding dependency tree...\nReading state information...\nThe following additional packages will be installed:\n  libssl1.1 openssl\nThe following NEW packages will be installed:\n  ca-certificates libssl1.1 openssl\n0 upgraded, 3 newly installed, 0 to remove and 3 not upgraded.\nNeed to get 2086 kB of archives.\nAfter this operation, 5801 kB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssl1.1 amd64 1.1.1f-1ubuntu2.5 [1320 kB]\nGet:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 openssl amd64 1.1.1f-1ubuntu2.5 [621 kB]\nGet:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 ca-certificates all 20210119~20.04.1 [146 kB]\n\u001b[91mdebconf: delaying package configuration, since apt-utils is not installed\n\u001b[0mFetched 2086 kB in 1s (2558 kB/s)\nSelecting previously unselected package libssl1.1:amd64.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 4127 files and directories currently installed.)\r\nPreparing to unpack .../libssl1.1_1.1.1f-1ubuntu2.5_amd64.deb ...\r\nUnpacking libssl1.1:amd64 (1.1.1f-1ubuntu2.5) ...\r\nSelecting previously unselected package openssl.\r\nPreparing to unpack .../openssl_1.1.1f-1ubuntu2.5_amd64.deb ...\r\nUnpacking openssl (1.1.1f-1ubuntu2.5) ...\r\nSelecting previously unselected package ca-certificates.\r\nPreparing to unpack .../ca-certificates_20210119~20.04.1_all.deb ...\r\nUnpacking ca-certificates (20210119~20.04.1) ...\r\nSetting up libssl1.1:amd64 (1.1.1f-1ubuntu2.5) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\ndebconf: unable to initialize frontend: Readline\r\ndebconf: (Can't locate Term/ReadLine.pm in @INC (you may need to install the Term::ReadLine module) (@INC contains: /etc/perl /usr/local/lib/x86_64-linux-gnu/perl/5.30.0 /usr/local/share/perl/5.30.0 /usr/lib/x86_64-linux-gnu/perl5/5.30 /usr/share/perl5 /usr/lib/x86_64-linux-gnu/perl/5.30 /usr/share/perl/5.30 /usr/local/lib/site_perl /usr/lib/x86_64-linux-gnu/perl-base) at /usr/share/perl5/Debconf/FrontEnd/Readline.pm line 7.)\r\ndebconf: falling back to frontend: Teletype\r\nSetting up openssl (1.1.1f-1ubuntu2.5) ...\r\nSetting up ca-certificates (20210119~20.04.1) ...\r\ndebconf: unable to initialize frontend: Dialog\r\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\r\ndebconf: falling back to frontend: Readline\r\ndebconf: unable to initialize frontend: Readline\r\ndebconf: (Can't locate Term/ReadLine.pm in @INC (you may need to install the Term::ReadLine module) (@INC contains: /etc/perl /usr/local/lib/x86_64-linux-gnu/perl/5.30.0 /usr/local/share/perl/5.30.0 /usr/lib/x86_64-linux-gnu/perl5/5.30 /usr/share/perl5 /usr/lib/x86_64-linux-gnu/perl/5.30 /usr/share/perl/5.30 /usr/local/lib/site_perl /usr/lib/x86_64-linux-gnu/perl-base) at /usr/share/perl5/Debconf/FrontEnd/Readline.pm line 7.)\r\ndebconf: falling back to frontend: Teletype\r\nUpdating certificates in /etc/ssl/certs...\r\n129 added, 0 removed; done.\r\nProcessing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\nProcessing triggers for ca-certificates (20210119~20.04.1) ...\r\nUpdating certificates in /etc/ssl/certs...\r\n0 added, 0 removed; done.\r\nRunning hooks in /etc/ca-certificates/update.d...\r\ndone.\r\nRemoving intermediate container 01932c91c27e\n ---> 5aa4b147f8ee\nStep 10/24 : RUN rm /bin/sh && ln -s /bin/bash /bin/sh\n ---> Running in 3730af9af2bc\nRemoving intermediate container 3730af9af2bc\n ---> 035a8832fc9c\nStep 11/24 : WORKDIR /root/go/src/github.com/cloud-barista/poc-cicd-spider\n ---> Running in a8be22757803\nRemoving intermediate container a8be22757803\n ---> c142419c7d0a\nStep 12/24 : COPY --from=builder /go/src/github.com/cloud-barista/poc-cicd-spider/conf/* /root/go/src/github.com/cloud-barista/poc-cicd-spider/conf/\n ---> 3f61c5da76ed\nStep 13/24 : COPY --from=builder /go/src/github.com/cloud-barista/poc-cicd-spider/api-runtime/cb-spider /root/go/src/github.com/cloud-barista/poc-cicd-spider/api-runtime/\n ---> ce2fa0ba7b08\nStep 14/24 : COPY --from=builder /go/src/github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web/images/cb-spider-circle-logo.png /root/go/src/github.com/cloud-barista/poc-cicd-spider/api-runtime/rest-runtime/admin-web/images/\n ---> d8eadd16f6a0\nStep 15/24 : ENV CBSPIDER_ROOT /root/go/src/github.com/cloud-barista/poc-cicd-spider\n ---> Running in 246761e73c08\nRemoving intermediate container 246761e73c08\n ---> 155a0684254f\nStep 16/24 : ENV CBSTORE_ROOT /root/go/src/github.com/cloud-barista/poc-cicd-spider\n ---> Running in 9ff40f790f61\nRemoving intermediate container 9ff40f790f61\n ---> ad0fbed02f69\nStep 17/24 : ENV CBLOG_ROOT /root/go/src/github.com/cloud-barista/poc-cicd-spider\n ---> Running in ae159f8225c9\nRemoving intermediate container ae159f8225c9\n ---> 18e285d9871b\nStep 18/24 : ENV LOCALHOST OFF\n ---> Running in 670969acfe59\nRemoving intermediate container 670969acfe59\n ---> c9e3375a4620\nStep 19/24 : ENV PLUGIN_SW OFF\n ---> Running in 3b50b1094531\nRemoving intermediate container 3b50b1094531\n ---> 50c1f4998790\nStep 20/24 : ENV MEERKAT OFF\n ---> Running in 8b61eb71c96c\nRemoving intermediate container 8b61eb71c96c\n ---> a11e57b40a99\nStep 21/24 : ENTRYPOINT [ \"/root/go/src/github.com/cloud-barista/poc-cicd-spider/api-runtime/cb-spider\" ]\n ---> Running in da61446b0301\nRemoving intermediate container da61446b0301\n ---> c89399e48672\nStep 22/24 : EXPOSE 1024\n ---> Running in 511a639a6d41\nRemoving intermediate container 511a639a6d41\n ---> 613cc5c1b7a1\nStep 23/24 : EXPOSE 2048\n ---> Running in 46dfbc1eedac\nRemoving intermediate container 46dfbc1eedac\n ---> 11d6f83a7cfe\nStep 24/24 : EXPOSE 4096\n ---> Running in a685e3504e47\nRemoving intermediate container a685e3504e47\n ---> 7ec3acc08b93\nSuccessfully built 7ec3acc08b93\n"},"publish":{"run":0,"check":0,"details":""}},"selfhost":{"run":1,"check":0,"details":"Linux ip-172-31-1-133 5.4.0-1045-aws #47~18.04.1-Ubuntu SMP Tue Apr 13 15:58:14 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n"}}